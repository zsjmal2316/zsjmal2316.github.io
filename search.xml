<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MySQL存储引擎-5</title>
      <link href="2021/03/02/MySQL%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E-5/"/>
      <url>2021/03/02/MySQL%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E-5/</url>
      
        <content type="html"><![CDATA[<h1 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h1><h2 id="存储引擎介绍"><a href="#存储引擎介绍" class="headerlink" title="存储引擎介绍"></a>存储引擎介绍</h2><p>存储引擎相当于Linux文件系统，只不过比文件系统强大，存储引擎是MySQL核心组件之一，在MySQL中是以插件的形式来提供的，InnoDB是MySQL最流行的存储引擎，XtraDB是Percona分支的默认存储引擎，可以理解是InnoDB的定制透明版本，TokuDB适合密集型写入的存储引擎，压缩比较高。我们可以在不同的业务场景下选择合适的存储引擎</p><p><strong>查看MySQL支持的存储引擎</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">show</span> <span class="selector-tag">engines</span>;</span><br><span class="line">+<span class="selector-tag">--------------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">----------------------------------------------------------------</span>+<span class="selector-tag">--------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">------------</span>+</span><br><span class="line">| Engine             | Support | Comment                                                        | Transactions | XA   | Savepoints |</span><br><span class="line">+<span class="selector-tag">--------------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">----------------------------------------------------------------</span>+<span class="selector-tag">--------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">------------</span>+</span><br><span class="line">| CSV                | YES     | CSV storage engine                                             | NO           | NO   | NO         |</span><br><span class="line">| MRG_MYISAM         | YES     | Collection of identical MyISAM tables                          | NO           | NO   | NO         |</span><br><span class="line">| MyISAM             | YES     | MyISAM storage engine                                          | NO           | NO   | NO         |</span><br><span class="line">| BLACKHOLE          | YES     | /dev/null storage engine (anything you write to it disappears) | NO           | NO   | NO         |</span><br><span class="line">| PERFORMANCE_SCHEMA | YES     | Performance Schema                                             | NO           | NO   | NO         |</span><br><span class="line">| MEMORY             | YES     | Hash based, stored in memory, useful for temporary tables      | NO           | NO   | NO         |</span><br><span class="line">| ARCHIVE            | YES     | Archive storage engine                                         | NO           | NO   | NO         |</span><br><span class="line">| InnoDB             | DEFAULT | Supports transactions, row-level locking, and foreign keys     | YES          | YES  | YES        |</span><br><span class="line">| FEDERATED          | NO      | Federated MySQL storage engine                                 | NULL         | NULL | NULL       |</span><br><span class="line">+<span class="selector-tag">--------------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">----------------------------------------------------------------</span>+<span class="selector-tag">--------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">------------</span>+</span><br></pre></td></tr></table></figure><p><strong>查看MySQL默认使用的存储引擎</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> @<span class="keyword">@default_storage_engine</span>;</span><br><span class="line">+<span class="selector-tag">--------------------------</span>+</span><br><span class="line">| @@default_storage_engine |</span><br><span class="line">+<span class="selector-tag">--------------------------</span>+</span><br><span class="line">| InnoDB                   |</span><br><span class="line">+<span class="selector-tag">--------------------------</span>+</span><br></pre></td></tr></table></figure><p><strong>查看world库中所有表使用的存储引擎</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; SELECT table_schema,table_name,ENGINE FROM information_schema.tables WHERE table_schema IN (&#x27;world&#x27;);</span><br><span class="line">+<span class="selector-tag">--------------</span>+<span class="selector-tag">-----------------</span>+<span class="selector-tag">--------</span>+</span><br><span class="line">| table_schema | table_name      | ENGINE |</span><br><span class="line">+<span class="selector-tag">--------------</span>+<span class="selector-tag">-----------------</span>+<span class="selector-tag">--------</span>+</span><br><span class="line">| world        | city            | InnoDB |</span><br><span class="line">| world        | country         | InnoDB |</span><br><span class="line">| world        | countrylanguage | InnoDB |</span><br><span class="line">+<span class="selector-tag">--------------</span>+<span class="selector-tag">-----------------</span>+<span class="selector-tag">--------</span>+</span><br></pre></td></tr></table></figure><p><strong>配置MySQL存储引擎</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/my.cnf</span><br><span class="line">default_storage_engine=InnoDB</span><br></pre></td></tr></table></figure><h2 id="InnoDB体系结构"><a href="#InnoDB体系结构" class="headerlink" title="InnoDB体系结构"></a>InnoDB体系结构</h2><p>三个部分，上面的是缓存层，中间是线程层，下面是系统文件层，在每个层里面又会不断地细分，在MySQL里面存储的单位是页，大小是16K</p><p>缓存层包含buffer和cache，其中buffer对应缓存修改的数据（比如insert buffer），cache对应缓存读取的舒适（比如page cache），通过缓存可以提高MySQL读写数据的效率</p><p>系统文件层是相应的数据字典、数据文件和日志文件，其中binlog是MySQL Server层</p><p>多线程设计是InnoDB的一大亮点，通过多线程的方式可以把缓存层与系统文件层的操作高效组织起来，使得Innodb可以提供完整的数据服务</p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210301113303766.png"></p><h2 id="查看InnoDB状态的小技巧"><a href="#查看InnoDB状态的小技巧" class="headerlink" title="查看InnoDB状态的小技巧"></a>查看InnoDB状态的小技巧</h2><p>MySQL中如果要查看InnoDB的状态，推荐的方式是使用命令<code>show engine innodb status</code>.</p><p>头部内容信息显示当前的日期和时间，以及自上次输出依赖经过的时长，从时间和描述可看到这个命令的输出不是实时的结果</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">show</span> <span class="selector-tag">engine</span> <span class="selector-tag">innodb</span> <span class="selector-tag">status</span>\<span class="selector-tag">G</span>:</span><br><span class="line">*************************** 1. <span class="selector-tag">row</span> ***************************</span><br><span class="line">  <span class="selector-tag">Type</span>: <span class="selector-tag">InnoDB</span></span><br><span class="line">  <span class="selector-tag">Name</span>: </span><br><span class="line"><span class="selector-tag">Status</span>: </span><br><span class="line">=====================================</span><br><span class="line">2021<span class="selector-tag">-02-18</span> 22<span class="selector-pseudo">:30</span><span class="selector-pseudo">:51</span> 0<span class="selector-tag">x7fe3880f4700</span> <span class="selector-tag">INNODB</span> <span class="selector-tag">MONITOR</span> <span class="selector-tag">OUTPUT</span></span><br><span class="line">=====================================</span><br><span class="line"><span class="selector-tag">Per</span> <span class="selector-tag">second</span> <span class="selector-tag">averages</span> <span class="selector-tag">calculated</span> <span class="selector-tag">from</span> <span class="selector-tag">the</span> <span class="selector-tag">last</span> 5 <span class="selector-tag">seconds</span></span><br></pre></td></tr></table></figure><h3 id="如何查看show-engine-innodb-status保留下的内容"><a href="#如何查看show-engine-innodb-status保留下的内容" class="headerlink" title="如何查看show engine innodb status保留下的内容"></a>如何查看show engine innodb status保留下的内容</h3><p><strong>1. 首先查看mysqld的进程号</strong></p><blockquote><p>可以看到要找的进程号是：9315</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ ps -ef|grep mysqld|grep -v grep</span><br><span class="line">mysql      2846      1  0 Feb16 ?        00:03:04 /application/mysql/bin/mysqld --defaults-file=/data/3309/my.cnf</span><br><span class="line">mysql      2880      1  0 Feb16 ?        00:03:14 /application/mysql/bin/mysqld --defaults-file=/data/3308/my.cnf</span><br><span class="line">mysql      2914      1  0 Feb16 ?        00:03:12 /application/mysql/bin/mysqld --defaults-file=/data/3307/my.cnf</span><br><span class="line">root       9138      1  0 01:46 ?        00:00:00 /bin/sh /application/mysql/bin/mysqld_safe --datadir=/data/mysql/data --pid-file=/data/mysql/data/mysql.pid</span><br><span class="line">mysql      9315   9138  0 01:46 ?        00:02:00 /application/mysql/bin/mysqld --basedir=/application/mysql --datadir=/data/mysql/data --plugin-dir=/application/mysql/lib/plugin --user=mysql --log-error=mysql.err --pid-file=/data/mysql/data/mysql.pid --socket=/tmp/mysql.sock</span><br></pre></td></tr></table></figure><p><strong>2. 在操作系统层面查看上述MySQL的句柄，显示如下</strong></p><blockquote><p>但是这么多文件，无法判定那个文件是要我们找的</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$  ll /proc/9315/fd|grep deleted</span><br><span class="line"><span class="selector-tag">lrwx------</span>. 1 <span class="selector-tag">root</span> <span class="selector-tag">root</span> 64 <span class="selector-tag">Feb</span> 18 22<span class="selector-pseudo">:25</span> 12 <span class="selector-tag">-</span>&gt; /<span class="selector-tag">tmp</span>/<span class="selector-tag">ibC9Z4PI</span> (<span class="selector-tag">deleted</span>)</span><br><span class="line"><span class="selector-tag">lrwx------</span>. 1 <span class="selector-tag">root</span> <span class="selector-tag">root</span> 64 <span class="selector-tag">Feb</span> 18 22<span class="selector-pseudo">:25</span> 27 <span class="selector-tag">-</span>&gt; /<span class="selector-tag">data</span>/<span class="selector-tag">mysql</span>/<span class="selector-tag">data</span>/<span class="selector-tag">world</span>/<span class="selector-tag">test</span><span class="selector-class">.ibd</span> (<span class="selector-tag">deleted</span>)</span><br><span class="line"><span class="selector-tag">lrwx------</span>. 1 <span class="selector-tag">root</span> <span class="selector-tag">root</span> 64 <span class="selector-tag">Feb</span> 18 22<span class="selector-pseudo">:25</span> 28 <span class="selector-tag">-</span>&gt; /<span class="selector-tag">data</span>/<span class="selector-tag">mysql</span>/<span class="selector-tag">data</span>/<span class="selector-tag">world</span>/<span class="selector-tag">test1</span><span class="selector-class">.ibd</span> (<span class="selector-tag">deleted</span>)</span><br><span class="line"><span class="selector-tag">lrwx------</span>. 1 <span class="selector-tag">root</span> <span class="selector-tag">root</span> 64 <span class="selector-tag">Feb</span> 18 22<span class="selector-pseudo">:25</span> 29 <span class="selector-tag">-</span>&gt; /<span class="selector-tag">data</span>/<span class="selector-tag">mysql</span>/<span class="selector-tag">data</span>/<span class="selector-tag">binlog</span>/<span class="selector-tag">t1</span><span class="selector-class">.ibd</span> (<span class="selector-tag">deleted</span>)</span><br><span class="line"><span class="selector-tag">lrwx------</span>. 1 <span class="selector-tag">root</span> <span class="selector-tag">root</span> 64 <span class="selector-tag">Feb</span> 18 22<span class="selector-pseudo">:25</span> 5 <span class="selector-tag">-</span>&gt; /<span class="selector-tag">tmp</span>/<span class="selector-tag">ibRoyuZC</span> (<span class="selector-tag">deleted</span>)</span><br><span class="line"><span class="selector-tag">lrwx------</span>. 1 <span class="selector-tag">root</span> <span class="selector-tag">root</span> 64 <span class="selector-tag">Feb</span> 18 22<span class="selector-pseudo">:25</span> 6 <span class="selector-tag">-</span>&gt; /<span class="selector-tag">tmp</span>/<span class="selector-tag">ibdDJsjf</span> (<span class="selector-tag">deleted</span>)</span><br><span class="line"><span class="selector-tag">lrwx------</span>. 1 <span class="selector-tag">root</span> <span class="selector-tag">root</span> 64 <span class="selector-tag">Feb</span> 18 22<span class="selector-pseudo">:25</span> 7 <span class="selector-tag">-</span>&gt; /<span class="selector-tag">tmp</span>/<span class="selector-tag">ibkyUxDR</span> (<span class="selector-tag">deleted</span>)</span><br><span class="line"><span class="selector-tag">lrwx------</span>. 1 <span class="selector-tag">root</span> <span class="selector-tag">root</span> 64 <span class="selector-tag">Feb</span> 18 22<span class="selector-pseudo">:25</span> 8 <span class="selector-tag">-</span>&gt; /<span class="selector-tag">tmp</span>/<span class="selector-tag">ibIk2Dm6</span> (<span class="selector-tag">deleted</span>)</span><br><span class="line"><span class="selector-tag">lrwx------</span>. 1 <span class="selector-tag">root</span> <span class="selector-tag">root</span> 64 <span class="selector-tag">Feb</span> 18 22<span class="selector-pseudo">:25</span> 90 <span class="selector-tag">-</span>&gt; /<span class="selector-tag">data</span>/<span class="selector-tag">mysql</span>/<span class="selector-tag">data</span>/<span class="selector-tag">world</span>/<span class="selector-tag">pp</span><span class="selector-class">.ibd</span> (<span class="selector-tag">deleted</span>)</span><br><span class="line"><span class="selector-tag">lrwx------</span>. 1 <span class="selector-tag">root</span> <span class="selector-tag">root</span> 64 <span class="selector-tag">Feb</span> 18 22<span class="selector-pseudo">:25</span> 91 <span class="selector-tag">-</span>&gt; /<span class="selector-tag">data</span>/<span class="selector-tag">mysql</span>/<span class="selector-tag">data</span>/<span class="selector-tag">world</span>/<span class="selector-tag">t100</span><span class="selector-class">.ibd</span> (<span class="selector-tag">deleted</span>)</span><br></pre></td></tr></table></figure><p><strong>3. 可以根据lsof命令来输出句柄信息，显示如下</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ lsof -c mysqld|grep deleted</span><br><span class="line"><span class="selector-tag">mysqld</span>    2914 <span class="selector-tag">mysql</span>   12<span class="selector-tag">u</span>   <span class="selector-tag">REG</span>              253,0         0 17215061 /<span class="selector-tag">tmp</span>/<span class="selector-tag">ibYlTgqJ</span> (<span class="selector-tag">deleted</span>)</span><br><span class="line"><span class="selector-tag">mysqld_sa</span> 9138  <span class="selector-tag">root</span>    2<span class="selector-tag">u</span>   <span class="selector-tag">CHR</span>              136,3       0<span class="selector-tag">t0</span>        6 /<span class="selector-tag">dev</span>/<span class="selector-tag">pts</span>/3 (<span class="selector-tag">deleted</span>)</span><br><span class="line"><span class="selector-tag">mysqld</span>    9315 <span class="selector-tag">mysql</span>    5<span class="selector-tag">u</span>   <span class="selector-tag">REG</span>              253,0      4363 16777294 /<span class="selector-tag">tmp</span>/<span class="selector-tag">ibRoyuZC</span> (<span class="selector-tag">deleted</span>)</span><br><span class="line"><span class="selector-tag">mysqld</span>    9315 <span class="selector-tag">mysql</span>    6<span class="selector-tag">u</span>   <span class="selector-tag">REG</span>              253,0        97 16778321 /<span class="selector-tag">tmp</span>/<span class="selector-tag">ibdDJsjf</span> (<span class="selector-tag">deleted</span>)</span><br><span class="line"><span class="selector-tag">mysqld</span>    9315 <span class="selector-tag">mysql</span>    7<span class="selector-tag">u</span>   <span class="selector-tag">REG</span>              253,0         0 16785261 /<span class="selector-tag">tmp</span>/<span class="selector-tag">ibkyUxDR</span> (<span class="selector-tag">deleted</span>)</span><br><span class="line"><span class="selector-tag">mysqld</span>    9315 <span class="selector-tag">mysql</span>    8<span class="selector-tag">u</span>   <span class="selector-tag">REG</span>              253,0         0 17458882 /<span class="selector-tag">tmp</span>/<span class="selector-tag">ibIk2Dm6</span> (<span class="selector-tag">deleted</span>)</span><br><span class="line"><span class="selector-tag">mysqld</span>    9315 <span class="selector-tag">mysql</span>   12<span class="selector-tag">u</span>   <span class="selector-tag">REG</span>              253,0         0 17458885 /<span class="selector-tag">tmp</span>/<span class="selector-tag">ibC9Z4PI</span> (<span class="selector-tag">deleted</span>)</span><br><span class="line"><span class="selector-tag">mysqld</span>    9315 <span class="selector-tag">mysql</span>   27<span class="selector-tag">uW</span>  <span class="selector-tag">REG</span>               8,16     98304  8416762 /<span class="selector-tag">data</span>/<span class="selector-tag">mysql</span>/<span class="selector-tag">data</span>/<span class="selector-tag">world</span>/<span class="selector-tag">test</span><span class="selector-class">.ibd</span> (<span class="selector-tag">deleted</span>)</span><br><span class="line"><span class="selector-tag">mysqld</span>    9315 <span class="selector-tag">mysql</span>   28<span class="selector-tag">uW</span>  <span class="selector-tag">REG</span>               8,16     98304  8416764 /<span class="selector-tag">data</span>/<span class="selector-tag">mysql</span>/<span class="selector-tag">data</span>/<span class="selector-tag">world</span>/<span class="selector-tag">test1</span><span class="selector-class">.ibd</span> (<span class="selector-tag">deleted</span>)</span><br><span class="line"><span class="selector-tag">mysqld</span>    9315 <span class="selector-tag">mysql</span>   29<span class="selector-tag">uW</span>  <span class="selector-tag">REG</span>               8,16     98304  8416768 /<span class="selector-tag">data</span>/<span class="selector-tag">mysql</span>/<span class="selector-tag">data</span>/<span class="selector-tag">binlog</span>/<span class="selector-tag">t1</span><span class="selector-class">.ibd</span> (<span class="selector-tag">deleted</span>)</span><br><span class="line"><span class="selector-tag">mysqld</span>    9315 <span class="selector-tag">mysql</span>   90<span class="selector-tag">uW</span>  <span class="selector-tag">REG</span>               8,16     98304  8416760 /<span class="selector-tag">data</span>/<span class="selector-tag">mysql</span>/<span class="selector-tag">data</span>/<span class="selector-tag">world</span>/<span class="selector-tag">pp</span><span class="selector-class">.ibd</span> (<span class="selector-tag">deleted</span>)</span><br><span class="line"><span class="selector-tag">mysqld</span>    9315 <span class="selector-tag">mysql</span>   91<span class="selector-tag">uW</span>  <span class="selector-tag">REG</span>               8,16  79691776  8416757 /<span class="selector-tag">data</span>/<span class="selector-tag">mysql</span>/<span class="selector-tag">data</span>/<span class="selector-tag">world</span>/<span class="selector-tag">t100</span><span class="selector-class">.ibd</span> (<span class="selector-tag">deleted</span>)</span><br></pre></td></tr></table></figure><blockquote><p>如果没有该命令，则使用该命令下载：yum install -y lsof</p><p>需要注意第7列，可以看到只有两个是有数据的，分别查看一下就得到show engine innodb status的输出结果，即文件/tmp/ibRoyuZC，而映射的是5号文件</p></blockquote><p><strong>4. 查看5号文件，得到信息</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ pwd</span><br><span class="line">/<span class="selector-tag">proc</span>/9315/<span class="selector-tag">fd</span></span><br><span class="line">$ cat 5</span><br><span class="line"></span><br><span class="line">=====================================</span><br><span class="line">2021<span class="selector-tag">-02-18</span> 22<span class="selector-pseudo">:30</span><span class="selector-pseudo">:51</span> 0<span class="selector-tag">x7fe3880f4700</span> <span class="selector-tag">INNODB</span> <span class="selector-tag">MONITOR</span> <span class="selector-tag">OUTPUT</span></span><br><span class="line">=====================================</span><br><span class="line"><span class="selector-tag">Per</span> <span class="selector-tag">second</span> <span class="selector-tag">averages</span> <span class="selector-tag">calculated</span> <span class="selector-tag">from</span> <span class="selector-tag">the</span> <span class="selector-tag">last</span> 5 <span class="selector-tag">seconds</span></span><br></pre></td></tr></table></figure><h2 id="InnoDB的多线程技术"><a href="#InnoDB的多线程技术" class="headerlink" title="InnoDB的多线程技术"></a>InnoDB的多线程技术</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210301123223470.png" alt="."></p><p>InnoDB的线程主要分为4类：Master Thread、IO Thread、Purge Thread和Page Cleaner Thread</p><p>Master Thread是InnoDB的核心线程，早期的很多事情都是由它来做，算是一个全栈线程。自MySQL 5.5版开始引入了purge thread，将purge任务从master中独立出来，值MySQL 5.6.2版开始引入了Page cleaner thread</p><table><thead><tr><th>线程</th><th>功能描述</th><th>相关数据库参数</th></tr></thead><tbody><tr><td>Master Thread</td><td>是核心的后台线程，主要负责异步刷新和数据－致性处理</td><td></td></tr><tr><td>IO Thread</td><td>使用了异步IO模型，负责处理不同类型的IO请求回调</td><td>innodb_read_io_threads、innodb_write_io_threads</td></tr><tr><td>Purge Thread</td><td>事务提交后回收已经使用并分配的undo页，线程数从1提高到4，加快标记为废弃undo页的回收速度</td><td>innodb_purge_threads</td></tr><tr><td>Page Cleaner Thread</td><td>执行buffer pool里面脏页刷新操作，可以进行调整，默认为1，最大为64</td><td>innodb_page_cleaners</td></tr></tbody></table><p>其中Master Thread在输出如下：测试环境下，没有什么负载，其中srv_master_thread loops是Master线程的循环次数，每次循环时会选择一种状态（atcive、shutdown、idle）执行，其中Active数量增加与数据变化有关，与查询无关，可以通过srv_active和srv_idle的差异看出</p><p>通过对比active和idle的值，来获取系统整体负载情况，如果Active的值越大，证明服务越繁忙。这里是测试环境，所以idle多余active</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">BACKGROUND</span> <span class="selector-tag">THREAD</span></span><br><span class="line"><span class="selector-tag">-----------------</span></span><br><span class="line"><span class="selector-tag">srv_master_thread</span> <span class="selector-tag">loops</span>: 70 <span class="selector-tag">srv_active</span>, 0 <span class="selector-tag">srv_shutdown</span>, 75924 <span class="selector-tag">srv_idle</span></span><br><span class="line"><span class="selector-tag">srv_master_thread</span> <span class="selector-tag">log</span> <span class="selector-tag">flush</span> <span class="selector-tag">and</span> <span class="selector-tag">writes</span>: 75994</span><br></pre></td></tr></table></figure><p>IO thread都是异步请求，其中read thread默认为4个，write thread默认为4个，log thread和insert buffer thread各1个，read和write都可以通过上述表格参数调整</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">--------</span></span><br><span class="line"><span class="selector-tag">FILE</span> <span class="selector-tag">I</span>/<span class="selector-tag">O</span></span><br><span class="line"><span class="selector-tag">--------</span></span><br><span class="line"><span class="selector-tag">I</span>/<span class="selector-tag">O</span> <span class="selector-tag">thread</span> 0 <span class="selector-tag">state</span>: <span class="selector-tag">waiting</span> <span class="selector-tag">for</span> <span class="selector-tag">completed</span> <span class="selector-tag">aio</span> <span class="selector-tag">requests</span> (<span class="selector-tag">insert</span> <span class="selector-tag">buffer</span> <span class="selector-tag">thread</span>)</span><br><span class="line"><span class="selector-tag">I</span>/<span class="selector-tag">O</span> <span class="selector-tag">thread</span> 1 <span class="selector-tag">state</span>: <span class="selector-tag">waiting</span> <span class="selector-tag">for</span> <span class="selector-tag">completed</span> <span class="selector-tag">aio</span> <span class="selector-tag">requests</span> (<span class="selector-tag">log</span> <span class="selector-tag">thread</span>)</span><br><span class="line"><span class="selector-tag">I</span>/<span class="selector-tag">O</span> <span class="selector-tag">thread</span> 2 <span class="selector-tag">state</span>: <span class="selector-tag">waiting</span> <span class="selector-tag">for</span> <span class="selector-tag">completed</span> <span class="selector-tag">aio</span> <span class="selector-tag">requests</span> (<span class="selector-tag">read</span> <span class="selector-tag">thread</span>)</span><br><span class="line"><span class="selector-tag">I</span>/<span class="selector-tag">O</span> <span class="selector-tag">thread</span> 3 <span class="selector-tag">state</span>: <span class="selector-tag">waiting</span> <span class="selector-tag">for</span> <span class="selector-tag">completed</span> <span class="selector-tag">aio</span> <span class="selector-tag">requests</span> (<span class="selector-tag">read</span> <span class="selector-tag">thread</span>)</span><br><span class="line"><span class="selector-tag">I</span>/<span class="selector-tag">O</span> <span class="selector-tag">thread</span> 4 <span class="selector-tag">state</span>: <span class="selector-tag">waiting</span> <span class="selector-tag">for</span> <span class="selector-tag">completed</span> <span class="selector-tag">aio</span> <span class="selector-tag">requests</span> (<span class="selector-tag">read</span> <span class="selector-tag">thread</span>)</span><br><span class="line"><span class="selector-tag">I</span>/<span class="selector-tag">O</span> <span class="selector-tag">thread</span> 5 <span class="selector-tag">state</span>: <span class="selector-tag">waiting</span> <span class="selector-tag">for</span> <span class="selector-tag">completed</span> <span class="selector-tag">aio</span> <span class="selector-tag">requests</span> (<span class="selector-tag">read</span> <span class="selector-tag">thread</span>)</span><br><span class="line"><span class="selector-tag">I</span>/<span class="selector-tag">O</span> <span class="selector-tag">thread</span> 6 <span class="selector-tag">state</span>: <span class="selector-tag">waiting</span> <span class="selector-tag">for</span> <span class="selector-tag">completed</span> <span class="selector-tag">aio</span> <span class="selector-tag">requests</span> (<span class="selector-tag">write</span> <span class="selector-tag">thread</span>)</span><br><span class="line"><span class="selector-tag">I</span>/<span class="selector-tag">O</span> <span class="selector-tag">thread</span> 7 <span class="selector-tag">state</span>: <span class="selector-tag">waiting</span> <span class="selector-tag">for</span> <span class="selector-tag">completed</span> <span class="selector-tag">aio</span> <span class="selector-tag">requests</span> (<span class="selector-tag">write</span> <span class="selector-tag">thread</span>)</span><br><span class="line"><span class="selector-tag">I</span>/<span class="selector-tag">O</span> <span class="selector-tag">thread</span> 8 <span class="selector-tag">state</span>: <span class="selector-tag">waiting</span> <span class="selector-tag">for</span> <span class="selector-tag">completed</span> <span class="selector-tag">aio</span> <span class="selector-tag">requests</span> (<span class="selector-tag">write</span> <span class="selector-tag">thread</span>)</span><br><span class="line"><span class="selector-tag">I</span>/<span class="selector-tag">O</span> <span class="selector-tag">thread</span> 9 <span class="selector-tag">state</span>: <span class="selector-tag">waiting</span> <span class="selector-tag">for</span> <span class="selector-tag">completed</span> <span class="selector-tag">aio</span> <span class="selector-tag">requests</span> (<span class="selector-tag">write</span> <span class="selector-tag">thread</span>)</span><br></pre></td></tr></table></figure><p>Purge thread默认会开启4个线程，提高回收效率，但是也会带来一些副作用，MySQL如果执行了truncate和drop操作，因为开启了多个purge thread去回收空间，随着时间的推移会使得数据恢复难打加大</p><p>Page Cleaner thread默认值为1，如果在MySQL日志中看到如下的信息，说明我们需要调整一下</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2019 <span class="selector-tag">-</span> 02 <span class="selector-tag">-</span> 14<span class="selector-tag">T23</span> : 50 : 00 . 501209<span class="selector-tag">Z</span> 0 <span class="selector-attr">[Note]</span> <span class="selector-tag">InnoDB</span>: <span class="selector-tag">page_cleaner</span> : <span class="selector-tag">lOOOms</span> <span class="selector-tag">intended</span></span><br><span class="line">loop took 28469710ms . The settings m工ght not be optimal . (flushed=O and</span><br><span class="line">evicted=O , during the time.)</span><br></pre></td></tr></table></figure><h2 id="InnoDB的缓存池管理技术"><a href="#InnoDB的缓存池管理技术" class="headerlink" title="InnoDB的缓存池管理技术"></a>InnoDB的缓存池管理技术</h2><p>Buffer的意识缓冲，cache是缓存，计算机术语里面有buffer cache和page cache，通数据库的含义是相似的</p><p>计算机领域汇总处理磁盘IO读写时候，基于CPU、Memory和Disk，如图</p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210301133510778.png"></p><p>page cache是文件系统层面的缓存，数据库层面最直观就是首次查询数据的时候会慢一些，之后就会使用缓存会快速很多，整个过程是把磁盘里的数据里的一部分数据加载到缓存中</p><p>buffer cache，是在写入磁盘时给与的缓冲，加快写入，是一个异步过程，而且为了防止断电丢失数据库，会按照一定的策略把数据刷新到磁盘</p><p>理解MySQL里面的缓存池管理，使用show engine innodb status看一下缓冲池和内存输出内容，通过关键字“BUFFER POOL AND MEMORY”到该位置</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">----------------------</span></span><br><span class="line"><span class="selector-tag">BUFFER</span> <span class="selector-tag">POOL</span> <span class="selector-tag">AND</span> <span class="selector-tag">MEMORY</span></span><br><span class="line"><span class="selector-tag">----------------------</span></span><br><span class="line"><span class="selector-tag">Total</span> <span class="selector-tag">large</span> <span class="selector-tag">memory</span> <span class="selector-tag">allocated</span> 137428992              //由<span class="selector-tag">innodb</span>分配的总内存为12<span class="selector-tag">G</span></span><br><span class="line"><span class="selector-tag">Dictionary</span> <span class="selector-tag">memory</span> <span class="selector-tag">allocated</span> 221523                  //由<span class="selector-tag">innodb</span>分配的字典内容</span><br><span class="line"><span class="selector-tag">Buffer</span> <span class="selector-tag">pool</span> <span class="selector-tag">size</span>   8191                             //缓冲池分配的页数</span><br><span class="line"><span class="selector-tag">Free</span> <span class="selector-tag">buffers</span>       1455                             //缓冲空闲页数</span><br><span class="line"><span class="selector-tag">Database</span> <span class="selector-tag">pages</span>     6736                             //<span class="selector-tag">LRU</span>列表中分配的数据页数，包含<span class="selector-tag">young</span> <span class="selector-tag">sublist</span>和<span class="selector-tag">old</span> <span class="selector-tag">sublist</span></span><br><span class="line"><span class="selector-tag">Old</span> <span class="selector-tag">database</span> <span class="selector-tag">pages</span> 2500                             //<span class="selector-tag">LRU</span>中的<span class="selector-tag">old</span> <span class="selector-tag">sublist</span>部分页的数量</span><br><span class="line"><span class="selector-tag">Modified</span> <span class="selector-tag">db</span> <span class="selector-tag">pages</span>  0                                //脏页的数量</span><br><span class="line"><span class="selector-tag">Pending</span> <span class="selector-tag">reads</span>      0                                //挂起读的数量</span><br><span class="line"><span class="selector-tag">Pending</span> <span class="selector-tag">writes</span>: <span class="selector-tag">LRU</span> 0, <span class="selector-tag">flush</span> <span class="selector-tag">list</span> 0, <span class="selector-tag">single</span> <span class="selector-tag">page</span> 0  //挂起写的数量</span><br><span class="line"><span class="selector-tag">Pages</span> <span class="selector-tag">made</span> <span class="selector-tag">young</span> 0, <span class="selector-tag">not</span> <span class="selector-tag">young</span> 0                     //<span class="selector-tag">LRU</span>列表中页移动到<span class="selector-tag">LRU</span>首部的次数，因为该服务器运行阶段没有达到<span class="selector-tag">innodb</span> <span class="selector-tag">old</span> <span class="selector-tag">blocks</span> <span class="selector-tag">time</span>阈值的值，因此<span class="selector-tag">not</span> <span class="selector-tag">young</span>为0</span><br><span class="line">0.00 <span class="selector-tag">youngs</span>/<span class="selector-tag">s</span>, 0.00 <span class="selector-tag">non-youngs</span>/<span class="selector-tag">s</span>                    //表示每秒<span class="selector-tag">young</span>和<span class="selector-tag">non-young</span>操作次数</span><br><span class="line"><span class="selector-tag">Pages</span> <span class="selector-tag">read</span> 6676, <span class="selector-tag">created</span> 60, <span class="selector-tag">written</span> 328            //读取、创建、写入的页</span><br><span class="line">0.00 <span class="selector-tag">reads</span>/<span class="selector-tag">s</span>, 0.00 <span class="selector-tag">creates</span>/<span class="selector-tag">s</span>, 0.00 <span class="selector-tag">writes</span>/<span class="selector-tag">s</span></span><br><span class="line"><span class="selector-tag">No</span> <span class="selector-tag">buffer</span> <span class="selector-tag">pool</span> <span class="selector-tag">page</span> <span class="selector-tag">gets</span> <span class="selector-tag">since</span> <span class="selector-tag">the</span> <span class="selector-tag">last</span> <span class="selector-tag">printout</span></span><br><span class="line"><span class="selector-tag">Pages</span> <span class="selector-tag">read</span> <span class="selector-tag">ahead</span> 0.00/<span class="selector-tag">s</span>, <span class="selector-tag">evicted</span> <span class="selector-tag">without</span> <span class="selector-tag">access</span> 0.00/<span class="selector-tag">s</span>, <span class="selector-tag">Random</span> <span class="selector-tag">read</span> <span class="selector-tag">ahead</span> 0.00/<span class="selector-tag">s</span></span><br><span class="line"><span class="selector-tag">LRU</span> <span class="selector-tag">len</span>: 6736, <span class="selector-tag">unzip_LRU</span> <span class="selector-tag">len</span>: 0</span><br></pre></td></tr></table></figure><p>LRU本质是尽可能让数据页在缓存中长时间保留，提高访问效率，但是缓存是有限的，如何减少重复的页加载频率。</p><p>InnoDB的LRU是一种定制化的算法，首先它会有一个列表，我们叫 LRU LIST，上面存放了一些数据页，这里就是 Database pages<br>6736，除此之外可用的页为 ： Free buffers 1455，演示的是测试环境，所以对于生产环境会有所不同（如果你比较细心比较，会发现 Free buffers +Database pages 的值和 Buffer pool size 的大小是不相等的 ， 其实还有一些其他缓冲池的页被分配利用，比如自适应哈希索引、 Lock信息等，它们的管理不是基于LRU 的） </p><p>回到 LRU 算法， InnoDB 在 LRU 列表中加入了参考点，也叫midpoint。 传统的 LRU 算法中 ， 当访问到的<strong>页不在缓冲区</strong>会直接将<strong>磁盘页数据</strong>调到<strong>缓冲区队列</strong>；而 InnoDB 并不是直接插入到缓冲区队列的队头，而是插入 LRU 列表的<strong>midpoint位置</strong>。 这个算法称之为 midpoint insertion stategy（中点插入策略）。默认配置插入到列表长度的 5/8 处 ，和数学中的黄金分割（ 0.618 ）很接近，midpoint 由参数 innodb_old_blocks_pct 控制，简单验算验证一下 ，可以看到是很接近的值   </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> 5/8 , 1<span class="selector-tag">-</span> 120340/326446 , 100 <span class="selector-tag">-</span> @<span class="keyword">@innodb_old_blocks_pct</span>;</span><br><span class="line">+<span class="selector-tag">--------</span>+<span class="selector-tag">------------------</span>+<span class="selector-tag">-------------------------------</span>+</span><br><span class="line">| 5/8    | 1- 120340/326446 | 100 - @@innodb_old_blocks_pct |</span><br><span class="line">+<span class="selector-tag">--------</span>+<span class="selector-tag">------------------</span>+<span class="selector-tag">-------------------------------</span>+</span><br><span class="line">| 0.6250 |           0.6314 |                            63 |</span><br><span class="line">+<span class="selector-tag">--------</span>+<span class="selector-tag">------------------</span>+<span class="selector-tag">-------------------------------</span>+</span><br></pre></td></tr></table></figure><p>midpoint 之前的列表称之为 new 列 表， 也叫 young sublist 或者 sublist of new block 区域 ，里面的数据可以理解为热数据，之后的列表称之为 old 列表 ，也叫 old sublist 或者 sublist of old block 区域</p><p><strong>关系图如下</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210218235156463.png"></p><p>一些全表扫描的表如果进入 sublist of new block 区域 ，整个 LRU 就会是性能瓶颈了，而且 mid 位置的页也不是永久的，这种情况也叫缓存污染。为了解决这个问题 ， InnoDB 存储引 擎引入 了 innodb old blocks time 来表示页读取到 mid 位置之后需要等待多久才会被加入到 LRU 列表的热端。可以通过设置该参数来保证热点数据不轻易被刷出 ，这个参数值默认为 1000 （毫秒）。</p><p>如果出现了多个BUFFER POOL的输出，BUFFER POOL会从0开始；通过该参数进行调整：innodb_buffer_pool_instances开启多个缓存池，把需要的数据页可以通过hash算法指向不同的缓存池里面，可以并行的内存读写，在高IO负载的情况下性能提升明显</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> @<span class="keyword">@innodb_buffer_pool_instances</span>;</span><br><span class="line">+<span class="selector-tag">--------------------------------</span>+</span><br><span class="line">| @@innodb_buffer_pool_instances |</span><br><span class="line">+<span class="selector-tag">--------------------------------</span>+</span><br><span class="line">|                              1 |</span><br><span class="line">+<span class="selector-tag">--------------------------------</span>+</span><br></pre></td></tr></table></figure><h2 id="InnoDB中的脏页管理"><a href="#InnoDB中的脏页管理" class="headerlink" title="InnoDB中的脏页管理"></a>InnoDB中的脏页管理</h2><p>上述说明了InnoDB对于LRU的管理方式，还有FLUSH LIST和FREE LIST，它们和LUR LIST有什么关系呢？</p><p><strong>在InnoDB status里面输出的内容,这个free buffers是由FREE LIST来维护的</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Free</span> <span class="selector-tag">buffers</span>       1455</span><br></pre></td></tr></table></figure><p>对于脏页的管理，InnoDB有一个专门的列表FLUSH LIST，它的大小不是无限大或者动态的，在MySQL5.6版本中引入了新参数innodb_lru_scan_depth来控制LRU列表中可用页数量，默认值为1000，即16M，它会影响现成Page Cleaner 刷新脏页的数量，从使用率和性能来说，不是越大越好</p><p>为什么FLUSH LIST俩维护脏页的和数量，主要目的是让InnoDB尽可能保持一个较新的状态，在系统崩溃之后能够快速地恢复，这个在数据状态的记录汇总是通过Checkpoint LSN来维护的、</p><p>而对于脏页的刷新比例，是由参数 innodb_max_dirty_pages_pct 来控制的（默认是75 ，而根据谷歌压测推荐是80 ）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> @<span class="keyword">@innodb_max_dirty_pages_pct</span>;</span><br><span class="line">+<span class="selector-tag">------------------------------</span>+</span><br><span class="line">| @@innodb_max_dirty_pages_pct |</span><br><span class="line">+<span class="selector-tag">------------------------------</span>+</span><br><span class="line">|                    75.000000 |</span><br><span class="line">+<span class="selector-tag">------------------------------</span>+</span><br></pre></td></tr></table></figure><p><strong>LIST之间的关系图</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210219161723158.png"></p><p><strong>其中buffer pool中的最小单位是页，分为三种类型</strong></p><blockquote><ul><li>free page：此page未被使用，此种类型page位于FREE LIST中</li><li>clean page：此page被使用，对应数据文件中的一个页面，但是页面没有被修改，此种类型page位于LRU LIST中</li><li>dirty page：此page被使用，对应数据文件中的一个页面，但是页面被修改过，此种类型page位于LRU LIST和FLUSH LIST中</li></ul></blockquote><p><strong>可以通过下述方法查看page的状态数据</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; show global status like &#x27;%buffer_pool_pages%&#x27;;</span><br><span class="line">+<span class="selector-tag">----------------------------------</span>+<span class="selector-tag">-------</span>+</span><br><span class="line">| Variable_name                    | Value |</span><br><span class="line">+<span class="selector-tag">----------------------------------</span>+<span class="selector-tag">-------</span>+</span><br><span class="line">| Innodb_buffer_pool_pages_data    | 6736  |</span><br><span class="line">| Innodb_buffer_pool_pages_dirty   | 0     |</span><br><span class="line">| Innodb_buffer_pool_pages_flushed | 328   |</span><br><span class="line">| Innodb_buffer_pool_pages_free    | 1455  |</span><br><span class="line">| Innodb_buffer_pool_pages_misc    | 0     |</span><br><span class="line">| Innodb_buffer_pool_pages_total   | 8191  |</span><br><span class="line">+<span class="selector-tag">----------------------------------</span>+<span class="selector-tag">-------</span>+</span><br></pre></td></tr></table></figure><p><strong>其中，脏页的比率计算可以参考如下：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(100*<span class="selector-tag">Innodb_buffer_pool_pages_dirty</span>)/(1+<span class="selector-tag">Innodb_buffer_pool_pages_data</span>+<span class="selector-tag">Innodb_buffer_pool_pages_free</span>)</span><br></pre></td></tr></table></figure><p>缓存池中的页就是在这种状态中变换和调整：总体来说，FLUSH LIST是一种定量的管理方式，追求多块好省，而FREE LIST和LRU LIST是一种动态平衡的状态，大小要远远高于FLUSH LIST</p><h2 id="InnoDB的日志管理"><a href="#InnoDB的日志管理" class="headerlink" title="InnoDB的日志管理"></a>InnoDB的日志管理</h2><p>InnoDB里面的数据变化都会有相应的页来存储，通过FLUSH LIST来刷新脏页以完成数据落盘，这个过程还需要注意，为了提高吞吐量和性能，刷新脏页的过程是异步的，而一旦数据库崩溃，如何保证数据的完整性，首选得有记录数据变化过程的日志</p><blockquote><ul><li>REDO日志：Innodb的事务日志，保存在日志文件ib_logfile*中</li><li>UNDO lOG日志：存放在共享表空间里面（ibdata*文件），从MySQL5.7版本开始，undo开始有了新的变化</li></ul></blockquote><p>假设我们有如下一条SQL语句</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update test set id=100;</span><br></pre></td></tr></table></figure><p>在InnoDB处理的时候，会把相应的页加载到Buffer Pool里面，数据的变化会写入redo log buffer，而事务提交的时候会通过Redo Log Buffer把数据变化写入Redo Log里面</p><p><strong>为什么Binlog和Redo会并存</strong></p><blockquote><ul><li>Redo是Innodb引擎的范畴，记录物理页的修改，做崩溃恢复时所用</li><li>Binlog是MySQL Server范畴，记录的是数据的变更操作，支持多种存储引擎，也就是无论是MyISAM和Innodb等存储引擎，Binlog都会记录，所以数据恢复和搭建Slave经常会用来</li></ul></blockquote><p><strong>一次数据变更，产生了Binlog和Redo，它们是否需要同步</strong></p><blockquote><p>需要两个重量级参数innodb_flush_log_at_trx_commit和sync_binlog，其中innodb_flush_log_at_trx_commit是将事务日志从innodb log buffer写入到redo log中，sync_binlog是将二进制日志文件刷新到磁盘上，它们就是行业里著名的双“1”参数，其中以innodb_flush_log_at_trx_commit更为出名</p></blockquote><p><strong>下表是innodb_flush_log_at_trx_commit=x的参数</strong></p><table><thead><tr><th>参数选项</th><th>日志写入模式</th><th>刷盘模式</th><th>小结</th><th>特点</th></tr></thead><tbody><tr><td>0</td><td>延时写日志</td><td></td><td>log buffer每个1秒写日志，数据刷盘</td><td>最快，存在数据丢失风险</td></tr><tr><td>1</td><td>实时写日志</td><td>实时刷盘</td><td>log buffer实时写日志，数据刷盘</td><td>最大安全性</td></tr><tr><td>2</td><td>实时写日志</td><td>延迟刷盘</td><td>log buffer实时写日志，每隔1秒刷盘</td><td>较快，存在数据丢失风险</td></tr></tbody></table><blockquote><p>注：在数据导入中，为了提高性能，可以考虑临时调整参数值innodb_flush_log_at_trx_commit为0，数据导入后，恢复为1</p></blockquote><p>下图可以对双 1 参数做一各更为细致地解读，可以看到一各较为完整的生命周期</p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210301163433167.png"></p><p>undo记录了数据修改的前镜像。存放在ibdata中，它就好比是一个摄像机，记录了过去的美好时光</p><h2 id="InnoDB中的检查机制"><a href="#InnoDB中的检查机制" class="headerlink" title="InnoDB中的检查机制"></a>InnoDB中的检查机制</h2><p>如果数据库宕机，可以借助redo来完成崩溃恢复，如何使用恢复的过程高效可行，就需要考虑检查点机制（checkpoint)，检查点机制就跟我们使用word编辑文件一样，建议大家使用过程中边编辑边保存，否则电脑突然断电，可能照成数据丢失</p><p>对于InnoDB存储引擎而言，是通过LSN（Log Sequence Number）来标记版本的。LSN是8字节的数字，每个页有LSN，重做日志中也有LSN，Checkpoint也有LSN。可以看下InnoDB status的输出内容</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">---</span></span><br><span class="line"><span class="selector-tag">LOG</span></span><br><span class="line"><span class="selector-tag">---</span></span><br><span class="line"><span class="selector-tag">Log</span> <span class="selector-tag">sequence</span> <span class="selector-tag">number</span> 167362280                 //<span class="selector-tag">LSN1</span>，当前系统<span class="selector-tag">LSN</span>最大值，新的事务日志，<span class="selector-tag">LSN</span>将在此基础上生成（<span class="selector-tag">LSN1</span>+新日志的大小）</span><br><span class="line"><span class="selector-tag">Log</span> <span class="selector-tag">flushed</span> <span class="selector-tag">up</span> <span class="selector-tag">to</span>   167362280                 //<span class="selector-tag">LSN2</span>，当前已经写入日志文件的<span class="selector-tag">LSN</span></span><br><span class="line"><span class="selector-tag">Pages</span> <span class="selector-tag">flushed</span> <span class="selector-tag">up</span> <span class="selector-tag">to</span> 167362280                 //<span class="selector-tag">LSN3</span>，当前最旧的脏页数据对应的<span class="selector-tag">LSN</span>，写<span class="selector-tag">Checkpoint</span>的时候直接将此<span class="selector-tag">LSN</span>写入到日志文件</span><br><span class="line"><span class="selector-tag">Last</span> <span class="selector-tag">checkpoint</span> <span class="selector-tag">at</span>  167362271                 //<span class="selector-tag">LSN4</span>，当前已经写入<span class="selector-tag">Checkpoint</span>的<span class="selector-tag">LSN</span></span><br><span class="line">0 <span class="selector-tag">pending</span> <span class="selector-tag">log</span> <span class="selector-tag">flushes</span>, 0 <span class="selector-tag">pending</span> <span class="selector-tag">chkp</span> <span class="selector-tag">writes</span></span><br><span class="line">53 log i/o&#x27;s done, 0.00 log i/o&#x27;s/second</span><br></pre></td></tr></table></figure><blockquote><p>以上4个LSN是递减的，即：LSN1&gt;=LSN2&gt;=LSN3&gt;=LSN4</p></blockquote><p>InnoDB的检查点技术很丰富，主要分为Sharp Checkpoint和Fuzzy Checkpoint两类。</p><blockquote><ul><li><p>Sharp Checkpoint是全量检查点，在数据库关闭时将所有的脏页都刷新回磁盘，可以通过参数innodb_fast_shutdown=1来设置。</p></li><li><p>Fuzzy Checkpoint是模糊检查点，总体来说是部分页刷新，刷新的场景会有一些复杂，包含如下4类Checkpoint策略：</p><p>Master Thread Checkpoint</p><p>FLUSH_LRU_LIST Checkpoint</p><p>Async/Sync Flush Checkpoint</p><p>Dirty Page too much Checkpoint</p></li></ul></blockquote><table><thead><tr><th>Fuzzy Checkpoint策略</th><th>触发条件</th><th>描述</th><th>相关参数</th></tr></thead><tbody><tr><td>Master Thread Checkpoint</td><td>主动周期性触发</td><td>每秒或每10秒的速度从缓冲池的脏页列表刷新一定比例的页回磁盘</td><td>innodb_io_capacity</td></tr><tr><td>FLUSH_LRU_LIST Checkpoint</td><td>LRU空闲也不足</td><td>Page Cleaner线程中进行，用户可以通过参数innod_lru_scan_depth控制LRU列表中可用页的数量</td><td>innod_lru_scan_depth</td></tr><tr><td>Async/Sync Flush Checkpoint</td><td>重做日志不可用</td><td>重做日志文件不可用的情况，这时需要强制将一些页刷新回磁盘，而此时脏页是从FLUSH LIST中选取的</td><td></td></tr><tr><td>Dirty Page too much</td><td>脏页数量太多</td><td>脏页的数量太多，导致InnoDB存储引擎强制进行Checkpoint，其目的总的来说还是为了保证缓冲池中有足够可用的页</td><td>innodb_max_dirty_pages_pct</td></tr></tbody></table><p>其中Async/Sync Flush Checkpoint会略微复杂一些，“sync”的位置大于是redo日志的7/8，“async”位置大约是redo日志的3/4，如下图</p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210219171658427.png"></p><h2 id="InnoDB存储引擎核心特性说明"><a href="#InnoDB存储引擎核心特性说明" class="headerlink" title="InnoDB存储引擎核心特性说明"></a>InnoDB存储引擎核心特性说明</h2><table><thead><tr><th>功能</th><th>支持</th><th>功能</th><th>支持</th></tr></thead><tbody><tr><td>存储限制</td><td>64TB</td><td>索引高速缓存</td><td>是</td></tr><tr><td>MVCC (Multi Version Concurrency Control)多版本并发控制</td><td>是</td><td>数据高速缓存</td><td>是</td></tr><tr><td>B 树索引</td><td>是</td><td>自适应数列索引</td><td>是</td></tr><tr><td>群集索引</td><td>是</td><td>复制 (多线程，GTID，MTS)</td><td>是</td></tr><tr><td>压缩数据</td><td>是</td><td>更新数据字典</td><td>是</td></tr><tr><td>加密数据</td><td>是</td><td>地理空间数据类型</td><td>是</td></tr><tr><td>事务</td><td>是</td><td>查询高速缓存</td><td>是</td></tr><tr><td>行锁</td><td>是</td><td>群集数据库</td><td>否</td></tr><tr><td>外键</td><td>是</td><td>地理空间索引</td><td>否</td></tr><tr><td>备份与恢复</td><td>是</td><td>快速索引创建</td><td>是</td></tr><tr><td>文件格式管理</td><td>是</td><td>PEFRORMANCE_SCHEMA</td><td>是</td></tr><tr><td>更改缓冲</td><td>是</td><td>自动故障恢复（ACSR）</td><td>是</td></tr><tr><td>全文搜索扫描</td><td>是</td><td>多个缓冲池</td><td>是</td></tr></tbody></table><h3 id="InnoDB重要的特性"><a href="#InnoDB重要的特性" class="headerlink" title="InnoDB重要的特性"></a>InnoDB重要的特性</h3><blockquote><ul><li>事务</li><li>行锁</li><li>MVCC(多版本并发控制)</li><li>外键</li><li>ACSR(自动故障恢复)</li><li>热备</li><li>复制(多线程,GTID,MTS)</li></ul></blockquote><h2 id="InnoDB存储引擎的修改"><a href="#InnoDB存储引擎的修改" class="headerlink" title="InnoDB存储引擎的修改"></a>InnoDB存储引擎的修改</h2><p><strong>1. 修改存储引擎</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; alter table city engine=innodb;</span><br></pre></td></tr></table></figure><p><strong>2. 整理碎片</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; alter table city engine=innodb;</span><br></pre></td></tr></table></figure><blockquote><p>这条命令可以当做整理碎片，每次使用delect删除行，都会产生碎片，从而增加数据，可以使用这条命令来解决一些碎片，当然也可以选择导出，然后删除不要的数据，在导入进MySQL，但是风险比较高</p></blockquote><h3 id="批量替换多张-innoDB为tokudb"><a href="#批量替换多张-innoDB为tokudb" class="headerlink" title="批量替换多张 innoDB为tokudb"></a>批量替换多张 innoDB为tokudb</h3><p><strong>单个替换</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; alter table zabbix.a engine=tokudb;</span><br></pre></td></tr></table></figure><p><strong>批量替换</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; select concat(&quot;alter table &quot;,table_schema,&quot;.&quot;,table_name,&quot; &quot;,&quot;engine=toukudb&quot;) from informatiion_schema.tables where table_schema=&#x27;world&#x27;;</span><br><span class="line">+<span class="selector-tag">-------------------------------------------------------------------------</span>+</span><br><span class="line">| concat(&quot;alter table &quot;,table_schema,&quot;.&quot;,table_name,&quot; &quot;,&quot;engine=toukudb&quot;) |</span><br><span class="line">+<span class="selector-tag">-------------------------------------------------------------------------</span>+</span><br><span class="line">| alter table world.city engine=toukudb                                   |</span><br><span class="line">| alter table world.country engine=toukudb                                |</span><br><span class="line">| alter table world.countrylanguage engine=toukudb                        |</span><br><span class="line">+<span class="selector-tag">-------------------------------------------------------------------------</span>+</span><br></pre></td></tr></table></figure><h2 id="InnoDb存储引擎物理存储结构（表空间）"><a href="#InnoDb存储引擎物理存储结构（表空间）" class="headerlink" title="InnoDb存储引擎物理存储结构（表空间）"></a>InnoDb存储引擎物理存储结构（表空间）</h2><h3 id="最直观的存储方式（-data-mysql-data"><a href="#最直观的存储方式（-data-mysql-data" class="headerlink" title="最直观的存储方式（/data/mysql/data)"></a>最直观的存储方式（/data/mysql/data)</h3><blockquote><ul><li>ibdata1：系统数据字典信息（统计信息），UNDO表空间等数据</li><li>ib_logfile0~ib_logfile1：REDO日志文件，事务日志文件</li><li>ibtmp1：临时表空间磁盘位置，存储临时表</li><li>frm：存储表的列信息</li><li>ibd：表的数据行和索引</li></ul></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ ll  | grep &quot;^-&quot;</span><br><span class="line"><span class="selector-tag">-rw-r-----</span> 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span>      620 <span class="selector-tag">Aug</span> 30 17<span class="selector-pseudo">:28</span> <span class="selector-tag">ib_buffer_pool</span></span><br><span class="line"><span class="selector-tag">-rw-r-----</span> 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span> 12582912 <span class="selector-tag">Sep</span>  3 00<span class="selector-pseudo">:34</span> <span class="selector-tag">ibdata1</span></span><br><span class="line"><span class="selector-tag">-rw-r-----</span> 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span> 50331648 <span class="selector-tag">Sep</span>  3 00<span class="selector-pseudo">:34</span> <span class="selector-tag">ib_logfile0</span></span><br><span class="line"><span class="selector-tag">-rw-r-----</span> 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span> 50331648 <span class="selector-tag">Sep</span>  3 00<span class="selector-pseudo">:34</span> <span class="selector-tag">ib_logfile1</span></span><br><span class="line"><span class="selector-tag">-rw-r-----</span> 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span> 12582912 <span class="selector-tag">Sep</span>  2 23<span class="selector-pseudo">:27</span> <span class="selector-tag">ibtmp1</span></span><br><span class="line"></span><br><span class="line">$ cd world/  </span><br><span class="line">$ ll</span><br><span class="line"><span class="selector-tag">-rw-r-----</span> 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span>     8710 <span class="selector-tag">Sep</span>  1 15<span class="selector-pseudo">:04</span> <span class="selector-tag">city</span><span class="selector-class">.frm</span></span><br><span class="line"><span class="selector-tag">-rw-r-----</span> 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span>   933888 <span class="selector-tag">Sep</span>  1 15<span class="selector-pseudo">:04</span> <span class="selector-tag">city</span><span class="selector-class">.ibd</span></span><br></pre></td></tr></table></figure><h3 id="共享表空间"><a href="#共享表空间" class="headerlink" title="共享表空间"></a>共享表空间</h3><blockquote><ul><li><p>5.5版本的默认模式，5.6中转换为了独立表空间</p><p>#共享表空间，是将所有数据存储到同一个表空间(ibdata1)中，管理比较混乱</p></li><li><p>5.6版本以后，共享表空间保留，只用来存储：数据字典信息(idbdata1),undo，临时表</p></li><li><p>5.7版本，临时表被独立出去了</p></li><li><p>8.0版本，undo也被独立出去了</p></li></ul></blockquote><blockquote><p> 具体变化参考官方文档:</p><p><a href="https://dev.mysql.com/doc/refman/5.6/en/innodb-architecture.html">https://dev.mysql.com/doc/refman/5.6/en/innodb-architecture.html</a><br><a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-architecture.html">https://dev.mysql.com/doc/refman/5.7/en/innodb-architecture.html</a><br><a href="https://dev.mysql.com/doc/refman/5.8/en/innodb-architecture.html">https://dev.mysql.com/doc/refman/5.8/en/innodb-architecture.html</a></p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210208232415216.png"></p><h3 id="共享表空间设置"><a href="#共享表空间设置" class="headerlink" title="共享表空间设置"></a>共享表空间设置</h3><p><strong>搭建MySQL时，初始化数据之前设置到参数文件中</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> @<span class="keyword">@innodb_data_file_path</span>;</span><br><span class="line">+<span class="selector-tag">-------------------------</span>+</span><br><span class="line">| @@innodb_data_file_path |</span><br><span class="line">+<span class="selector-tag">-------------------------</span>+</span><br><span class="line">| ibdata1:12M:autoextend  |  //共享表空间的ibdata1</span><br><span class="line">+<span class="selector-tag">-------------------------</span>+</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; show variables like &#x27;%autoextend%&#x27;;</span><br><span class="line">+<span class="selector-tag">-----------------------------</span>+<span class="selector-tag">-------</span>+</span><br><span class="line">| Variable_name               | Value |</span><br><span class="line">+<span class="selector-tag">-----------------------------</span>+<span class="selector-tag">-------</span>+</span><br><span class="line">| innodb_autoextend_increment | 64    |</span><br><span class="line">+<span class="selector-tag">-----------------------------</span>+<span class="selector-tag">-------</span>+</span><br></pre></td></tr></table></figure><p><strong>初始化的时候添加这两条命令，可以扩展共享表空间的两个参数</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">innodb_data_file_path=ibdata1:512M:ibdata2:512M:autoextend</span><br><span class="line">innodb_autoextend_increment=64</span><br></pre></td></tr></table></figure><p><strong>例如</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysqld --initialize-insecure --user=mysql --basedir=xxxxxx...... innodb_data_file_path=ibdata1:512M:ibdata2:512M:autoextend</span><br></pre></td></tr></table></figure><h3 id="独立表空间"><a href="#独立表空间" class="headerlink" title="独立表空间"></a>独立表空间</h3><blockquote><ul><li><p>从5.6起默认表空间不再使用共享表空间，替换为独立表空间</p></li><li><p>要存储的是用户数据</p></li><li><p>存储特点为：一个表一个ibd文件，存储数据行和索引信息，frm存储表的列信息</p></li></ul></blockquote><h3 id="5-7的独立表空间结构"><a href="#5-7的独立表空间结构" class="headerlink" title="5.7的独立表空间结构"></a>5.7的独立表空间结构</h3><blockquote><ul><li>一张InnoDB表 = frm+idb+ibdata1</li></ul><ul><li><p>MySQL的存储引擎日志：</p><p>Redo log：ib_logfile0 ib_logfile1，重做日志</p><p>Undo log: ibdata1 ibdata2（存储在共享表空间中），回滚日志</p></li><li><p>临时表：ibtmp1，在做join union操作产生临时数据，用完就自动清理</p></li></ul></blockquote><h3 id="独立表空间设置问题"><a href="#独立表空间设置问题" class="headerlink" title="独立表空间设置问题"></a>独立表空间设置问题</h3><p><strong>如果是1等于开启了独立表空间，如果是0表示没有开启</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> @<span class="keyword">@innodb_file_per_table</span>;</span><br><span class="line">+<span class="selector-tag">-------------------------</span>+</span><br><span class="line">| @@innodb_file_per_table |</span><br><span class="line">+<span class="selector-tag">-------------------------</span>+</span><br><span class="line">|                       1 |</span><br><span class="line">+<span class="selector-tag">-------------------------</span>+</span><br></pre></td></tr></table></figure><p><strong>修改成共享表空间</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; set global innodb_file_per_table=0;</span><br></pre></td></tr></table></figure><h3 id="独立表空间迁移"><a href="#独立表空间迁移" class="headerlink" title="独立表空间迁移"></a>独立表空间迁移</h3><p><strong>1. 创建和原表结构一致的空表</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; create database test charset=utf8mb4;   </span><br><span class="line"><span class="selector-tag">CREATE</span> <span class="selector-tag">TABLE</span> <span class="selector-tag">t100</span> (                           </span><br><span class="line"><span class="selector-tag">id</span> <span class="selector-tag">int</span>(11) <span class="selector-tag">DEFAULT</span> <span class="selector-tag">NULL</span>,</span><br><span class="line"><span class="selector-tag">num</span> <span class="selector-tag">int</span>(11) <span class="selector-tag">DEFAULT</span> <span class="selector-tag">NULL</span>,</span><br><span class="line"><span class="selector-tag">k1</span> <span class="selector-tag">char</span>(2) <span class="selector-tag">COLLATE</span> <span class="selector-tag">utf8mb4_bin</span> <span class="selector-tag">DEFAULT</span> <span class="selector-tag">NULL</span>,</span><br><span class="line"><span class="selector-tag">k2</span> <span class="selector-tag">char</span>(4) <span class="selector-tag">COLLATE</span> <span class="selector-tag">utf8mb4_bin</span> <span class="selector-tag">DEFAULT</span> <span class="selector-tag">NULL</span>,</span><br><span class="line"><span class="selector-tag">dt</span> <span class="selector-tag">timestamp</span> <span class="selector-tag">NOT</span> <span class="selector-tag">NULL</span> <span class="selector-tag">DEFAULT</span> <span class="selector-tag">CURRENT_TIMESTAMP</span>,</span><br><span class="line"><span class="selector-tag">KEY</span> <span class="selector-tag">id_k</span> (<span class="selector-tag">k2</span>)</span><br><span class="line">)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin;</span><br></pre></td></tr></table></figure><p><strong>2. 将空表的ibd文件移动</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">t100</span> <span class="selector-tag">discard</span> <span class="selector-tag">tablespace</span>;</span><br></pre></td></tr></table></figure><p><strong>3. 将原表的idb拷贝过来</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cp -a test/t100w.ibd world/t100.ibd</span><br></pre></td></tr></table></figure><p><strong>4. 将原表ibd进行导入</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">t100</span> <span class="selector-tag">import</span> <span class="selector-tag">tablespace</span>;</span><br></pre></td></tr></table></figure><p><strong>5. 总结：核心命令</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">t100</span> <span class="selector-tag">discard</span> <span class="selector-tag">tablespace</span>;  //将创建表的空<span class="selector-tag">idb</span>丢弃</span><br><span class="line">&gt; <span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">t100</span> <span class="selector-tag">import</span> <span class="selector-tag">tablespace</span>;   //将原表的<span class="selector-tag">idb</span>文件导入</span><br></pre></td></tr></table></figure><h2 id="InnoDB核心特性"><a href="#InnoDB核心特性" class="headerlink" title="InnoDB核心特性"></a>InnoDB核心特性</h2><h3 id="事务的ACID特性"><a href="#事务的ACID特性" class="headerlink" title="事务的ACID特性"></a>事务的ACID特性</h3><blockquote><ul><li><p>Atomit（原子性）</p><p>所有语句作为一个单元全部成功执行或全部权限，不能出现中间状态</p></li><li><p>Consistent（一致性）</p><p>如果数库在事务开启时处于一致状态，则在执行该事务期间将保留一致状态</p></li><li><p>Isolated（隔离性）</p><p>事务之间不互相影响</p></li><li><p>Durable（持久性）</p><p>事务成功完成后，所做的所有更改都会准确地记录在数据库中，所做的更改不会丢失    </p></li></ul></blockquote><h3 id="标准的事务语句"><a href="#标准的事务语句" class="headerlink" title="标准的事务语句"></a>标准的事务语句</h3><p><strong>DML（操作语句）：insert、update、delect</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; update city set countrycode=&#x27;CHN&#x27; where id=&#x27;1&#x27;;</span><br><span class="line">&gt; update city set countrycode=&#x27;CHN&#x27; where id=&#x27;2&#x27;;</span><br><span class="line">&gt; update city set countrycode=&#x27;CHN&#x27; where id=&#x27;3&#x27;;</span><br></pre></td></tr></table></figure><p><strong>事务的结束</strong></p><blockquote><p>提交：commit</p><p>回滚：rollback</p></blockquote><p><strong>自动提交机制（autocommit）：默认开启</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">select</span> @<span class="keyword">@autocommit</span>;</span><br><span class="line">+<span class="selector-tag">--------------</span>+</span><br><span class="line">| @@autocommit |</span><br><span class="line">+<span class="selector-tag">--------------</span>+</span><br><span class="line">|            1 |</span><br><span class="line">+<span class="selector-tag">--------------</span>+</span><br></pre></td></tr></table></figure><h3 id="在线修改参数"><a href="#在线修改参数" class="headerlink" title="在线修改参数"></a>在线修改参数</h3><p><strong>1. 会话级别：及时生效，只影响当前登录会话</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; set autocommit=0</span><br><span class="line">&gt; <span class="selector-tag">select</span> @<span class="keyword">@autocommit</span>;</span><br><span class="line">+<span class="selector-tag">--------------</span>+</span><br><span class="line">| @@autocommit |</span><br><span class="line">+<span class="selector-tag">--------------</span>+</span><br><span class="line">+<span class="selector-tag">--------------</span>+</span><br></pre></td></tr></table></figure><p><strong>2. 全局级别：断开窗口重连后生效，影响到所有新开的会话</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; set global autocommit=0</span><br></pre></td></tr></table></figure><p><strong>3. 永久修改（重启服务生效或者重启）</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/my.cnf </span><br><span class="line">autocommit=0</span><br></pre></td></tr></table></figure><h3 id="隐式提交的情况（重要）"><a href="#隐式提交的情况（重要）" class="headerlink" title="隐式提交的情况（重要）"></a>隐式提交的情况（重要）</h3><p><strong>触发隐式提交的语句</strong></p><blockquote><ul><li>事务默认开启（begin），不能同时打开多个窗口，否则，在打开一个窗口的时候，会自动提交（commit)</li></ul><ul><li>在一个窗口执行完，再打开新的窗口</li></ul></blockquote><p><strong>导致提交的非事务语句：</strong></p><blockquote><p>DDL语句：（ALTER，CREATE和DROP）</p><p>DCL语句：（GRANT，REVOKE和SET PASSWORD）</p><p>锁定语句：（LOCK TABLES和UNLOCK TABLES）</p></blockquote><p><strong>导致隐式提交的语句示例：</strong></p><blockquote><p>TRUNCATE TABLE</p><p>LOAD DATA IN FILE</p><p>SELECT FOR UPDATE</p></blockquote><h3 id="事务的ACID如何保证"><a href="#事务的ACID如何保证" class="headerlink" title="事务的ACID如何保证"></a>事务的ACID如何保证</h3><table><thead><tr><th>保证功能</th><th>描述</th></tr></thead><tbody><tr><td>redo log</td><td>重做日志</td></tr><tr><td>ib_logfile0-1</td><td>默认50M，轮询使用</td></tr><tr><td>redo log buffer</td><td>redo内存区域</td></tr><tr><td>data buufer pool</td><td>缓冲区池，数据和索引的缓冲</td></tr><tr><td>LSN（日志序列号）</td><td>MySQL每次数据库启动，都会比较磁盘数据页和redolog的LSN，必须要求LSN一致数据库才能正常启动</td></tr><tr><td>write adhead log</td><td>日志优先的方式实现持久化</td></tr><tr><td>脏页</td><td>内存脏页，内存中发生了修改，没写入到磁盘之前，内存页称之为脏页</td></tr><tr><td>CKPT（Checkpoint）</td><td>检查点，就是将脏页刷鞋到磁盘的动作</td></tr><tr><td>TXID（事务号）</td><td>InnoDB会为每一个事务生成一个事务号，伴随着整个事务</td></tr></tbody></table><h3 id="事务日志–redo-重做日志"><a href="#事务日志–redo-重做日志" class="headerlink" title="事务日志–redo(重做日志)"></a>事务日志–redo(重做日志)</h3><blockquote><p>作用：主要保证事务A(原子性)、C(一致性)、D(持久性)</p><ul><li>记录了内存数据页的变化</li><li>提供快速的持久化功能（WAL）</li><li>ACSR过程中实现前滚的操作（磁盘数据页和redo日志LSN一致）</li></ul></blockquote><p><strong>redo日志位置</strong></p><blockquote><p>redo的日志文件：iblogfile0 iblogfile1</p></blockquote><p><strong>redo buffer：</strong></p><blockquote><p>redo的buffer：数据页的变化信息+数据页当时的LSN号</p></blockquote><p><strong>redo的刷写策略</strong></p><blockquote><ul><li>commit;</li><li>刷新当前事务的redo buffer到磁盘</li><li>还会顺便将一部分redo buffer中没有提交的事务日志也刷新到磁盘</li><li>MySQL：在启动时，必须保证redo日志文件和数据文件LSN必须一致，如果不一致就会触发ACSR(自动故障恢复)，最终保证一致    </li></ul></blockquote><p><strong>事务开始到事务提交，以断电后磁盘和内存是如何恢复的</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210209002618811.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210209002637150.png"></p><p><strong>语言描述情况：我们做一个事务，begin;update;commit</strong></p><blockquote><ol><li><p>begin，立即分配一个TXID=tx_01.</p></li><li><p>update时，会将需要修改的数据也（dp_01,LSN=101),加载到data buffer中</p></li><li><p>DBWR线程，会进行dp_01数据也修改更新，并更新LSN=102</p></li><li><p>LOGBWR日志写线程，会将dp_01数据页的变化+LSN+TXID存储到redo buffer</p></li><li><p>执行commit时，LGWR日志写线程会将redobuffer信息写入redolog日志文件，基于WAL原则,</p><p> 在日志完全写入磁盘后，commit命令才执行成功,（会将此日志打上commit标记）</p></li><li><p>加入此时宕机，内存脏页没有来得及写入磁盘，内存数据全部丢失</p></li><li><p>MySQL再次重启时，必须要redolog和磁盘数据页的LSN是一致的，但是，此时dp_01，TXID=tx_01磁盘是LSN=101，dp_01,TXID=tx_01,redolog中LSN=102，MySQL此时无法正常启动，MySQL触发CSR（自动故障恢复），在内存追平LSN号，<br> 触发ckpt，将内存数据页更新到磁盘，从而保证磁盘数据页和redolog LSN一致，MySQL才能正常启动<br> //以上的工作过程，我们把它称之为基于REDO的“前滚操作”</p></li></ol></blockquote><h3 id="事务日志–undo（回滚日志）"><a href="#事务日志–undo（回滚日志）" class="headerlink" title="事务日志–undo（回滚日志）"></a>事务日志–undo（回滚日志）</h3><p><strong>作用</strong></p><p>在ACID特性中，主要保证A的特性，同时对CI也有一定功效</p><blockquote><ul><li>记录了数据修改之前的状态</li><li>rollback将内存的数据修改恢复到修改之前</li><li>在CSR中实现未提交数据的回滚操作</li><li>实现一致性快照，配置隔离级别保证MVCC（多版本并发控制），读和写的操作不会互相伤害</li></ul></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210209210223919.png"></p><h3 id="锁"><a href="#锁" class="headerlink" title="锁"></a>锁</h3><p>“锁”顾名思义就是锁定的意思。</p><p><strong>锁的作用是什么</strong></p><p>在事务ACID过程中，“锁”和“隔离级别”一起来实现“I”隔离性和”C” 一致性 </p><blockquote><ul><li>悲观锁:行级锁定(行锁)：谁先操作某个数据行,就会持有&lt;这行&gt;的(X)锁.</li><li>乐观锁: 没有锁</li><li>gap：间隙锁</li><li>next-lock：下键锁</li></ul></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210209210439849.png"></p><h3 id="隔离级别（transaction-isolation）"><a href="#隔离级别（transaction-isolation）" class="headerlink" title="隔离级别（transaction_isolation）"></a>隔离级别（transaction_isolation）</h3><blockquote><ul><li><p>RU：读未提交，可脏读，一般不易出现</p></li><li><p>RC：读已提交，可能出现幻读，可以防止脏读</p></li><li><p> RR：可重复读，功能是防止“幻读”现象，利用的是undo的快照技术+GAP（间隙锁）+ NextLock（下键锁）</p></li><li><p>SR：可串行化，可以防止死锁，但是并发事务性能较差</p><p>#补充：在RC级别下，可以减轻GAP+NextLock锁的问题，但是会出现幻读，一般在为了读一致性会正常select后添加for update语句。但是请记住执行完一定要commit否则容易出现锁等待比较严重。</p></li></ul></blockquote><p><strong>查看系统使用默认隔离</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> @<span class="keyword">@transaction_isolation</span>;</span><br><span class="line">+<span class="selector-tag">-------------------------</span>+</span><br><span class="line">| @@transaction_isolation |</span><br><span class="line">+<span class="selector-tag">-------------------------</span>+</span><br><span class="line">| REPEATABLE-READ         |</span><br><span class="line">+<span class="selector-tag">-------------------------</span>+</span><br></pre></td></tr></table></figure><p><strong>设置隔离级别</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/my.cnf </span><br><span class="line">transaction_isolation=read-uncommitted</span><br><span class="line">#transaction_isolation=read-committed</span><br><span class="line">#transaction_isolation=REPEATABLE-READ</span><br></pre></td></tr></table></figure><blockquote><p>transaction_isolation=read-uncommitted：读未提交，可脏读，一般不易出现</p><ul><li><p>操作之前，需要查看自己是否开启自动提交</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">select</span> @<span class="keyword">@autocommit</span>;</span><br><span class="line"> +<span class="selector-tag">--------------</span>+</span><br><span class="line"> | @@autocommit |</span><br><span class="line"> +<span class="selector-tag">--------------</span>+</span><br><span class="line"> |            0 |</span><br><span class="line"> +<span class="selector-tag">--------------</span>+</span><br></pre></td></tr></table></figure></li><li><p>如果是自动提交，则修改为不自动提交</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure><blockquote><p>set autocommit=0</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p>测试</p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210209211215566.png"></p></li></ul></blockquote><blockquote><p>transaction_isolation=read-committed：读已提交,可能出现幻读,可以防止脏读</p><ul><li><p>rc方式如何解决幻读</p><p>创建表的时候建一个主键，主键会创建GAP+NextLock锁，阻止幻读</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">create</span> <span class="selector-tag">table</span> <span class="selector-tag">pp</span>(<span class="selector-tag">id</span> <span class="selector-tag">int</span> <span class="selector-tag">primary</span> <span class="selector-tag">key</span> <span class="selector-tag">not</span> <span class="selector-tag">null</span>,<span class="selector-tag">name</span> <span class="selector-tag">varchar</span>(10));</span><br></pre></td></tr></table></figure></li><li><p>测试</p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210209221501258.png"></p></li></ul></blockquote><blockquote><p>transaction_isolation=REPEATABLE-READ：可重复读，功能是防止“幻读”现象，利用的是undo的快照技术+GAP（间隙锁）+ NextLock（下键锁）</p><ul><li><p>RR模式可能出现的幻读</p><ol><li><p>左边创建一个表，插入几行数据，然后提交</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">create</span> <span class="selector-tag">table</span> <span class="selector-tag">tt</span>(<span class="selector-tag">id</span> <span class="selector-tag">int</span> <span class="selector-tag">primary</span> <span class="selector-tag">key</span> <span class="selector-tag">not</span> <span class="selector-tag">null</span>, <span class="selector-tag">name</span> <span class="selector-tag">vaarchar</span>(10));</span><br><span class="line">insert into tt values(1,&#x27;pp&#x27;),(2,&#x27;cc&#x27;),(3,&#x27;tt&#x27;);</span><br><span class="line"><span class="selector-tag">commit</span>;</span><br></pre></td></tr></table></figure></li><li><p>右边也提交（不然看不到数据）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">commit</span>;</span><br></pre></td></tr></table></figure></li><li><p>左边继续插入一行数据,然后提交(右边是看不见数据的)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">insert into tt values(4,&#x27;bb&#x27;);</span><br><span class="line"><span class="selector-tag">commit</span>;</span><br></pre></td></tr></table></figure></li><li><p>右边发现第四行可以插入，然后它也插入数据(发现报错)</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">insert into tt values(4,&#x27;oo&#x27;);</span><br><span class="line">ERROR 1062 (23000): Duplicate entry &#x27;4&#x27; for key &#x27;PRIMARY&#x27;</span><br></pre></td></tr></table></figure></li></ol></li><li><p>测试</p></li></ul><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210209221843541.png"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL索引与执行计划-4</title>
      <link href="2021/03/02/MySQL%E7%B4%A2%E5%BC%95%E4%B8%8E%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92-4/"/>
      <url>2021/03/02/MySQL%E7%B4%A2%E5%BC%95%E4%B8%8E%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92-4/</url>
      
        <content type="html"><![CDATA[<h1 id="索引及执行计划"><a href="#索引及执行计划" class="headerlink" title="索引及执行计划"></a>索引及执行计划</h1><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><p>类似于一本书的许多目录，起到优化查询的作用，可以快速的找到想要的值，如果没有索引，就将会全局扫描，导致的查询的速度会慢几十倍。所以一张合格表都会建立索引</p><h3 id="索引的分类（算法）"><a href="#索引的分类（算法）" class="headerlink" title="索引的分类（算法）"></a>索引的分类（算法）</h3><blockquote><ol><li>B树（tree）# 默认使用的所以类型</li><li>R树</li><li>Hash</li><li>FullText</li><li>GIS 索引</li></ol></blockquote><h3 id="Btree-B树-索引算法演变"><a href="#Btree-B树-索引算法演变" class="headerlink" title="Btree(B树)索引算法演变"></a>Btree(B树)索引算法演变</h3><p>Btree索引类型演变过程为：<code>B-、B+、B*</code></p><p><code>B-</code>是叶子节点存储着一部分数值，枝节点取出每列最小的数值，根节点取出每个枝节点的最小值的数值，当查询数据时，比如数值是30，那么30会先到根节点28-65之间，进行中间的枝节点，然后通过指针指向节点找到30这个数值，不管是按什么数值找，都是以三步走，<strong>根节点–&gt;枝节点–&gt;叶节点</strong></p><p><code>B+</code>是添加了一个范围，比如比&gt;33值，然后可以从叶节点跳到另一个叶节点，这样不需要再重根节点遍历</p><p><code>B*</code>可以从枝节点调用另一个枝节点，这样不需要再重根节点遍历</p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210208163247103.png"></p><h3 id="Btree索引功能上的分类"><a href="#Btree索引功能上的分类" class="headerlink" title="Btree索引功能上的分类"></a>Btree索引功能上的分类</h3><p><strong>辅助索引</strong></p><blockquote><ul><li>MySQL会自动将此列的值取出，将此列进行自动排行</li><li>将排序好的值，均匀的存放在叶子节点，进一步生成枝节点和根节点</li><li>在叶子节点中的值，都会对应存储主键ID</li></ul></blockquote><p><strong>聚集索引</strong></p><blockquote><ul><li>MySQL会自动选择主键作为聚集索引列，没有主键会选择唯一键，如果都没有，则会生成隐藏的主键（5.5以后的版本才有）</li><li>MySQL进行存储数据时，会按照聚集索引列值排序，有序存储数据行</li><li>聚集索引直接将原表数据页作为叶子节点，然后提取聚集索引向上成枝节点和根节点</li></ul></blockquote><p><strong>聚集索引和辅助索引的区别</strong></p><blockquote><ul><li>表中任何一个列都可以创建辅助索引，在你有需要的时候，只要名字不同即可</li><li>在一张表中，聚集索引只能有一个，一般是主键</li><li>辅助索引，叶子节点只存储索引列的有序值+聚集索引列值</li><li>聚集索引，叶子节点存储的是有序的整行数据</li><li>MySQL的表数据存储是聚集索引的组织表</li></ul></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210208165149401.png"></p><h3 id="辅助索引细分"><a href="#辅助索引细分" class="headerlink" title="辅助索引细分"></a>辅助索引细分</h3><blockquote><ul><li>单列辅助索引</li><li>联合索引（覆盖索引）</li><li>唯一索引</li></ul></blockquote><h3 id="创建、查询、删除索引"><a href="#创建、查询、删除索引" class="headerlink" title="创建、查询、删除索引"></a>创建、查询、删除索引</h3><blockquote><p>PRI：主键索引</p><p>MUL：辅助索引</p><p>UNI：唯一索引</p></blockquote><p><strong>以world的city表做示例，查看索引</strong></p><blockquote><p>可以看到，city有两个索引，一个主索引和一个辅助索引</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">use</span> <span class="selector-tag">world</span>;</span><br><span class="line">&gt; <span class="selector-tag">desc</span> <span class="selector-tag">city</span>;</span><br><span class="line">+<span class="selector-tag">-------------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">-----</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">----------------</span>+</span><br><span class="line">| Field       | Type     | Null | Key | Default | Extra          |</span><br><span class="line">+<span class="selector-tag">-------------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">-----</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">----------------</span>+</span><br><span class="line">| ID          | int(11)  | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| Name        | char(35) | NO   |     |         |                |</span><br><span class="line">| CountryCode | char(3)  | NO   | MUL |         |                |</span><br><span class="line">| District    | char(20) | NO   |     |         |                |</span><br><span class="line">| Population  | int(11)  | NO   |     | 0       |                |</span><br><span class="line">+<span class="selector-tag">-------------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">-----</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">----------------</span>+</span><br></pre></td></tr></table></figure><p><strong>查询索引</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">show</span> <span class="selector-tag">index</span> <span class="selector-tag">from</span> <span class="selector-tag">city</span>\<span class="selector-tag">G</span></span><br><span class="line">*************************** 1. <span class="selector-tag">row</span> ***************************</span><br><span class="line">        <span class="selector-tag">Table</span>: <span class="selector-tag">city</span></span><br><span class="line">   <span class="selector-tag">Non_unique</span>: 0</span><br><span class="line">     <span class="selector-tag">Key_name</span>: <span class="selector-tag">PRIMARY</span></span><br><span class="line"> <span class="selector-tag">Seq_in_index</span>: 1</span><br><span class="line">  <span class="selector-tag">Column_name</span>: <span class="selector-tag">ID</span></span><br><span class="line">    <span class="selector-tag">Collation</span>: <span class="selector-tag">A</span></span><br><span class="line">  <span class="selector-tag">Cardinality</span>: 4046</span><br><span class="line">     <span class="selector-tag">Sub_part</span>: <span class="selector-tag">NULL</span></span><br><span class="line">       <span class="selector-tag">Packed</span>: <span class="selector-tag">NULL</span></span><br><span class="line">         <span class="selector-tag">Null</span>: </span><br><span class="line">   <span class="selector-tag">Index_type</span>: <span class="selector-tag">BTREE</span></span><br><span class="line">      <span class="selector-tag">Comment</span>: </span><br><span class="line"><span class="selector-tag">Index_comment</span>: </span><br><span class="line">*************************** 2. <span class="selector-tag">row</span> ***************************</span><br><span class="line">        <span class="selector-tag">Table</span>: <span class="selector-tag">city</span></span><br><span class="line">   <span class="selector-tag">Non_unique</span>: 1</span><br><span class="line">     <span class="selector-tag">Key_name</span>: <span class="selector-tag">CountryCode</span></span><br><span class="line"> <span class="selector-tag">Seq_in_index</span>: 1</span><br><span class="line">  <span class="selector-tag">Column_name</span>: <span class="selector-tag">CountryCode</span></span><br><span class="line">    <span class="selector-tag">Collation</span>: <span class="selector-tag">A</span></span><br><span class="line">  <span class="selector-tag">Cardinality</span>: 232</span><br><span class="line">     <span class="selector-tag">Sub_part</span>: <span class="selector-tag">NULL</span></span><br><span class="line">       <span class="selector-tag">Packed</span>: <span class="selector-tag">NULL</span></span><br><span class="line">         <span class="selector-tag">Null</span>: </span><br><span class="line">   <span class="selector-tag">Index_type</span>: <span class="selector-tag">BTREE</span></span><br><span class="line">      <span class="selector-tag">Comment</span>: </span><br><span class="line"><span class="selector-tag">Index_comment</span>: </span><br></pre></td></tr></table></figure><p><strong>创建辅助索引</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">city</span> <span class="selector-tag">add</span> <span class="selector-tag">index</span> <span class="selector-tag">idx_name</span>(<span class="selector-tag">name</span>);</span><br><span class="line">&gt; <span class="selector-tag">desc</span> <span class="selector-tag">city</span>    //查看索引<span class="selector-tag">name</span>的<span class="selector-tag">key</span>值变成了<span class="selector-tag">MUl</span></span><br><span class="line">+<span class="selector-tag">-------------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">-----</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">----------------</span>+</span><br><span class="line">| Field       | Type     | Null | Key | Default | Extra          |</span><br><span class="line">+<span class="selector-tag">-------------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">-----</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">----------------</span>+</span><br><span class="line">| ID          | int(11)  | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| Name        | char(35) | NO   | MUL |         |                |</span><br><span class="line">| CountryCode | char(3)  | NO   | MUL |         |                |</span><br><span class="line">| District    | char(20) | NO   |     |         |                |</span><br><span class="line">| Population  | int(11)  | NO   |     | 0       |                |</span><br><span class="line">+<span class="selector-tag">-------------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">-----</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">----------------</span>+</span><br></pre></td></tr></table></figure><p><strong>多列的联合索引</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">city</span> <span class="selector-tag">add</span> <span class="selector-tag">index</span> <span class="selector-tag">idx_c_p</span>(<span class="selector-tag">countrycode</span>,<span class="selector-tag">population</span>);</span><br><span class="line">&gt; <span class="selector-tag">show</span> <span class="selector-tag">index</span> <span class="selector-tag">from</span> <span class="selector-tag">city</span>\<span class="selector-tag">G</span>    //使用这种方法查看索引，才能看到</span><br></pre></td></tr></table></figure><p><strong>唯一索引</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">city</span> <span class="selector-tag">add</span> <span class="selector-tag">unique</span> <span class="selector-tag">index</span> <span class="selector-tag">uidx_dis</span>(<span class="selector-tag">district</span>);</span><br></pre></td></tr></table></figure><p><strong>前缀索引</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">city</span> <span class="selector-tag">add</span> <span class="selector-tag">index</span> <span class="selector-tag">idx_dis</span>(<span class="selector-tag">district</span>(5));</span><br><span class="line">&gt; <span class="selector-tag">show</span> <span class="selector-tag">index</span> <span class="selector-tag">from</span> <span class="selector-tag">city</span>\<span class="selector-tag">G</span>;</span><br><span class="line">        <span class="selector-tag">Table</span>: <span class="selector-tag">city</span></span><br><span class="line">   <span class="selector-tag">Non_unique</span>: 1</span><br><span class="line">     <span class="selector-tag">Key_name</span>: <span class="selector-tag">idx_dis</span></span><br><span class="line"> <span class="selector-tag">Seq_in_index</span>: 1</span><br><span class="line">  <span class="selector-tag">Column_name</span>: <span class="selector-tag">District</span></span><br><span class="line">    <span class="selector-tag">Collation</span>: <span class="selector-tag">A</span></span><br><span class="line">  <span class="selector-tag">Cardinality</span>: 1225</span><br><span class="line">     <span class="selector-tag">Sub_part</span>: 5</span><br><span class="line">       <span class="selector-tag">Packed</span>: <span class="selector-tag">NULL</span></span><br><span class="line">         <span class="selector-tag">Null</span>: </span><br><span class="line">   <span class="selector-tag">Index_type</span>: <span class="selector-tag">BTREE</span></span><br><span class="line">      <span class="selector-tag">Comment</span>: </span><br><span class="line"><span class="selector-tag">Index_comment</span>: </span><br></pre></td></tr></table></figure><p><strong>删除索引</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">city</span> <span class="selector-tag">drop</span> <span class="selector-tag">index</span> <span class="selector-tag">idx_name</span>;</span><br><span class="line">&gt; <span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">city</span> <span class="selector-tag">drop</span> <span class="selector-tag">index</span> <span class="selector-tag">idx_c_p</span>;</span><br><span class="line">&gt; <span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">city</span> <span class="selector-tag">drop</span> <span class="selector-tag">index</span> <span class="selector-tag">idx_dis</span>;</span><br></pre></td></tr></table></figure><h3 id="压力测试"><a href="#压力测试" class="headerlink" title="压力测试"></a>压力测试</h3><p><strong>测试准备</strong></p><blockquote><p>链接：<a href="https://pan.baidu.com/s/1goHUQhlRZpw3wo64rilTGg">https://pan.baidu.com/s/1goHUQhlRZpw3wo64rilTGg</a><br>提取码：7h2b </p><ul><li><p>导入数据</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; create database test charset=utf8</span><br><span class="line">&gt; <span class="selector-tag">use</span> <span class="selector-tag">test</span></span><br><span class="line">&gt; <span class="selector-tag">source</span> /<span class="selector-tag">tmp</span>/<span class="selector-tag">tw100</span><span class="selector-class">.sql</span></span><br></pre></td></tr></table></figure></li><li><p>未优化的情况</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">desc</span> <span class="selector-tag">t100w</span>;</span><br><span class="line">+<span class="selector-tag">-------</span>+<span class="selector-tag">-----------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">-----</span>+<span class="selector-tag">-------------------</span>+<span class="selector-tag">-----------------------------</span>+</span><br><span class="line">| Field | Type      | Null | Key | Default           | Extra                       |</span><br><span class="line">+<span class="selector-tag">-------</span>+<span class="selector-tag">-----------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">-----</span>+<span class="selector-tag">-------------------</span>+<span class="selector-tag">-----------------------------</span>+</span><br><span class="line">| id    | int(11)   | YES  |     | NULL              |                             |</span><br><span class="line">| num   | int(11)   | YES  |     | NULL              |                             |</span><br><span class="line">| k1    | char(2)   | YES  |     | NULL              |                             |</span><br><span class="line">| k2    | char(4)   | YES  |     | NULL              |                             |</span><br><span class="line">| dt    | timestamp | NO   |     | CURRENT_TIMESTAMP | on update CURRENT_TIMESTAMP |</span><br><span class="line">+<span class="selector-tag">-------</span>+<span class="selector-tag">-----------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">-----</span>+<span class="selector-tag">-------------------</span>+<span class="selector-tag">-----------------------------</span>+</span><br></pre></td></tr></table></figure></li></ul></blockquote><p><strong>测试未做优化之前的数据</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ mysqlslap --defaults-file=/etc/my.cnf \</span><br><span class="line">&gt; --concurrency=100 --iterations=1 --create-schema=&#x27;test&#x27; \</span><br><span class="line">&gt; --query=&quot;select * from test.t100w where k2=&#x27;MN89&#x27;&quot; engine=innodb \</span><br><span class="line">&gt; --number-of-queries=2000 -uroot -p123456 -verbose</span><br><span class="line"><span class="selector-tag">mysqlslap</span>: <span class="selector-attr">[Warning]</span> <span class="selector-tag">Using</span> <span class="selector-tag">a</span> <span class="selector-tag">password</span> <span class="selector-tag">on</span> <span class="selector-tag">the</span> <span class="selector-tag">command</span> <span class="selector-tag">line</span> <span class="selector-tag">interface</span> <span class="selector-tag">can</span> <span class="selector-tag">be</span> <span class="selector-tag">insecure</span>.</span><br><span class="line"><span class="selector-tag">Benchmark</span></span><br><span class="line"><span class="selector-tag">Running</span> <span class="selector-tag">for</span> <span class="selector-tag">engine</span> <span class="selector-tag">rbose</span></span><br><span class="line"><span class="selector-tag">Average</span> <span class="selector-tag">number</span> <span class="selector-tag">of</span> <span class="selector-tag">seconds</span> <span class="selector-tag">to</span> <span class="selector-tag">run</span> <span class="selector-tag">all</span> <span class="selector-tag">queries</span>: 1096.414 <span class="selector-tag">seconds</span>    //需要1000多秒</span><br><span class="line"><span class="selector-tag">Minimum</span> <span class="selector-tag">number</span> <span class="selector-tag">of</span> <span class="selector-tag">seconds</span> <span class="selector-tag">to</span> <span class="selector-tag">run</span> <span class="selector-tag">all</span> <span class="selector-tag">queries</span>: 1096.414 <span class="selector-tag">seconds</span></span><br><span class="line"><span class="selector-tag">Maximum</span> <span class="selector-tag">number</span> <span class="selector-tag">of</span> <span class="selector-tag">seconds</span> <span class="selector-tag">to</span> <span class="selector-tag">run</span> <span class="selector-tag">all</span> <span class="selector-tag">queries</span>: 1096.414 <span class="selector-tag">seconds</span></span><br><span class="line"><span class="selector-tag">Number</span> <span class="selector-tag">of</span> <span class="selector-tag">clients</span> <span class="selector-tag">running</span> <span class="selector-tag">queries</span>: 100</span><br><span class="line"><span class="selector-tag">Average</span> <span class="selector-tag">number</span> <span class="selector-tag">of</span> <span class="selector-tag">queries</span> <span class="selector-tag">per</span> <span class="selector-tag">client</span>: 20</span><br></pre></td></tr></table></figure><p><strong>添加索引的测试数据</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">t100w</span> <span class="selector-tag">add</span> <span class="selector-tag">index</span> <span class="selector-tag">id_x</span>(<span class="selector-tag">k2</span>);     //添加索引</span><br><span class="line"></span><br><span class="line">$ mysqlslap --defaults-file=/etc/my.cnf --concurrency=100 --iterations=1 --create-schema=&#x27;test&#x27; --query=&quot;select * from test.t100w where k2=&#x27;MN89&#x27;&quot; engine=innodb --number-of-queries=2000 -uroot -p123456 -verbose</span><br><span class="line"><span class="selector-tag">mysqlslap</span>: <span class="selector-attr">[Warning]</span> <span class="selector-tag">Using</span> <span class="selector-tag">a</span> <span class="selector-tag">password</span> <span class="selector-tag">on</span> <span class="selector-tag">the</span> <span class="selector-tag">command</span> <span class="selector-tag">line</span> <span class="selector-tag">interface</span> <span class="selector-tag">can</span> <span class="selector-tag">be</span> <span class="selector-tag">insecure</span>.</span><br><span class="line"><span class="selector-tag">Benchmark</span></span><br><span class="line"><span class="selector-tag">Running</span> <span class="selector-tag">for</span> <span class="selector-tag">engine</span> <span class="selector-tag">rbose</span></span><br><span class="line"><span class="selector-tag">Average</span> <span class="selector-tag">number</span> <span class="selector-tag">of</span> <span class="selector-tag">seconds</span> <span class="selector-tag">to</span> <span class="selector-tag">run</span> <span class="selector-tag">all</span> <span class="selector-tag">queries</span>: 2.546 <span class="selector-tag">seconds</span>      //只需要2秒</span><br><span class="line"><span class="selector-tag">Minimum</span> <span class="selector-tag">number</span> <span class="selector-tag">of</span> <span class="selector-tag">seconds</span> <span class="selector-tag">to</span> <span class="selector-tag">run</span> <span class="selector-tag">all</span> <span class="selector-tag">queries</span>: 2.546 <span class="selector-tag">seconds</span></span><br><span class="line"><span class="selector-tag">Maximum</span> <span class="selector-tag">number</span> <span class="selector-tag">of</span> <span class="selector-tag">seconds</span> <span class="selector-tag">to</span> <span class="selector-tag">run</span> <span class="selector-tag">all</span> <span class="selector-tag">queries</span>: 2.546 <span class="selector-tag">seconds</span></span><br><span class="line"><span class="selector-tag">Number</span> <span class="selector-tag">of</span> <span class="selector-tag">clients</span> <span class="selector-tag">running</span> <span class="selector-tag">queries</span>: 100</span><br><span class="line"><span class="selector-tag">Average</span> <span class="selector-tag">number</span> <span class="selector-tag">of</span> <span class="selector-tag">queries</span> <span class="selector-tag">per</span> <span class="selector-tag">client</span>: 20</span><br></pre></td></tr></table></figure><h2 id="执行计划分析"><a href="#执行计划分析" class="headerlink" title="执行计划分析"></a>执行计划分析</h2><p>将优化器选择后的执行计划截取出来，便于管理判断语句得执行效率</p><h3 id="获取执行"><a href="#获取执行" class="headerlink" title="获取执行"></a>获取执行</h3><blockquote><ul><li>desc SQL语句</li><li>explain SQL语句</li></ul></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">desc select * from test.t100w where k2=&#x27;NM89&#x27;;</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">----------</span></span><br><span class="line">| id | select_type | table | partitions | #type | possible_keys | key  | key_len | ref  | rows    | filtered | Extra   </span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------------</span>+</span><br><span class="line">|  1 | SIMPLE      | t100w | NULL       | #ALL  | NULL          | NULL | NULL    | NULL | 1027638 |    10.00 | Using </span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">----------</span></span><br></pre></td></tr></table></figure><h3 id="分析执行计划"><a href="#分析执行计划" class="headerlink" title="分析执行计划"></a>分析执行计划</h3><blockquote><p>全表扫描：ALL   //上述扫描出来的就是全表扫描</p><p>索引扫描：index,range,ref,eq_ref,conse(system),Null</p></blockquote><p><strong>索引扫描：index</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">desc</span> <span class="selector-tag">select</span> <span class="selector-tag">countrycode</span> <span class="selector-tag">from</span> <span class="selector-tag">city</span>;</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-----</span></span><br><span class="line">| id | select_type | table | partitions | #type  | possible_keys | key         | key_len | ref  | rows | filtered | </span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-----</span></span><br><span class="line">|  1 | SIMPLE      | city  | NULL       | #index | NULL          | CountryCode | 12      | NULL | 4046 |   100.00 | </span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-----</span></span><br></pre></td></tr></table></figure><p><strong>索引范围扫描：range（&gt;,&lt;,&gt;=,&lt;=,between and,or,in,like）</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">desc</span> <span class="selector-tag">select</span> * <span class="selector-tag">from</span> <span class="selector-tag">city</span> <span class="selector-tag">where</span> <span class="selector-tag">id</span>&gt;2000;</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">---------</span></span><br><span class="line">| id | select_type | table | partitions | #type  | possible_keys | key     | key_len | ref  | rows | filtered | Extra   </span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">---------</span></span><br><span class="line">|  1 | SIMPLE      | city  | NULL       | #range | PRIMARY       | PRIMARY | 4       | NULL | 2023 |   100.00 | Using </span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">---------</span></span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; desc select * from city where countrycode like &#x27;CH%&#x27;;</span><br><span class="line">&gt; desc select * from city where countrycode=&#x27;CHN&#x27; or  countrycode=&#x27;USA&#x27;;</span><br><span class="line">&gt; desc select * from city where countrycode in (&#x27;CHN&#x27;,&#x27;USR&#x27;);</span><br><span class="line">&gt; desc select * from city where id != 10</span><br></pre></td></tr></table></figure><blockquote><p>对于主键索引列来说，!=和not in等语句是走range的</p><p>对于辅助索引来说，!=和not in等语句是不走索引的</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt; desc select * from city where countrycode=&#x27;CHN&#x27;;                      //走索引</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------</span>+</span><br><span class="line">| id | select_type | table | partitions | type | possible_keys | key         | key_len | ref   | rows | filtered | Extra |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------</span>+</span><br><span class="line">|  1 | SIMPLE      | city  | NULL       | ref  | CountryCode   | CountryCode | 12      | const |  363 |   100.00 | NULL  |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------</span>+</span><br><span class="line"></span><br><span class="line">&gt; desc select * from city where countrycode != &#x27;CHN&#x27;;                  //不走索引</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------------</span>+</span><br><span class="line">| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra       |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------------</span>+</span><br><span class="line">|  1 | SIMPLE      | city  | NULL       | ALL  | CountryCode   | NULL | NULL    | NULL | 4046 |    91.84 | Using where |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------------</span>+</span><br></pre></td></tr></table></figure><p><strong>辅助索引等值查询：ref</strong></p><blockquote><p>ref一般改写为union all</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; desc select * from city where countrycode=&#x27;CHN&#x27; union all select * from city where countrycode=&#x27;Ude=&#x27;USA&#x27;;</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------</span>+</span><br><span class="line">| id | select_type | table | partitions | type | possible_keys | key         | key_len | ref   | rows | filtered | Extra |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------</span>+</span><br><span class="line">|  1 | PRIMARY     | city  | NULL       | ref  | CountryCode   | CountryCode | 12      | const |  363 |   100.00 | NULL  |</span><br><span class="line">|  2 | UNION       | city  | NULL       | ref  | CountryCode   | CountryCode | 12      | const |  274 |   100.00 | NULL  |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------</span>+</span><br></pre></td></tr></table></figure><p><strong>多表连接时，子表使用主键列或唯一列作为连接条件：eq_ref</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; desc select b.name,a.name,a.population from city as a join country as b on a.countrycode=b.code where a.population&lt;100;</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">--------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">---------------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-----------</span></span><br><span class="line">| id | select_type | table | partitions | type   | possible_keys | key     | key_len | ref                 | rows | filtered | Extra     </span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">--------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">---------------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-----------</span></span><br><span class="line">|  1 | SIMPLE      | a     | NULL       | ALL    | CountryCode   | NULL    | NULL    | NULL                | 4046 |    33.33 | Using where |</span><br><span class="line">|  1 | SIMPLE      | b     | NULL       | eq_ref | PRIMARY       | PRIMARY | 12      | world.a.CountryCode |    1 |   100.00 | NULL       </span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">--------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">---------------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-----------</span></span><br></pre></td></tr></table></figure><p><strong>主键或唯一键的等值查询：const(system)</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; desc select * from city where id=100;</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------</span>+</span><br><span class="line">| id | select_type | table | partitions | #type  | possible_keys | key     | key_len | ref   | rows | filtered | Extra </span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------</span>+</span><br><span class="line">|  1 | SIMPLE      | city  | NULL       | #const | PRIMARY       | PRIMARY | 4       | const |    1 |   100.00 | NULL </span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------</span>+</span><br></pre></td></tr></table></figure><p><strong>没有查询结果：NULL</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; desc select * from city where id=0000;</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------------</span></span><br><span class="line">| id | select_type | table | partitions | #type | possible_keys | key  | key_len | ref  | rows | filtered | Extra                          |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------------</span></span><br><span class="line">|  1 | SIMPLE      | NULL  | NULL       | #NULL | NULL          | NULL | NULL    | NULL | NULL |     NULL | no matching </span><br></pre></td></tr></table></figure><p><strong>possible_key（可能会用到的索引）</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; desc select * from city where countrycode=&#x27;CHN&#x27;;  //countrycode是辅助索引，所以会在possible_key出现</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------</span>+</span><br><span class="line">| id | select_type | table | partitions | type | possible_keys | key         | key_len | ref   | rows | filtered | Extra |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------</span>+</span><br><span class="line">|  1 | SIMPLE      | city  | NULL       | ref  | CountryCode   | CountryCode | 12      | const |  363 |   100.00 | NULL  |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------</span>+</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; desc select * from city where countrycode !=&#x27;CHN&#x27;; //同样是使用where，但是没有走索引，因为真正key没有值</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span></span><br><span class="line">| id | select_type | table | partitions | type | #possible_keys | #key  | key_len </span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span></span><br><span class="line">|  1 | SIMPLE      | city  | NULL       | ALL  | #CountryCode   | #NULL | NULL    </span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span></span><br></pre></td></tr></table></figure><p><strong>key</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; desc select * from city where countrycode = &#x27;CHN&#x27;; //只有key有值，才算走了索引</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">---------</span>+</span><br><span class="line">| id | select_type | table | partitions | type | possible_keys | #key         | key_len |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">---------</span>+</span><br><span class="line">|  1 | SIMPLE      | city  | NULL       | ref  | CountryCode   | #CountryCode | 12      |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">---------</span>+</span><br></pre></td></tr></table></figure><p><strong>key_len（索引覆盖长度）</strong></p><blockquote><p>utf8mb4 == 每个字符，中文字符==4个字节，英文或者是数字每个字符=1个=字节</p><p>utf8 == 每个字符，中文字符==3个字节，英文或者是数字每个字符==1个字节</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">show</span> <span class="selector-tag">create</span> <span class="selector-tag">table</span> <span class="selector-tag">t100w</span>; //可以查看表的字符集</span><br></pre></td></tr></table></figure><blockquote><ul><li><p>单独创建一个表，并设置为utf8mb4字符</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">create</span> <span class="selector-tag">table</span> <span class="selector-tag">test</span>(<span class="selector-tag">id</span> <span class="selector-tag">int</span>,<span class="selector-tag">k1</span> <span class="selector-tag">char</span>(2),<span class="selector-tag">k2</span> <span class="selector-tag">varchar</span>(2),<span class="selector-tag">k3</span> <span class="selector-tag">char</span>(4),<span class="selector-tag">k4</span> <span class="selector-tag">varchar</span>(4)) <span class="selector-tag">charset</span> <span class="selector-tag">utf8mb4</span>;</span><br><span class="line">&gt; <span class="selector-tag">show</span> <span class="selector-tag">create</span> <span class="selector-tag">table</span> <span class="selector-tag">test</span>;</span><br><span class="line">...........省略...............</span><br><span class="line">)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 </span><br></pre></td></tr></table></figure></li><li><p>对表插入数据</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; insert into test values(1,&#x27;aa&#x27;,&#x27;中国&#x27;,&#x27;bbbb&#x27;,&#x27;欢迎来到&#x27;);</span><br><span class="line">&gt; insert into test values(2,&#x27;xx&#x27;,&#x27;中国&#x27;,&#x27;yyyy&#x27;,&#x27;欢迎来到&#x27;);</span><br><span class="line"></span><br><span class="line">&gt; <span class="selector-tag">select</span> * <span class="selector-tag">from</span> <span class="selector-tag">test</span>;</span><br><span class="line">+<span class="selector-tag">------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">--------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">--------------</span>+</span><br><span class="line">| id   | k1   | k2     | k3   | k4           |</span><br><span class="line">+<span class="selector-tag">------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">--------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">--------------</span>+</span><br><span class="line">|    1 | aa   | 中国   | bbbb | 欢迎来到     |</span><br><span class="line">|    2 | xx   | 中国   | yyyy | 欢迎来到     |</span><br><span class="line">+<span class="selector-tag">------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">--------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">--------------</span>+</span><br></pre></td></tr></table></figure></li><li><p>创建索引和辅助索引</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">test</span> <span class="selector-tag">add</span> <span class="selector-tag">index</span> <span class="selector-tag">id_x</span>(<span class="selector-tag">id</span>);</span><br><span class="line"><span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">test</span> <span class="selector-tag">add</span> <span class="selector-tag">index</span> <span class="selector-tag">k1</span>(<span class="selector-tag">k1</span>);</span><br><span class="line"><span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">test</span> <span class="selector-tag">add</span> <span class="selector-tag">index</span> <span class="selector-tag">k2</span>(<span class="selector-tag">k2</span>);</span><br><span class="line"><span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">test</span> <span class="selector-tag">add</span> <span class="selector-tag">index</span> <span class="selector-tag">k3</span>(<span class="selector-tag">k3</span>);</span><br><span class="line"><span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">test</span> <span class="selector-tag">add</span> <span class="selector-tag">index</span> <span class="selector-tag">k4</span>(<span class="selector-tag">k4</span>);</span><br></pre></td></tr></table></figure></li><li><p>查看key_len长度</p><p>#查看k1设置的是char(2)，但是key_len长度是9，因为utf8mb4字符集会预留最大的字节，也就是中文的字节，1个中文==1个字符=4个字节，所以char(2)==8个字节，再加上mysql对key值保留一个非空字节长度，所以8+1=9,key_len长度等于9</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; desc select * from  test where k1=&#x27;aa&#x27;;  </span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------</span>+</span><br><span class="line">| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref   | rows | filtered | Extra |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------</span>+</span><br><span class="line">|  1 | SIMPLE      | test  | NULL       | ref  | k1            | k1   | 9       | const |    1 |   100.00 | NULL  |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------</span>+</span><br></pre></td></tr></table></figure><p>#k2的类型是varchar(2)，8+1=9个字节，但是varcher类型还对头和尾加上一个字节，所以9+2=11个字节</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; desc select * from  test where k2=&#x27;中国&#x27;;</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------</span>+</span><br><span class="line">| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref   | rows | filtered | Extra |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-------</span>+</span><br><span class="line">|  1 | SIMPLE      | test  | NULL       | ref  | k2            | k2   | 11      | const |    2 |   100.00 | NULL  |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+</span><br></pre></td></tr></table></figure><p>#以此类推，char(4)=17个字节，varchar(4)=19个字节</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; desc select * from  test where k3=&#x27;bbbb&#x27;;</span><br><span class="line">&gt; desc select * from  test where k4=&#x27;欢迎来到&#x27;;</span><br></pre></td></tr></table></figure><p>#总结</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. <span class="selector-tag">utf8mb4</span>不管存储的时字符,数字,中文,都1个字符最大预留长度是4个字节</span><br><span class="line">2. 对于中文,1个占4个字节 </span><br><span class="line">3. 对于数字和字母,1个实际占用大小是1个字节</span><br></pre></td></tr></table></figure></li></ul></blockquote><p><strong>出现的错误： Extar: using filesort</strong></p><blockquote><p>出现Using filesort，说明在查询中有关排序的条件列没有合理的应用索引</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">test</span> <span class="selector-tag">drop</span> <span class="selector-tag">index</span> <span class="selector-tag">xx</span>;                 //将之前创建的索引删除掉  </span><br><span class="line">&gt; <span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">test</span> <span class="selector-tag">add</span> <span class="selector-tag">index</span> <span class="selector-tag">id_x</span>(<span class="selector-tag">k1</span>,<span class="selector-tag">k2</span>,<span class="selector-tag">k3</span>,<span class="selector-tag">k4</span>);  //重新创建索引</span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210208201925562.png"></p><h2 id="联合索引应用细节"><a href="#联合索引应用细节" class="headerlink" title="联合索引应用细节"></a>联合索引应用细节</h2><h3 id="所有索引列都是-lt-等值-gt-查询条件下，无关排序顺序"><a href="#所有索引列都是-lt-等值-gt-查询条件下，无关排序顺序" class="headerlink" title="所有索引列都是&lt;等值&gt;查询条件下，无关排序顺序"></a>所有索引列都是&lt;等值&gt;查询条件下，无关排序顺序</h3><p><strong>唯一值多的列放在最左侧，从范围的大到范围小，效率会更高</strong></p><blockquote><p>比如其他：abcd、acdb、adbc等等。</p><p>原因：优化器会自动左查询条件的排列（会自动排序）</p></blockquote><p><strong>k1,k2,k3,k4顺序</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; desc select * from test where k1=&#x27;aa&#x27; and k2=&#x27;中国&#x27; and k3=&#x27;aaaa&#x27; and k4=&#x27;欢迎来到&#x27;;</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------------------------</span>+</span><br><span class="line">| id | select_type | table | partitions | type | possible_keys | key  | #key_len | ref                     |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------------------------</span>+</span><br><span class="line">|  1 | SIMPLE      | test  | NULL       | ref  | id_x          | id_x | #56      | const,const,const,const |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------------------------</span>+</span><br></pre></td></tr></table></figure><p><strong>k1,k2,k4,k3顺序，也会走联合索引，因为会自动排序</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; desc select * from test where k1=&#x27;aa&#x27; and k2=&#x27;中国&#x27;  and k4=&#x27;欢迎来到&#x27; and k3=&#x27;aaaa&#x27;; </span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------------------------</span>+</span><br><span class="line">| id | select_type | table | partitions | type | possible_keys | key  | #key_len | ref                     |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------------------------</span>+</span><br><span class="line">|  1 | SIMPLE      | test  | NULL       | ref  | id_x          | id_x | #56      | const,const,const,const |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------------------------</span>+</span><br></pre></td></tr></table></figure><h3 id="不连续部分条件"><a href="#不连续部分条件" class="headerlink" title="不连续部分条件"></a>不连续部分条件</h3><blockquote><p>比如：只查询三个条件</p></blockquote><p><strong>k1,k2,k4顺序，走完k1,k2后面的不走索引了</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; desc select * from test where k1=&#x27;aa&#x27; and k2=&#x27;中国&#x27; and k4=&#x27;欢迎来到&#x27;;</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-----------------------</span>+</span><br><span class="line">| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref         | rows | filtered | Extra                 |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-----------------------</span>+</span><br><span class="line">|  1 | SIMPLE      | test  | NULL       | ref  | id_x          | id_x | 20      | const,const |    1 |    50.00 | Using index condition |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-----------------------</span>+</span><br></pre></td></tr></table></figure><p><strong>k4,k3,k1排序之后，走k1，后面的就不走索引了</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; desc select * from test where  k4=&#x27;欢迎来到&#x27; and k3=&#x27;aaa&#x27; and k1=&#x27;aa&#x27;;</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-----------------------</span>+</span><br><span class="line">| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref   | rows | filtered | Extra                 |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-----------------------</span>+</span><br><span class="line">|  1 | SIMPLE      | test  | NULL       | ref  | id_x          | id_x | 9       | const |    1 |    50.00 | Using index condition |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-----------------------</span>+</span><br></pre></td></tr></table></figure><p><strong>如何优化</strong></p><blockquote><p>abd –&gt; idx(a,b,d)</p><p>dca –&gt; idp(d,c,a)</p><p>只要是三个就行，比如说(k4,k2,k1),(k2,k4,k1)没有问题，因为会优化器会自动帮你排列</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">test</span> <span class="selector-tag">add</span> <span class="selector-tag">index</span> <span class="selector-tag">id_a</span>(<span class="selector-tag">k1</span>,<span class="selector-tag">k2</span>,<span class="selector-tag">k4</span>);</span><br><span class="line">&gt; <span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">test</span> <span class="selector-tag">add</span> <span class="selector-tag">index</span> <span class="selector-tag">id_a</span>(<span class="selector-tag">k1</span>,<span class="selector-tag">k3</span>,<span class="selector-tag">k4</span>);</span><br></pre></td></tr></table></figure><h3 id="在where查询中如果出现-lt-gt-gt-lt-like"><a href="#在where查询中如果出现-lt-gt-gt-lt-like" class="headerlink" title="在where查询中如果出现&lt; &gt; &gt;= &lt;= like"></a>在where查询中如果出现&lt; &gt; &gt;= &lt;= like</h3><p><strong>只有了k1索引，其他的都没有走</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; desc select * from test where  k2=&#x27;中国&#x27; and k3=&#x27;aaaa&#x27; and k4=&#x27;欢迎来到&#x27; and k1&gt;&#x27;aa&#x27;; </span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-----------------------</span>+</span><br><span class="line">| id | select_type | table | partitions | type  | possible_keys | key  | key_len | ref  | rows | filtered | Extra                 |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-----------------------</span>+</span><br><span class="line">|  1 | SIMPLE      | test  | NULL       | range | id_x          | id_x | 9       | NULL |    1 |    50.00 | Using index condition |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-----------------------</span>+</span><br></pre></td></tr></table></figure><p><strong>如何优化</strong></p><blockquote><p>创建索引的时候将k1放入后面即可</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">test</span> <span class="selector-tag">add</span> <span class="selector-tag">index</span> <span class="selector-tag">idx1</span>(<span class="selector-tag">k2</span>,<span class="selector-tag">k3</span>,<span class="selector-tag">k4</span>,<span class="selector-tag">k1</span>);</span><br></pre></td></tr></table></figure><h3 id="多子句查询应用联合索引"><a href="#多子句查询应用联合索引" class="headerlink" title="多子句查询应用联合索引"></a>多子句查询应用联合索引</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; desc select * from  test where k2=&#x27;中国&#x27; group by k4;</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-</span></span><br><span class="line">| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | </span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-</span></span><br><span class="line">|  1 | SIMPLE      | test  | NULL       | ALL  | id_a          | NULL | NULL    | NULL |    2 |    50.00 | </span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">-</span></span><br></pre></td></tr></table></figure><p><strong>如何优化</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">alter</span> <span class="selector-tag">table</span> <span class="selector-tag">test</span> <span class="selector-tag">add</span> <span class="selector-tag">index</span> <span class="selector-tag">idx3</span>(<span class="selector-tag">k1</span>,<span class="selector-tag">k2</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL的SQL基础应用-3</title>
      <link href="2021/03/02/MySQL%E7%9A%84SQL%E5%9F%BA%E7%A1%80%E5%BA%94%E7%94%A8-3/"/>
      <url>2021/03/02/MySQL%E7%9A%84SQL%E5%9F%BA%E7%A1%80%E5%BA%94%E7%94%A8-3/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL基础应用"><a href="#SQL基础应用" class="headerlink" title="SQL基础应用"></a>SQL基础应用</h1><h2 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h2><h3 id="SQL介绍"><a href="#SQL介绍" class="headerlink" title="SQL介绍"></a>SQL介绍</h3><p>SQL（结构化的查询语句），是关系型数据通用的命令，遵循SQL92标准的（SQL_MODE）</p><p><strong>SQL常用种类</strong></p><blockquote><ul><li>DDL：数据定义语句</li><li>DCL：数据控制语句</li><li>DML：数据操作语句</li><li>DQL：数据查询语句</li></ul></blockquote><h2 id="数据类型介绍"><a href="#数据类型介绍" class="headerlink" title="数据类型介绍"></a>数据类型介绍</h2><h3 id="整数类型"><a href="#整数类型" class="headerlink" title="整数类型"></a>整数类型</h3><p>对于整数类型数据，是通过区分有符号和无符号的</p><table><thead><tr><th>类名称</th><th>有符号（signed)</th><th>无符号数（Unsigned）</th><th>存储空间</th><th>说明</th></tr></thead><tbody><tr><td>TINYINT</td><td>-129~127</td><td>0-255</td><td>1字节</td><td>极小整数数据类型</td></tr><tr><td>SMALLINT</td><td>-32768~32767</td><td>0-65535</td><td>2字节</td><td>较小整数数据类型</td></tr><tr><td>MEDIUMINT</td><td>-8388608~8388607</td><td>0-16777215</td><td>3字节</td><td>中型整数数据类型</td></tr><tr><td>INT</td><td>-2147483648~2147483647</td><td>0-4294967295</td><td>4字节</td><td>常规数据整数类型</td></tr><tr><td>bigint</td><td>-9223372036854775808~9223372036854775807</td><td>0-18446744073709551615</td><td>8字节</td><td>超大数据整数类型</td></tr></tbody></table><h3 id="小数类型"><a href="#小数类型" class="headerlink" title="小数类型"></a>小数类型</h3><p>使用浮点数的几个建议</p><blockquote><ul><li>浮点数存在数据误差</li><li>对货币等对精度敏感的数据，应该用定点数表示或存储，推荐是decimal</li></ul></blockquote><table><thead><tr><th align="left">类</th><th>类名称</th><th>说明</th></tr></thead><tbody><tr><td align="left">浮点数</td><td>FLOAT</td><td>小型单精度（4个字节）浮点数</td></tr><tr><td align="left">浮点数</td><td>DOUBLE</td><td>常规双精度（8个字节）浮点数</td></tr><tr><td align="left">定点数</td><td>DECIMAL</td><td>包含整数部分、小数部分或同事包括二者的精确值数值</td></tr></tbody></table><h3 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h3><p>字符串类型是比较通用的数据类型，对于字符串类型不要过多的使用这些文本，因为它们本不属于关系型数据，是关系型数据库（包括MySQL）不擅长的</p><table><thead><tr><th>类型名称</th><th>大小</th><th>说明</th></tr></thead><tbody><tr><td>CHAR</td><td>0-255字节</td><td>定长字符串类型，不管字符串长度多长，都立即分配字符长度的存储空间，未占满的空间使用“空格”填充</td></tr><tr><td>VARCHAR</td><td>0-255字节</td><td>变长字符串类型，每次存储数据之前，都要判断长度，按需分配字符空间，会单独申请一个字符长度的空间存储字符长度（少于255，如果超过255以上，会占用两个存储空间）</td></tr><tr><td>TINYBLOB</td><td>0-255字节</td><td>不超过255个字符的二进制字符串</td></tr><tr><td>TINYTEXT</td><td>0-255字节</td><td>短文本字符串</td></tr><tr><td>BLOB</td><td>0-65535字节</td><td>二进制形式的长文本数据</td></tr><tr><td>TEXT</td><td>0-65535字节</td><td>长文本数据</td></tr><tr><td>MEDIUMBLOB</td><td>0-16777215字节</td><td>二进制形式的中等长度文本数据</td></tr><tr><td>MEDIUMTEXT</td><td>0-16777215字节</td><td>中等长度文本数据</td></tr><tr><td>LOGNGBLOB</td><td>0-4294976295字节</td><td>二进制形式的极大文本数据</td></tr><tr><td>LONGTEXT</td><td>0-4294976295字节</td><td>极大文本数据</td></tr></tbody></table><h3 id="MySQL日期类型"><a href="#MySQL日期类型" class="headerlink" title="MySQL日期类型"></a>MySQL日期类型</h3><table><thead><tr><th>类型名称</th><th>大小</th><th>范围</th><th>说明</th></tr></thead><tbody><tr><td>DATATIME</td><td>8字节</td><td>1000-01-01 00:00:00.000000 至 9999-12-31 23:59:59.999999</td><td>混合日期和时间值</td></tr><tr><td>TIMESTAMP</td><td>4字节</td><td>1970-01-01 00:00:00.000000 至 2038-01-19 11:14:07.999999</td><td>混合日期和时间值，时间戳</td></tr><tr><td>DATA</td><td>3字节</td><td>1000-01-01/9999-12-31</td><td>日期值</td></tr></tbody></table><p>对于日期类型，最常用的三个类型：data、datatime和timestamp，创建一张表来模拟一下，并插入一行数据</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">create</span> <span class="selector-tag">table</span> <span class="selector-tag">time1</span>(<span class="selector-tag">data1</span> <span class="selector-tag">datetime</span>,<span class="selector-tag">data2</span> <span class="selector-tag">timestamp</span>,<span class="selector-tag">date3</span> <span class="selector-tag">date</span>);</span><br><span class="line">&gt; <span class="selector-tag">insert</span> <span class="selector-tag">into</span> <span class="selector-tag">time1</span> <span class="selector-tag">values</span>(<span class="selector-tag">current_date</span>,<span class="selector-tag">current_timestamp</span>,<span class="selector-tag">current_date</span>);</span><br><span class="line">&gt; <span class="selector-tag">select</span> * <span class="selector-tag">from</span> <span class="selector-tag">time1</span>;</span><br><span class="line">+<span class="selector-tag">---------------------</span>+<span class="selector-tag">---------------------</span>+<span class="selector-tag">------------</span>+</span><br><span class="line">| data1               | data2               | date3      |</span><br><span class="line">+<span class="selector-tag">---------------------</span>+<span class="selector-tag">---------------------</span>+<span class="selector-tag">------------</span>+</span><br><span class="line">| 2021-02-20 00:00:00 | 2021-02-20 20:35:13 | 2021-02-20 |</span><br><span class="line">+<span class="selector-tag">---------------------</span>+<span class="selector-tag">---------------------</span>+<span class="selector-tag">------------</span>+</span><br></pre></td></tr></table></figure><p>datetime和timestamp精确到秒，date是精确到日，datetime占用8个字节，timestamp占用了4个字节，所以timestamp时间范围要短一些</p><h3 id="JSON类型"><a href="#JSON类型" class="headerlink" title="JSON类型"></a>JSON类型</h3><p>JSON类型是5.7版本中推出的，创建一张json_ta表，然后插入两行记录看看</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">create</span> <span class="selector-tag">table</span> <span class="selector-tag">json_ta</span> (<span class="selector-tag">uid</span> <span class="selector-tag">int</span> <span class="selector-tag">auto_increment</span>,<span class="selector-tag">data</span> <span class="selector-tag">json</span>,<span class="selector-tag">primary</span> <span class="selector-tag">key</span>(<span class="selector-tag">uid</span>));</span><br><span class="line">&gt; insert into json_ta values(NULL,&#x27;&#123;&quot;name&quot;:&quot;old&quot;,&quot;age&quot;:20&#125;&#x27;);</span><br><span class="line">&gt; insert into json_ta values(NULL,&#x27;&#123;&quot;name&quot;:&quot;old&quot;,&quot;age&quot;:20&#125;&#x27;);</span><br></pre></td></tr></table></figure><p>如果要查询数据，可以使用类似引用的语法“-&gt;”即可</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; select data-&gt;&quot;$.name&quot; as name,(data-&gt;&quot;$.age&quot;) from json_ta group by name;</span><br><span class="line">+<span class="selector-tag">-------</span>+<span class="selector-tag">-----------------</span>+</span><br><span class="line">| name  | (data-&gt;&quot;$.age&quot;) |</span><br><span class="line">+<span class="selector-tag">-------</span>+<span class="selector-tag">-----------------</span>+</span><br><span class="line">| &quot;old&quot; | 20              |</span><br><span class="line">| &quot;wu&quot;  | 18              |</span><br><span class="line">+<span class="selector-tag">-------</span>+<span class="selector-tag">-----------------</span>+</span><br></pre></td></tr></table></figure><h2 id="库的定义规范"><a href="#库的定义规范" class="headerlink" title="库的定义规范"></a>库的定义规范</h2><h3 id="建表（这里使用SQLyog建立）"><a href="#建表（这里使用SQLyog建立）" class="headerlink" title="建表（这里使用SQLyog建立）"></a>建表（这里使用SQLyog建立）</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210207141849767.png"></p><h3 id="列属性说明"><a href="#列属性说明" class="headerlink" title="列属性说明"></a>列属性说明</h3><blockquote><p>PS：最好值不为空，如果不知道填什么，则可以填0</p></blockquote><table><thead><tr><th>列名</th><th>说明</th></tr></thead><tbody><tr><td>PRIMARY KEY（主键）</td><td>主键约束，表中只能由一个，非空且唯一，一般用于数字</td></tr><tr><td>UNIQUE KEY（唯一键约束）</td><td>不允许重复值</td></tr><tr><td>NOT NULL（非空）</td><td>非空约束，不允许空值</td></tr><tr><td>DEFAULT（默认）</td><td>一般配置NOT NULL使用</td></tr><tr><td>UNSIGNED（无符号）</td><td>一般是配置数字列，非负数</td></tr><tr><td>AUTO_INCREMENT（自增长）</td><td>自增长的列</td></tr><tr><td>COMMENT（注释）</td><td>注释</td></tr></tbody></table><h3 id="语句创建"><a href="#语句创建" class="headerlink" title="语句创建"></a>语句创建</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">CREATE</span> <span class="selector-tag">TABLE</span> <span class="selector-tag">stu</span>(</span><br><span class="line">id INT PRIMARY KEY NOT NULL AUTO_INCREMENT COMMENT &#x27;学号&#x27;,</span><br><span class="line">sname VARCHAR(255) NOT NULL COMMENT &#x27;姓名&#x27;,</span><br><span class="line">age TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT &#x27;年龄&#x27;,</span><br><span class="line">gender ENUM(&#x27;m&#x27;,&#x27;f&#x27;,&#x27;n&#x27;) NOT NULL DEFAULT &#x27;n&#x27; COMMENT &#x27;性别&#x27;,</span><br><span class="line">intime DATETIME NOT NULL DEFAULT NOW() COMMENT &#x27;入学时间&#x27;</span><br><span class="line">)<span class="selector-tag">ENGINE</span> <span class="selector-tag">INNODB</span> <span class="selector-tag">CHARSET</span> <span class="selector-tag">utf8mb4</span>;</span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210207143749041.png"></p><h3 id="建表的规范"><a href="#建表的规范" class="headerlink" title="建表的规范"></a>建表的规范</h3><blockquote><ol><li>表名小写字符，不能数字开头</li><li>创建表，使用和业务有关的表名</li><li>选择合适的数据类型及长度</li><li>每个列设置not null + default，不知道填什么，则使用0填充，对于字符串有效字符串填充</li><li>每个列设置注释</li><li>表必须设置存储引擎和字符集</li><li>主键列尽量使无关列数字列，最好是自增长</li><li>enum类型不要保存数字，使用字符串，当然也不建议使用，可使用TINYINT来代替</li><li>存储精确浮点数必须使用 DECIMAL 替代 FLOAT 和 DOUBLE</li></ol></blockquote><h3 id="查询、删除、建表信息"><a href="#查询、删除、建表信息" class="headerlink" title="查询、删除、建表信息"></a>查询、删除、建表信息</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">show</span> <span class="selector-tag">tables</span>;</span><br><span class="line">&gt; <span class="selector-tag">show</span> <span class="selector-tag">create</span> <span class="selector-tag">table</span> <span class="selector-tag">stu</span>;</span><br><span class="line">&gt; <span class="selector-tag">desc</span> <span class="selector-tag">stu</span>;                         //查看表格</span><br><span class="line">&gt; <span class="selector-tag">create</span> <span class="selector-tag">table</span> <span class="selector-tag">tese</span> <span class="selector-tag">like</span> <span class="selector-tag">stu</span>;       //创建一个表结构一样的表</span><br><span class="line">&gt; <span class="selector-tag">drop</span> <span class="selector-tag">table</span> <span class="selector-tag">test</span>;</span><br></pre></td></tr></table></figure><h3 id="修改表的信息"><a href="#修改表的信息" class="headerlink" title="修改表的信息"></a>修改表的信息</h3><p><strong>上述创建的stu表中添加qq列</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE stu ADD qq VARCHAR(20) NOT NULL COMMENT &#x27;qq信息&#x27;</span><br><span class="line"><span class="selector-tag">DESC</span> <span class="selector-tag">stu</span></span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210207144106227.png"></p><p><strong>在sname后添加链接列</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE stu ADD wechat VARCHAR(64) NOT NULL UNIQUE COMMENT &#x27;微信&#x27; AFTER sname</span><br><span class="line"><span class="selector-tag">DESC</span> <span class="selector-tag">stu</span></span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210207144823970.png"></p><p><strong>删除刚才添加的表（测试使用，不建议工作使用）</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ALTER</span> <span class="selector-tag">TABLE</span> <span class="selector-tag">stu</span> <span class="selector-tag">DROP</span> <span class="selector-tag">qq</span>;</span><br><span class="line"><span class="selector-tag">ALTER</span> <span class="selector-tag">TABLE</span> <span class="selector-tag">stu</span> <span class="selector-tag">DROP</span> <span class="selector-tag">link</span>;</span><br><span class="line"><span class="selector-tag">desc</span> <span class="selector-tag">stu</span>;</span><br></pre></td></tr></table></figure><p><strong>修改sname数据类型的属性</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE stu MODIFY sname VARCHAR(64) NOT NULL COMMENT &#x27;性别&#x27;;</span><br><span class="line"><span class="selector-tag">DESC</span> <span class="selector-tag">stu</span>;</span><br></pre></td></tr></table></figure><p><strong>修改gender改为sex数据类型改为char类型</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE stu MODIFY gender CHAR(10) NOT NULL COMMENT &#x27;性别&#x27;;</span><br><span class="line"><span class="selector-tag">DESC</span> <span class="selector-tag">stu</span>;</span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210207145525183.png"></p><h2 id="DDL（数据的定义语句）"><a href="#DDL（数据的定义语句）" class="headerlink" title="DDL（数据的定义语句）"></a>DDL（数据的定义语句）</h2><h3 id="库的定义"><a href="#库的定义" class="headerlink" title="库的定义"></a>库的定义</h3><p><strong>创建数据库，并设置字符集</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">create</span> <span class="selector-tag">database</span> <span class="selector-tag">word</span> <span class="selector-tag">charset</span> <span class="selector-tag">utf8mb4</span> <span class="selector-tag">collate</span> <span class="selector-tag">utf8mb4_bin</span>;</span><br></pre></td></tr></table></figure><p><strong>查询数据库</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">show</span> <span class="selector-tag">databases</span>;</span><br><span class="line">&gt; <span class="selector-tag">show</span> <span class="selector-tag">create</span> <span class="selector-tag">database</span> <span class="selector-tag">word</span>;</span><br></pre></td></tr></table></figure><p><strong>删除数据库</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">drop</span> <span class="selector-tag">database</span> <span class="selector-tag">word</span>;</span><br></pre></td></tr></table></figure><p><strong>修改数据库字符集</strong></p><blockquote><p>注意：修改字符集，一定要从小往大修改，比如utf-8 –&gt; utfmb4，否则无法设置</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">create</span> <span class="selector-tag">database</span> <span class="selector-tag">boy</span>;</span><br><span class="line">&gt; <span class="selector-tag">show</span> <span class="selector-tag">create</span> <span class="selector-tag">database</span> <span class="selector-tag">boy</span>;</span><br><span class="line">+<span class="selector-tag">----------</span>+<span class="selector-tag">----------------------------------------------------------------</span>+</span><br><span class="line">| Database | Create Database                                                |</span><br><span class="line">+<span class="selector-tag">----------</span>+<span class="selector-tag">----------------------------------------------------------------</span>+</span><br><span class="line">| boy      | CREATE DATABASE `boy` /*!40100 DEFAULT CHARACTER SET latin1 */ |</span><br><span class="line">+<span class="selector-tag">----------</span>+<span class="selector-tag">----------------------------------------------------------------</span>+</span><br><span class="line"></span><br><span class="line">//修改</span><br><span class="line">&gt; <span class="selector-tag">alter</span> <span class="selector-tag">database</span> <span class="selector-tag">boy</span> <span class="selector-tag">charset</span> <span class="selector-tag">utf8mb4</span>;</span><br><span class="line">&gt; <span class="selector-tag">show</span> <span class="selector-tag">create</span> <span class="selector-tag">database</span> <span class="selector-tag">boy</span>; </span><br><span class="line">+<span class="selector-tag">----------</span>+<span class="selector-tag">-----------------------------------------------------------------</span>+</span><br><span class="line">| Database | Create Database                                                 |</span><br><span class="line">+<span class="selector-tag">----------</span>+<span class="selector-tag">-----------------------------------------------------------------</span>+</span><br><span class="line">| boy      | CREATE DATABASE `boy` /*!40100 DEFAULT CHARACTER SET utf8mb4 */ |</span><br><span class="line">+<span class="selector-tag">----------</span>+<span class="selector-tag">-----------------------------------------------------------------</span>+</span><br></pre></td></tr></table></figure><h2 id="DCL（数据控制语句）"><a href="#DCL（数据控制语句）" class="headerlink" title="DCL（数据控制语句）"></a>DCL（数据控制语句）</h2><h3 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h3><p><strong>登录MySQL和管理MySQL</strong></p><blockquote><ol><li><p>用户定义白名单：用户名@‘白名单(网段)’</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">word</span>@’%’             //允许全部用户</span><br><span class="line">word@’localhost’            //只允许本地用户</span><br><span class="line">word@’<span class="number">10.0</span>.<span class="number">0</span>.%’            //只允许<span class="number">10.0</span>.<span class="number">0.0</span>/<span class="number">24</span>的网段</span><br><span class="line">word@’<span class="number">10.0</span>.<span class="number">0.5%</span>’            //只允许<span class="number">10.0</span>.<span class="number">0.50</span>-<span class="number">59</span>的网段</span><br><span class="line">word@’<span class="number">10.0</span>.<span class="number">0.0</span>/<span class="number">255.255</span>.<span class="number">254.0%</span>’ //只允许<span class="number">10.0</span>.<span class="number">0.0</span>/<span class="number">23</span>的网段</span><br><span class="line">word@’<span class="number">10.0</span>.%’    //只允许<span class="number">10.0</span>.<span class="number">0.0</span>/<span class="number">16</span>的网段</span><br></pre></td></tr></table></figure></li><li><p>创建用户，并添加密码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">create</span> <span class="selector-tag">user</span> <span class="selector-tag">word</span>@&#x27;localhost&#x27; identified by <span class="string">&#x27;123&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询用户</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> <span class="selector-tag">user</span>,<span class="selector-tag">host</span> <span class="selector-tag">from</span> <span class="selector-tag">mysql</span><span class="selector-class">.user</span>; </span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">-----------</span>+</span><br><span class="line">| user          | host      |</span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">-----------</span>+</span><br><span class="line">| workd        | localhost |</span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">-----------</span>+</span><br></pre></td></tr></table></figure></li><li><p>修改密码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">alter</span> <span class="selector-tag">user</span> <span class="selector-tag">word</span>@&#x27;localhost&#x27; identified by <span class="string">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>删除用户</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">drop</span> <span class="selector-tag">user</span> <span class="selector-tag">word</span>@&#x27;localhost&#x27;;</span><br></pre></td></tr></table></figure></li></ol></blockquote><h3 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h3><blockquote><ol><li><p>ALL（all代表有下面所有的权限）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">SELECT</span>,<span class="selector-tag">INSERT</span>, <span class="selector-tag">UPDATE</span>, <span class="selector-tag">DELETE</span>, <span class="selector-tag">CREATE</span>, <span class="selector-tag">DROP</span>, <span class="selector-tag">RELOAD</span>, <span class="selector-tag">SHUTDOWN</span>, <span class="selector-tag">PROCESS</span>, <span class="selector-tag">FILE</span>, <span class="selector-tag">REFERENCES</span>, <span class="selector-tag">INDEX</span>, <span class="selector-tag">ALTER</span>, <span class="selector-tag">SHOW</span> <span class="selector-tag">DATABASES</span>, <span class="selector-tag">SUPER</span>, <span class="selector-tag">CREATE</span> <span class="selector-tag">TEMPORARY</span> <span class="selector-tag">TABLES</span>, <span class="selector-tag">LOCK</span> <span class="selector-tag">TABLES</span>, <span class="selector-tag">EXECUTE</span>, <span class="selector-tag">REPLICATION</span> <span class="selector-tag">SLAVE</span>, <span class="selector-tag">REPLICATION</span> <span class="selector-tag">CLIENT</span>, <span class="selector-tag">CREATE</span> <span class="selector-tag">VIEW</span>, <span class="selector-tag">SHOW</span> <span class="selector-tag">VIEW</span>, <span class="selector-tag">CREATE</span> <span class="selector-tag">ROUTINE</span>, <span class="selector-tag">ALTER</span> <span class="selector-tag">ROUTINE</span>, <span class="selector-tag">CREATE</span> <span class="selector-tag">USER</span>, <span class="selector-tag">EVENT</span>, <span class="selector-tag">TRIGGER</span>, <span class="selector-tag">CREATE</span> <span class="selector-tag">TABLESPACE</span></span><br></pre></td></tr></table></figure></li><li><p>with grant option（授权可以管理其他用户）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//<span class="selector-tag">grant</span> 权限  <span class="selector-tag">on</span> 作用目标 <span class="selector-tag">to</span> 用户 <span class="selector-tag">identified</span> <span class="selector-tag">by</span> 密码 <span class="selector-tag">with</span> <span class="selector-tag">grant</span> <span class="selector-tag">option</span>;</span><br><span class="line"><span class="selector-tag">mysql</span>&gt; <span class="selector-tag">grant</span> <span class="selector-tag">all</span> <span class="selector-tag">on</span> *.* <span class="selector-tag">to</span> <span class="selector-tag">word</span>@&#x27;localhost&#x27; identified by <span class="string">&#x27;123&#x27;</span> with grant option;</span><br><span class="line"></span><br><span class="line">//设置<span class="selector-tag">word</span>用户可以使用<span class="selector-tag">mysql</span>库中的所有表，可以操作的选项有<span class="selector-tag">select</span>,<span class="selector-tag">insert</span>,<span class="selector-tag">delete</span>,<span class="selector-tag">create</span></span><br><span class="line"><span class="selector-tag">mysql</span>&gt; <span class="selector-tag">grant</span> <span class="selector-tag">select</span>,<span class="selector-tag">insert</span>,<span class="selector-tag">delete</span>,<span class="selector-tag">create</span> <span class="selector-tag">on</span> <span class="selector-tag">word</span>.* <span class="selector-tag">to</span> <span class="selector-tag">word</span>@&#x27;10.0.0.%&#x27; identified by <span class="string">&#x27;123&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>上述作用目标</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*.*            //表示所有目录文件(即所有的库)</span><br><span class="line"><span class="selector-tag">word</span>.*         //<span class="selector-tag">word</span>目录下的全部文件</span><br><span class="line"><span class="selector-tag">word</span>.*<span class="selector-tag">t1</span>       //<span class="selector-tag">word</span>目录的<span class="selector-tag">t1</span>表</span><br></pre></td></tr></table></figure></li><li><p>查看权限</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">show</span> <span class="selector-tag">grants</span> <span class="selector-tag">for</span> <span class="selector-tag">word</span>@&#x27;10.0.0.%&#x27;;</span><br><span class="line">+<span class="selector-tag">-----------------------------------------------------------------------</span>+</span><br><span class="line">| Grants for word@10.0.0.%                                              |</span><br><span class="line">+<span class="selector-tag">-----------------------------------------------------------------------</span>+</span><br><span class="line">| GRANT USAGE ON *.* TO &#x27;word&#x27;@&#x27;10.0.0.%&#x27;                               |</span><br><span class="line">| GRANT SELECT, INSERT, DELETE, CREATE ON `word`.* TO &#x27;word&#x27;@&#x27;10.0.0.%&#x27; |</span><br></pre></td></tr></table></figure></li><li><p>回收权限</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">revoke</span> <span class="selector-tag">select</span>,<span class="selector-tag">delete</span> <span class="selector-tag">on</span> <span class="selector-tag">word</span>.* <span class="selector-tag">from</span> <span class="selector-tag">word</span>@&#x27;10.0.0.%&#x27;;</span><br><span class="line"></span><br><span class="line">&gt; <span class="selector-tag">show</span> <span class="selector-tag">grants</span> <span class="selector-tag">for</span> <span class="selector-tag">word</span>@&#x27;10.0.0.%&#x27;;</span><br><span class="line">+<span class="selector-tag">-------------------------------------------------------</span>+</span><br><span class="line">| Grants for word@10.0.0.%                              |</span><br><span class="line">+<span class="selector-tag">-------------------------------------------------------</span>+</span><br><span class="line">| GRANT USAGE ON *.* TO &#x27;word&#x27;@&#x27;10.0.0.%&#x27;               |</span><br><span class="line">| GRANT INSERT, CREATE ON `word`.* TO &#x27;word&#x27;@&#x27;10.0.0.%&#x27; |</span><br><span class="line">+<span class="selector-tag">-------------------------------------------------------</span>+</span><br></pre></td></tr></table></figure></li></ol></blockquote><h2 id="DML（数据操作语句）"><a href="#DML（数据操作语句）" class="headerlink" title="DML（数据操作语句）"></a>DML（数据操作语句）</h2><h3 id="insert插入"><a href="#insert插入" class="headerlink" title="insert插入"></a>insert插入</h3><p><strong>insert语法</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">INSERT</span> <span class="selector-attr">[LOW_PRIORITY | DELAYED | HIGH_PRIORITY]</span> <span class="selector-attr">[IGNORE]</span></span><br><span class="line">    <span class="selector-attr">[INTO]</span> <span class="selector-tag">tbl_name</span></span><br><span class="line">    <span class="selector-attr">[PARTITION (partition_name [, partition_name]</span> ...)]</span><br><span class="line">    <span class="selector-attr">[(col_name [, col_name]</span> ...)]</span><br><span class="line">    &#123;VALUES | VALUE&#125; (value_list) [, (value_list)] ...</span><br><span class="line">    <span class="selector-attr">[ON DUPLICATE KEY UPDATE assignment_list]</span></span><br></pre></td></tr></table></figure><p><strong>偷懒插入</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; INSERT stu VALUES(1,&#x27;zs&#x27;,&#x27;18&#x27;,&#x27;m&#x27;,NOW()) </span><br><span class="line">&gt; <span class="selector-tag">SELECT</span> * <span class="selector-tag">FROM</span> <span class="selector-tag">stu</span>; </span><br></pre></td></tr></table></figure><p><strong>标准插入</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; INSERT INTO stu(id,sname,age,sex,intime) VALUES(2,&#x27;ls&#x27;,&#x27;19&#x27;,&#x27;m&#x27;,NOW()); </span><br></pre></td></tr></table></figure><p><strong>针对性的录入数据</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; INSERT INTO stu(sname,age,sex) VALUES(&#x27;li&#x27;,&#x27;20&#x27;,&#x27;n&#x27;); </span><br></pre></td></tr></table></figure><p><strong>一次性录入</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; INSERT INTO stu(sname,age,sex)  VALUES(&#x27;aa&#x27;,11,&#x27;n&#x27;),(&#x27;bb&#x27;,12,&#x27;m&#x27;),(&#x27;cc&#x27;,13,&#x27;f&#x27;)</span><br></pre></td></tr></table></figure><h3 id="update更新"><a href="#update更新" class="headerlink" title="update更新"></a>update更新</h3><p><strong>update语法</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">UPDATE</span> <span class="selector-attr">[LOW_PRIORITY]</span> <span class="selector-attr">[IGNORE]</span> <span class="selector-tag">table_reference</span></span><br><span class="line">    <span class="selector-tag">SET</span> <span class="selector-tag">assignment_list</span></span><br><span class="line">    <span class="selector-attr">[WHERE where_condition]</span></span><br><span class="line">    <span class="selector-attr">[ORDER BY ...]</span></span><br><span class="line">    <span class="selector-attr">[LIMIT row_count]</span></span><br></pre></td></tr></table></figure><p><strong>指定序列更新</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; update test set k1=&#x27;bb&#x27; where id=3;</span><br></pre></td></tr></table></figure><p><strong>更新多个字段</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; update test set k1=&#x27;cc&#x27;,k2=&#x27;中国&#x27; </span><br></pre></td></tr></table></figure><h2 id="DQL（数据查询语句）"><a href="#DQL（数据查询语句）" class="headerlink" title="DQL（数据查询语句）"></a>DQL（数据查询语句）</h2><h3 id="查询语言有两种"><a href="#查询语言有两种" class="headerlink" title="查询语言有两种"></a>查询语言有两种</h3><blockquote><ul><li>show</li><li>select</li></ul></blockquote><h3 id="show常用语句总结"><a href="#show常用语句总结" class="headerlink" title="show常用语句总结"></a>show常用语句总结</h3><table><thead><tr><th>语句</th><th>说明</th></tr></thead><tbody><tr><td>show databases;</td><td>查看数据库名</td></tr><tr><td>show tables;</td><td>查看表名</td></tr><tr><td>show create database xx;</td><td>查看建库语句</td></tr><tr><td>show create table xx;</td><td>查看建表语句</td></tr><tr><td>show processlist;</td><td>查看所有用户连接情况</td></tr><tr><td>show charset;</td><td>查看字符集</td></tr><tr><td>show collation;</td><td>查看所有支持的校队规则</td></tr><tr><td>show grants for xx;</td><td>查看用户的权限信息</td></tr><tr><td>show variables like ‘%xx%’</td><td>模糊匹配查看参数</td></tr><tr><td>show engines;</td><td>查看所有支持的存储引擎</td></tr><tr><td>show index from xxx;</td><td>查看表的索引信息</td></tr><tr><td>show engine innodb status\G</td><td>查看innoDB引擎详细状态信息</td></tr><tr><td>show binary logs;</td><td>查看二进制日志的列表信息</td></tr><tr><td>show binary events in;</td><td>查看二进制日志的事件信息</td></tr><tr><td>show master status;</td><td>查看mysql主库的状态</td></tr><tr><td>show slave status\G</td><td>查看从库状态信息</td></tr><tr><td>show relaylog events in；</td><td>查看数据库整体状态</td></tr></tbody></table><h3 id="select单独使用情况"><a href="#select单独使用情况" class="headerlink" title="select单独使用情况"></a>select单独使用情况</h3><table><thead><tr><th>语句</th><th>说明</th></tr></thead><tbody><tr><td>select @@basedir;</td><td>查询软件路径</td></tr><tr><td>select @@port;</td><td>查询端口</td></tr><tr><td>select @@server_id;</td><td>查询服务id</td></tr><tr><td>select @@innodb_flush_log_at_trx_commit;</td><td>查询是否将事务日志从innodb log buffer写入到redo log中</td></tr><tr><td>select @@sync_binlog;</td><td>查询是否将二进制日志刷新到磁盘上，0不刷新，1刷新</td></tr><tr><td>select database();</td><td>查看当前库</td></tr><tr><td>select now();</td><td>查询时间</td></tr></tbody></table><h3 id="select通用语法（单表）"><a href="#select通用语法（单表）" class="headerlink" title="select通用语法（单表）"></a>select通用语法（单表）</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">select</span>  列   </span><br><span class="line"><span class="selector-tag">from</span>  表   </span><br><span class="line"><span class="selector-tag">where</span> 条件  </span><br><span class="line"><span class="selector-tag">group</span> <span class="selector-tag">by</span>  条件 </span><br><span class="line"><span class="selector-tag">having</span>   条件 </span><br><span class="line"><span class="selector-tag">order</span> <span class="selector-tag">by</span> 条件</span><br><span class="line"><span class="selector-tag">limit</span>     </span><br></pre></td></tr></table></figure><h2 id="world表练习"><a href="#world表练习" class="headerlink" title="world表练习"></a>world表练习</h2><blockquote><p>链接：<a href="https://pan.baidu.com/s/1PTTUhh1MjYz_hpiQeYr8MA">https://pan.baidu.com/s/1PTTUhh1MjYz_hpiQeYr8MA</a><br>提取码：9f5v </p></blockquote><p><strong>world数据库中的表</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">use</span> <span class="selector-tag">world</span>         //使用该数据库</span><br><span class="line">&gt; <span class="selector-tag">show</span> <span class="selector-tag">tabales</span>;     //查看该数据库的表</span><br><span class="line">+<span class="selector-tag">-----------------</span>+</span><br><span class="line">| Tables_in_world |</span><br><span class="line">+<span class="selector-tag">-----------------</span>+</span><br><span class="line">| city            |      //城市表</span><br><span class="line">| country         |      //国家表</span><br><span class="line">| countrylanguage |      //国家的语言</span><br><span class="line">+<span class="selector-tag">-----------------</span>+</span><br></pre></td></tr></table></figure><p><strong>查看city的结构</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">desc</span> <span class="selector-tag">city</span>；    </span><br><span class="line">+<span class="selector-tag">-------------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">-----</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">----------------</span>+</span><br><span class="line">| Field       | Type     | Null | Key | Default | Extra          |</span><br><span class="line">+<span class="selector-tag">-------------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">-----</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">----------------</span>+</span><br><span class="line">| ID          | int(11)  | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| Name        | char(35) | NO   |     |         |                |</span><br><span class="line">| CountryCode | char(3)  | NO   | MUL |         |                |</span><br><span class="line">| District    | char(20) | NO   |     |         |                |</span><br><span class="line">| Population  | int(11)  | NO   |     | 0       |                |</span><br><span class="line">+<span class="selector-tag">-------------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">-----</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">----------------</span>+</span><br></pre></td></tr></table></figure><p><strong>查看city的一些内容</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> * <span class="selector-tag">from</span> <span class="selector-tag">city</span> <span class="selector-tag">limit</span> 5;</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">----------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------------</span>+</span><br><span class="line">| ID | Name           | CountryCode | District      | Population |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">----------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------------</span>+</span><br><span class="line">|  1 | Kabul          | AFG         | Kabol         |    1780000 |</span><br><span class="line">|  2 | Qandahar       | AFG         | Qandahar      |     237500 |</span><br><span class="line">|  3 | Herat          | AFG         | Herat         |     186800 |</span><br><span class="line">|  4 | Mazar-e-Sharif | AFG         | Balkh         |     127800 |</span><br><span class="line">|  5 | Amsterdam      | NLD         | Noord-Holland |     731200 |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">----------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">------------</span>+</span><br></pre></td></tr></table></figure><h3 id="select配置from子句使用"><a href="#select配置from子句使用" class="headerlink" title="select配置from子句使用"></a>select配置from子句使用</h3><p><strong>select 列，列，列 from 表</strong></p><blockquote><ul><li><p>查询表中所有的内容</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">use</span> <span class="selector-tag">world</span>;</span><br><span class="line">&gt; <span class="selector-tag">select</span> <span class="selector-tag">id</span>,<span class="selector-tag">name</span>,<span class="selector-tag">countrycode</span>,<span class="selector-tag">district</span>,<span class="selector-tag">population</span> <span class="selector-tag">from</span> <span class="selector-tag">city</span>;</span><br><span class="line"></span><br><span class="line">//或</span><br><span class="line">&gt; <span class="selector-tag">select</span> * <span class="selector-tag">from</span> <span class="selector-tag">city</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询表中name和population的值</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">select</span> <span class="selector-tag">name</span>,<span class="selector-tag">population</span> <span class="selector-tag">from</span> <span class="selector-tag">city</span>;</span><br></pre></td></tr></table></figure></li></ul></blockquote><h3 id="select-配置-where子句使用"><a href="#select-配置-where子句使用" class="headerlink" title="select 配置 where子句使用"></a>select 配置 where子句使用</h3><p><strong>select 列，列，列 from 表 where 过滤条件（where相当于一个Linux中的grep,就是进行过滤的）</strong></p><blockquote><ol><li><p>where等值条件查询</p><ul><li><p>查询中国所有的城市名和人口数</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; select name,population from  city where countrycode=&#x27;CHN&#x27;;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>where配合比较判断查询（&lt; &gt; &gt;= &lt;=)</p><ul><li><p>世界上小于100人的城市名和人口数</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span>  <span class="selector-tag">name</span>,<span class="selector-tag">population</span> <span class="selector-tag">from</span> <span class="selector-tag">city</span> <span class="selector-tag">where</span> <span class="selector-tag">populaction</span>&lt;100;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>where配合逻辑连接符（and  or）</p><ul><li><p>查询中国人口数量大于1000w的城市名和人口</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; select name,population from city where countrycode=&#x27;CHN&#x27; and population&gt;10000000;</span><br></pre></td></tr></table></figure></li><li><p>查询中国或美国的城市名和人口数</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; select name,population from city where countrycode=&#x27;CHN&#x27; or countrycode=&#x27;USA&#x27;;</span><br></pre></td></tr></table></figure></li><li><p>查询人口数量在500w到600w之间的城市名和人口数</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> <span class="selector-tag">name</span>,<span class="selector-tag">population</span> <span class="selector-tag">from</span> <span class="selector-tag">city</span> <span class="selector-tag">where</span> <span class="selector-tag">population</span>&gt;5000000 <span class="selector-tag">and</span> <span class="selector-tag">population</span>&lt;6000000;</span><br><span class="line"></span><br><span class="line">//或者</span><br><span class="line">&gt; <span class="selector-tag">select</span> <span class="selector-tag">name</span>,<span class="selector-tag">population</span> <span class="selector-tag">from</span> <span class="selector-tag">city</span> <span class="selector-tag">where</span> <span class="selector-tag">population</span> <span class="selector-tag">between</span> 5000000 <span class="selector-tag">and</span> 6000000;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>where配合like子句模糊查询</p><ul><li><p>查询一下countrycode中带有CH开头城市信息</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; select * from city where countrycode like &#x27;CH%&#x27;;</span><br></pre></td></tr></table></figure><p> #注意：不要出现类似于%CH%前后都有百分号的语句，因为不走索引，性能极差</p></li></ul></li><li><p>where配合in语句</p><ul><li><p>查询中国或美国的城市名和人口信息</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; select name,population from city where countrycode=&#x27;CHN&#x27; and countrycode=&#x27;USA&#x27;</span><br><span class="line"></span><br><span class="line">//或者</span><br><span class="line">&gt; select name,population from city where countrycode in (&#x27;CHN&#x27;,&#x27;USA&#x27;);</span><br></pre></td></tr></table></figure></li></ul></li></ol></blockquote><h3 id="GROUP-BY"><a href="#GROUP-BY" class="headerlink" title="GROUP BY"></a>GROUP BY</h3><p>下述的个别语句需要关闭SQL_MODE规范的一个模式（ONLY_FULL_GROUP_BY），在5.7版本之后功能依赖检测功能，所以启动这个模式MySQL将拒绝选择列表，解决办法去是去掉这个模式</p><p>在配置下添加该配置，然后重启mysql</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/my.cnf</span><br><span class="line">sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br></pre></td></tr></table></figure><p><strong>groub by 将某列中有共同条件的数据行，分成一组，然后在进行聚合函数操作</strong></p><blockquote><ul><li><p>统计每个国家，城市的个数</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> <span class="selector-tag">countrycode</span>,<span class="selector-tag">count</span>(<span class="selector-tag">id</span>) <span class="selector-tag">from</span> <span class="selector-tag">city</span> <span class="selector-tag">group</span> <span class="selector-tag">by</span> <span class="selector-tag">countrycode</span>;</span><br></pre></td></tr></table></figure></li><li><p>统计每个国家的总人口数</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> <span class="selector-tag">countrycode</span>,<span class="selector-tag">sum</span>(<span class="selector-tag">population</span>)  <span class="selector-tag">from</span> <span class="selector-tag">city</span> <span class="selector-tag">group</span> <span class="selector-tag">by</span> <span class="selector-tag">population</span>;</span><br></pre></td></tr></table></figure></li><li><p>统计每个国家省的个数</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">countrycode</span>,<span class="selector-tag">COUNT</span>(<span class="selector-tag">DISTINCT</span> <span class="selector-tag">district</span>)<span class="selector-tag">FROM</span> <span class="selector-tag">city</span> <span class="selector-tag">GROUP</span> <span class="selector-tag">BY</span> <span class="selector-tag">countrycode</span>;</span><br></pre></td></tr></table></figure></li><li><p>统计中国每个省的总人口数</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; select district,sum(population) from city where countrycode=&#x27;CHN&#x27; group by district;</span><br></pre></td></tr></table></figure></li><li><p>统计中国每个省城市的个数</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; select  district,count(name) from city where countrycode=&#x27;CHN&#x27; group by district;</span><br></pre></td></tr></table></figure></li><li><p>统计中国每个省城市的名字列表（group_concat())</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; select  district,group_concat(name) from city where countrycode=&#x27;CHN&#x27; group by district;</span><br></pre></td></tr></table></figure></li><li><p>小扩展=显示的结果为guangdong：shenzheng,guangzhou,qingyuan……</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; SELECT CONCAT(district,&quot;：&quot;, GROUP_CONCAT(NAME)) FROM city WHERE countrycode=&#x27;CHN&#x27; GROUP BY district;</span><br></pre></td></tr></table></figure></li></ul></blockquote><h3 id="select-配置-having子句"><a href="#select-配置-having子句" class="headerlink" title="select 配置 having子句"></a>select 配置 having子句</h3><blockquote><ul><li><p>统计所有国家的总人口数量，将总人口大于1亿的过滤出来</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> <span class="selector-tag">countrycode</span>,<span class="selector-tag">sum</span>(<span class="selector-tag">population</span>) <span class="selector-tag">from</span> <span class="selector-tag">city</span> <span class="selector-tag">group</span> <span class="selector-tag">by</span> <span class="selector-tag">countrycode</span> <span class="selector-tag">having</span> <span class="selector-tag">sum</span>(<span class="selector-tag">population</span>)&gt;100000000; </span><br></pre></td></tr></table></figure><p>#注意：如果group by子句，后面要接having，因为要遵循DQL语句的顺序</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> <span class="selector-tag">--</span>&gt; <span class="selector-tag">form</span> <span class="selector-tag">--</span>&gt; <span class="selector-tag">where</span> <span class="selector-tag">--</span>&gt; <span class="selector-tag">group</span> <span class="selector-tag">by</span> <span class="selector-tag">--</span>&gt; <span class="selector-tag">having</span> <span class="selector-tag">--</span>&gt; <span class="selector-tag">order</span> <span class="selector-tag">--</span>&gt; <span class="selector-tag">limit</span></span><br></pre></td></tr></table></figure><p>#如果使用where子句就会报错，因为where子句要使用在group by子句的前面，逻辑不能打乱，所以只能使用having进行过滤</p></li></ul></blockquote><h3 id="select-配合-order-by子句"><a href="#select-配合-order-by子句" class="headerlink" title="select 配合 order by子句"></a>select 配合 order by子句</h3><blockquote><ul><li><p>统计所有国家的总人口数量，将总人口数大于5000w的过滤出来，并且按照从大到小顺序排列</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">countrycode</span>,<span class="selector-tag">SUM</span>(<span class="selector-tag">population</span>) <span class="selector-tag">FROM</span> <span class="selector-tag">city</span> <span class="selector-tag">GROUP</span> <span class="selector-tag">BY</span> <span class="selector-tag">countrycode</span> <span class="selector-tag">HAVING</span> <span class="selector-tag">SUM</span>(<span class="selector-tag">population</span>)&gt;50000000 <span class="selector-tag">ORDER</span> <span class="selector-tag">BY</span> <span class="selector-tag">SUM</span>(<span class="selector-tag">population</span>) <span class="selector-tag">DESC</span>;</span><br></pre></td></tr></table></figure></li></ul></blockquote><h3 id="select-配置-limit子句"><a href="#select-配置-limit子句" class="headerlink" title="select 配置 limit子句"></a>select 配置 limit子句</h3><blockquote><ul><li><p>统计所有国家的总人口数量,将总人口数大于5000w的过滤出来,并且按照从大到小顺序排列,只显示前三名</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">countrycode</span>,<span class="selector-tag">SUM</span>(<span class="selector-tag">population</span>) <span class="selector-tag">FROM</span> <span class="selector-tag">city</span> <span class="selector-tag">GROUP</span> <span class="selector-tag">BY</span> <span class="selector-tag">countrycode</span> <span class="selector-tag">HAVING</span> <span class="selector-tag">SUM</span>(<span class="selector-tag">population</span>)&gt;50000000 <span class="selector-tag">ORDER</span> <span class="selector-tag">BY</span> <span class="selector-tag">SUM</span>(<span class="selector-tag">population</span>) <span class="selector-tag">DESC</span> <span class="selector-tag">limit</span> 3; //<span class="selector-tag">offset</span> 0 跳过0行，显示3行</span><br></pre></td></tr></table></figure></li><li><p>统计所有国家的总人口数量,将总人口数大于5000w的过滤出来,并且按照从大到小顺序排列,只显示后三名</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">countrycode</span>,<span class="selector-tag">SUM</span>(<span class="selector-tag">population</span>) <span class="selector-tag">FROM</span> <span class="selector-tag">city</span> <span class="selector-tag">GROUP</span> <span class="selector-tag">BY</span> <span class="selector-tag">countrycode</span> <span class="selector-tag">HAVING</span> <span class="selector-tag">SUM</span>(<span class="selector-tag">population</span>)&gt;50000000 <span class="selector-tag">ORDER</span> <span class="selector-tag">BY</span> <span class="selector-tag">SUM</span>(<span class="selector-tag">population</span>) <span class="selector-tag">DESC</span> <span class="selector-tag">limit</span> 3 <span class="selector-tag">offset</span> 3; //<span class="selector-tag">offset</span> 3 跳过三行，显示3行</span><br></pre></td></tr></table></figure><p>//limit m,n：跳过m行，显示一共n行<br>//limit y offset x：跳过x行，显示一共y行</p></li></ul></blockquote><h3 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h3><blockquote><ul><li><p>统计中国每个省的总人口数量，只打印总人口数小于100</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; select district,sum(population) from city where countrycode=&#x27;CHN&#x27; group by district having sum(population)&lt;1000000;</span><br></pre></td></tr></table></figure></li><li><p>查看中国所有的城市，并按人口数进行排行（从大到小）</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; select name,population from city where countrycode=&#x27;CHN&#x27; order by population desc;</span><br></pre></td></tr></table></figure></li><li><p>统计中国各个省的总人口数量，按照总人口从大到小排序</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; SELECT district,SUM(population) FROM city WHERE countrycode=&#x27;CHN&#x27; GROUP BY district order by sum(population) DESC;</span><br></pre></td></tr></table></figure></li><li><p>统计中国，每个省的总人口，找出总人口大于500W的，并按总人口从大到小排序，只显示前三名</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; select district,sum(population) from city where countrycode=&#x27;CHN&#x27; group by district having sum(population)&gt;5000000 order by sum(population) desc limit 3;</span><br></pre></td></tr></table></figure></li></ul></blockquote><h3 id="select小结"><a href="#select小结" class="headerlink" title="select小结"></a>select小结</h3><p><strong>select是查看表中的那个列，select等所有子句执行完成之后，才会执行显示，from实现查询那张表</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">select</span> <span class="selector-tag">district</span>,<span class="selector-tag">count</span>(<span class="selector-tag">name</span>) <span class="selector-tag">from</span> <span class="selector-tag">city</span>;</span><br></pre></td></tr></table></figure><p><strong>where == 过滤器</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">where countrycode=&#x27;CHN&#x27;</span><br></pre></td></tr></table></figure><p><strong>将某列中有共同条件的数据行，分成一组，然后在进行聚合函数操作</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">group</span> <span class="selector-tag">by</span> <span class="selector-tag">district</span> </span><br></pre></td></tr></table></figure><p><strong>过滤</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">having</span>  <span class="selector-tag">count</span>(<span class="selector-tag">name</span>) &gt;10</span><br></pre></td></tr></table></figure><p><strong>排序，不加desc等于从小到达</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">order</span> <span class="selector-tag">by</span>  <span class="selector-tag">count</span>(<span class="selector-tag">name</span>) <span class="selector-tag">desc</span> </span><br></pre></td></tr></table></figure><p><strong>限制查看的行数据</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">limit</span> 3;</span><br></pre></td></tr></table></figure><h3 id="union和union-all"><a href="#union和union-all" class="headerlink" title="union和union all"></a>union和union all</h3><p><strong>作用：多个结果集合并查询的功能</strong></p><blockquote><ul><li><p>查询中国或者美国的城市信息</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; select * from city where countrycode=&#x27;CHN&#x27; and countrycode=&#x27;USA&#x27;;</span><br><span class="line"></span><br><span class="line">//或</span><br><span class="line">&gt; select * from city where countrycode in (&#x27;CHN&#x27;,&#x27;USA&#x27;);</span><br></pre></td></tr></table></figure></li><li><p>改写为</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; select * from city where countrycode = &#x27;CHN&#x27;</span><br><span class="line"><span class="selector-tag">union</span> <span class="selector-tag">all</span></span><br><span class="line">select * from city where countrycode=&#x27;USA&#x27;;</span><br></pre></td></tr></table></figure><p>#union all查询由于上面第一种查询，只是会有更多的字符</p></li><li><p>union和union all的区别   </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">union</span>：//会去重复操作</span><br><span class="line"><span class="selector-tag">union</span> <span class="selector-tag">all</span>：//不会去重复</span><br></pre></td></tr></table></figure></li></ul></blockquote><h3 id="多表连接查询-内连接"><a href="#多表连接查询-内连接" class="headerlink" title="多表连接查询(内连接)"></a>多表连接查询(内连接)</h3><p><strong>作用：单表数据不能满足查询需求时</strong></p><blockquote><ul><li><p>查询世界上小于100人的城市，所在的国家名，国土面积，城市名，人口数</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//最核心的是，找到多张表之前的关联条件列</span><br><span class="line">//列数显示，必须是：表名，列</span><br><span class="line">//所有涉及到的查询列，都放在<span class="selector-tag">select</span>后</span><br><span class="line">//将所有的过滤，分组，排序等条件按顺序写在<span class="selector-tag">on</span>的后面</span><br></pre></td></tr></table></figure><p>#注意：对多表连接汇总，驱动表选择数据行少的表，后续所有表的关联列尽量是主键或唯一键。</p></li><li><p>驱动表就是from后面的第一张表</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> <span class="selector-tag">countrycode</span>,<span class="selector-tag">district</span>,<span class="selector-tag">population</span> <span class="selector-tag">from</span> <span class="selector-tag">city</span> <span class="selector-tag">where</span> <span class="selector-tag">population</span>&gt;100; //<span class="selector-tag">city</span>表能够查询的</span><br><span class="line"><span class="selector-tag">select</span> <span class="selector-tag">name</span>,<span class="selector-tag">SurfaceArea</span> <span class="selector-tag">from</span> <span class="selector-tag">country</span>                                   //<span class="selector-tag">country</span>表能够查询的</span><br><span class="line">city.countrycode = country.code         //城市表中的countrycode参数和国家表中的code是一个样的，所有可以关联在一起</span><br></pre></td></tr></table></figure></li><li><p>关联</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; select country.name,country.SurfaceArea,city.name,city.population from city join country on city.countrycode=country.code where city.population&lt;1000000;</span><br></pre></td></tr></table></figure></li><li><p>关联，去重国家名称以及国土面积，将城市和人口连接为一列</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">country</span><span class="selector-class">.name</span>,<span class="selector-tag">country</span><span class="selector-class">.SurfaceArea</span>,</span><br><span class="line"><span class="selector-tag">CONCAT</span>(<span class="selector-tag">city</span><span class="selector-class">.district</span>,&quot;：&quot;,<span class="selector-tag">city</span><span class="selector-class">.population</span>)</span><br><span class="line"><span class="selector-tag">FROM</span> <span class="selector-tag">country</span> </span><br><span class="line">JOIN city ON country.code=city.countrycode </span><br><span class="line"><span class="selector-tag">WHERE</span> <span class="selector-tag">city</span><span class="selector-class">.population</span>&lt;1000000</span><br><span class="line"><span class="selector-tag">GROUP</span> <span class="selector-tag">BY</span> <span class="selector-tag">country</span><span class="selector-class">.name</span>,<span class="selector-tag">country</span><span class="selector-class">.SurfaceArea</span>;</span><br></pre></td></tr></table></figure></li></ul></blockquote><h2 id="多表连接练习"><a href="#多表连接练习" class="headerlink" title="多表连接练习"></a>多表连接练习</h2><h3 id="创建表准备"><a href="#创建表准备" class="headerlink" title="创建表准备"></a>创建表准备</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">CREATE</span> <span class="selector-tag">DATABASE</span> <span class="selector-tag">school</span> <span class="selector-tag">CHARSET</span> <span class="selector-tag">utf8mb4</span>;</span><br><span class="line"><span class="selector-tag">USE</span> <span class="selector-tag">school</span>;</span><br><span class="line"></span><br><span class="line"># 创建学生表</span><br><span class="line"> <span class="selector-tag">CREATE</span> <span class="selector-tag">TABLE</span> <span class="selector-tag">student</span>(</span><br><span class="line"> snum INT NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT &#x27;学号&#x27;,</span><br><span class="line"> sname VARCHAR(20) NOT NULL COMMENT &#x27;姓名&#x27;,</span><br><span class="line"> sage TINYINT UNSIGNED  NOT NULL COMMENT &#x27;年龄&#x27;,</span><br><span class="line"> ssex  ENUM(&#x27;f&#x27;,&#x27;m&#x27;) NOT NULL DEFAULT &#x27;m&#x27; COMMENT &#x27;性别&#x27;</span><br><span class="line"> )ENGINE=INNODB CHARSET=utf8;</span><br><span class="line"></span><br><span class="line"># 创建课程表</span><br><span class="line"> <span class="selector-tag">CREATE</span> <span class="selector-tag">TABLE</span> <span class="selector-tag">course</span>(</span><br><span class="line"> cnum INT NOT NULL PRIMARY KEY COMMENT &#x27;课程编号&#x27;,</span><br><span class="line"> cname VARCHAR(20) NOT NULL COMMENT &#x27;课程名字&#x27;,</span><br><span class="line"> tnum INT NOT NULL COMMENT &#x27;教师编号&#x27;</span><br><span class="line"> )ENGINE=INNODB CHARSET=utf8;</span><br><span class="line"></span><br><span class="line"># 创建成绩表</span><br><span class="line"> <span class="selector-tag">CREATE</span> <span class="selector-tag">TABLE</span> <span class="selector-tag">sc</span>(</span><br><span class="line"> snum INT NOT NULL COMMENT &#x27;学号&#x27;,</span><br><span class="line"> cnum INT NOT NULL COMMENT &#x27;课程编号&#x27;,</span><br><span class="line"> score TINYINT UNSIGNED  NOT NULL COMMENT &#x27;成绩&#x27;</span><br><span class="line"> )ENGINE=INNODB CHARSET=utf8;</span><br><span class="line"> </span><br><span class="line"># 创建教师表</span><br><span class="line"> <span class="selector-tag">CREATE</span> <span class="selector-tag">TABLE</span> <span class="selector-tag">teacher</span>(</span><br><span class="line"> tnum INT NOT NULL PRIMARY KEY COMMENT &#x27;教师编号&#x27;,</span><br><span class="line"> tname VARCHAR(20) NOT NULL COMMENT &#x27;教师名字&#x27;</span><br><span class="line"> )ENGINE=INNODB CHARSET=utf8;</span><br><span class="line"> </span><br><span class="line"># 插入数据到<span class="selector-tag">student</span></span><br><span class="line">INSERT INTO student(snum,sname,sage,ssex) VALUES(1,&#x27;wuwei&#x27;,18,&#x27;m&#x27;);</span><br><span class="line">INSERT INTO student(snum,sname,sage,ssex) VALUES(2,&#x27;liu&#x27;,18,&#x27;m&#x27;),(3,&#x27;fu&#x27;,18,&#x27;m&#x27;),(4,&#x27;jie&#x27;,18,&#x27;m&#x27;);</span><br><span class="line">INSERT INTO student(sname,sage,ssex) VALUES(&#x27;jia&#x27;,18,&#x27;m&#x27;),(&#x27;hong&#x27;,18,&#x27;m&#x27;),(&#x27;zeng&#x27;,18,&#x27;m&#x27;);</span><br><span class="line"></span><br><span class="line"># 插入数据到<span class="selector-tag">teacher</span> </span><br><span class="line">INSERT INTO teacher(tnum,tname) VALUES(101,&#x27;bin&#x27;),(102,&#x27;hesw&#x27;),(103,&#x27;ren&#x27;),(104,&#x27;gou&#x27;);</span><br><span class="line"></span><br><span class="line"># 插入数据到<span class="selector-tag">course</span></span><br><span class="line">INSERT INTO course(cnum,cname,tnum) VALUES(11,&#x27;linux&#x27;,101),(12,&#x27;python&#x27;,102),(13,&#x27;mysql&#x27;,103),(14,&#x27;php&#x27;,104),(15,&#x27;go&#x27;,105);</span><br><span class="line"> </span><br><span class="line"># 插入数据到<span class="selector-tag">sc</span></span><br><span class="line"><span class="selector-tag">INSERT</span> <span class="selector-tag">INTO</span> <span class="selector-tag">sc</span>(<span class="selector-tag">snum</span>,<span class="selector-tag">cnum</span>,<span class="selector-tag">score</span>) <span class="selector-tag">VALUES</span></span><br><span class="line">(1,11,80),</span><br><span class="line">(1,12,59),</span><br><span class="line">(2,12,90),</span><br><span class="line">(2,13,100),</span><br><span class="line">(3,11,99),</span><br><span class="line">(3,13,40),</span><br><span class="line">(4,11,79),</span><br><span class="line">(4,12,61),</span><br><span class="line">(4,15,99),</span><br><span class="line">(5,13,40),</span><br><span class="line">(6,15,89),</span><br><span class="line">(6,13,77),</span><br><span class="line">(7,14,67),</span><br><span class="line">(7,13,82),</span><br><span class="line">(8,11,70),</span><br><span class="line">(9,14,80),</span><br><span class="line">(10,13,96);</span><br></pre></td></tr></table></figure><p><strong>查看创建的表</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> * <span class="selector-tag">FROM</span> <span class="selector-tag">student</span>;</span><br><span class="line">&gt; <span class="selector-tag">SELECT</span> * <span class="selector-tag">FROM</span> <span class="selector-tag">teacher</span>;</span><br><span class="line">&gt; <span class="selector-tag">SELECT</span> * <span class="selector-tag">FROM</span> <span class="selector-tag">course</span>;</span><br><span class="line">&gt; <span class="selector-tag">SELECT</span> * <span class="selector-tag">FROM</span> <span class="selector-tag">sc</span>;</span><br></pre></td></tr></table></figure><h3 id="表的关系"><a href="#表的关系" class="headerlink" title="表的关系"></a>表的关系</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210207193144349.png"></p><h3 id="多表连接示例"><a href="#多表连接示例" class="headerlink" title="多表连接示例"></a>多表连接示例</h3><p><strong>1. 统计wuwei，学习了几门课</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">student</span><span class="selector-class">.sname</span>,<span class="selector-tag">COUNT</span>(<span class="selector-tag">sc</span><span class="selector-class">.cnum</span>) <span class="selector-tag">FROM</span> <span class="selector-tag">student</span></span><br><span class="line"><span class="selector-tag">JOIN</span></span><br><span class="line">sc ON student.snum=sc.snum</span><br><span class="line">WHERE student.sname=&#x27;wuwei&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210207194225120.png"></p><p><strong>2. 查询wuwei，学习的课程名称有哪些?</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">student</span><span class="selector-class">.sname</span>,<span class="selector-tag">GROUP_CONCAT</span>(<span class="selector-tag">course</span><span class="selector-class">.cname</span>) </span><br><span class="line"><span class="selector-tag">FROM</span> <span class="selector-tag">student</span></span><br><span class="line">JOIN sc ON student.snum=sc.snum </span><br><span class="line">JOIN course ON sc.cnum=course.cnum</span><br><span class="line">WHERE student.sname=&#x27;wuwei&#x27;</span><br><span class="line"><span class="selector-tag">GROUP</span> <span class="selector-tag">BY</span> <span class="selector-tag">student</span><span class="selector-class">.sname</span>;</span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210207194200567.png"></p><p><strong>3. 查询bin老师教的学生名和个数</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">teacher</span><span class="selector-class">.tname</span>,<span class="selector-tag">GROUP_CONCAT</span>(<span class="selector-tag">student</span><span class="selector-class">.sname</span>),<span class="selector-tag">COUNT</span>(<span class="selector-tag">student</span><span class="selector-class">.sname</span>)</span><br><span class="line"><span class="selector-tag">FROM</span> <span class="selector-tag">teacher</span></span><br><span class="line">JOIN course ON teacher.tnum=course.tnum </span><br><span class="line">JOIN sc ON course.cnum=sc.cnum</span><br><span class="line">JOIN student ON student.snum=sc.snum</span><br><span class="line">WHERE student.sname=&#x27;bin&#x27;</span><br><span class="line"><span class="selector-tag">GROUP</span> <span class="selector-tag">BY</span> <span class="selector-tag">teacher</span><span class="selector-class">.tname</span>;</span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210207195212313.png"></p><p><strong>4. 查询bin所教课程的平均分数</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">teacher</span><span class="selector-class">.tname</span>,<span class="selector-tag">course</span><span class="selector-class">.cname</span>,<span class="selector-tag">AVG</span>(<span class="selector-tag">sc</span><span class="selector-class">.score</span>)</span><br><span class="line"><span class="selector-tag">FROM</span> <span class="selector-tag">teacher</span> </span><br><span class="line">JOIN course ON teacher.tnum=course.tnum</span><br><span class="line">JOIN sc ON course.cnum=sc.cnum</span><br><span class="line">WHERE teacher.tname=&#x27;bin&#x27;</span><br><span class="line"><span class="selector-tag">GROUP</span> <span class="selector-tag">BY</span> <span class="selector-tag">teacher</span><span class="selector-class">.tname</span>,<span class="selector-tag">course</span><span class="selector-class">.cname</span>;</span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210207195547750.png"></p><p><strong>5. 每位老师所教课程的平均分，并按平均分排序</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">teacher</span><span class="selector-class">.tname</span>,<span class="selector-tag">course</span><span class="selector-class">.cname</span>,<span class="selector-tag">AVG</span>(<span class="selector-tag">sc</span><span class="selector-class">.score</span>)</span><br><span class="line"><span class="selector-tag">FROM</span> <span class="selector-tag">teacher</span> </span><br><span class="line">JOIN course ON teacher.tnum=course.tnum</span><br><span class="line">JOIN sc ON course.cnum=sc.cnum</span><br><span class="line"><span class="selector-tag">GROUP</span> <span class="selector-tag">BY</span> <span class="selector-tag">teacher</span><span class="selector-class">.tname</span>,<span class="selector-tag">course</span><span class="selector-class">.cname</span></span><br><span class="line"><span class="selector-tag">ORDER</span> <span class="selector-tag">BY</span> <span class="selector-tag">AVG</span>(<span class="selector-tag">sc</span><span class="selector-class">.score</span>)</span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210207195755445.png"></p><p><strong>6. 查看ren所教的不及格的学生姓名</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">teacher</span><span class="selector-class">.tname</span>,<span class="selector-tag">student</span><span class="selector-class">.sname</span>,<span class="selector-tag">sc</span><span class="selector-class">.score</span></span><br><span class="line"><span class="selector-tag">FROM</span> <span class="selector-tag">teacher</span></span><br><span class="line">JOIN course ON course.tnum=teacher.tnum</span><br><span class="line">JOIN sc ON sc.cnum=course.cnum</span><br><span class="line">JOIN student ON student.snum=sc.snum</span><br><span class="line">WHERE teacher.tname=&#x27;ren&#x27; AND sc.score&lt;60;</span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210208142518208.png"></p><p><strong>7. 查询所有老师教学生不及格的信息</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">teacher</span><span class="selector-class">.tname</span>,<span class="selector-tag">GROUP_CONCAT</span>(<span class="selector-tag">CONCAT</span>(<span class="selector-tag">student</span><span class="selector-class">.sname</span>,&quot;：&quot;,<span class="selector-tag">sc</span><span class="selector-class">.score</span>))</span><br><span class="line"><span class="selector-tag">FROM</span> <span class="selector-tag">teacher</span></span><br><span class="line">JOIN course ON course.tnum=teacher.tnum</span><br><span class="line">JOIN sc ON sc.cnum=course.cnum</span><br><span class="line">JOIN student ON student.snum=sc.snum</span><br><span class="line"><span class="selector-tag">WHERE</span> <span class="selector-tag">sc</span><span class="selector-class">.score</span>&lt;60</span><br><span class="line"><span class="selector-tag">GROUP</span> <span class="selector-tag">BY</span> <span class="selector-tag">teacher</span><span class="selector-class">.tnum</span>;</span><br></pre></td></tr></table></figure><h3 id="别名应用"><a href="#别名应用" class="headerlink" title="别名应用"></a>别名应用</h3><p><strong>表别名</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">t</span><span class="selector-class">.tname</span>,<span class="selector-tag">GROUP_CONCAT</span>(<span class="selector-tag">CONCAT</span>(<span class="selector-tag">st</span><span class="selector-class">.sname</span>,&quot;：&quot;,<span class="selector-tag">sc</span><span class="selector-class">.score</span>))</span><br><span class="line"><span class="selector-tag">FROM</span> <span class="selector-tag">teacher</span> <span class="selector-tag">as</span> <span class="selector-tag">t</span></span><br><span class="line">JOIN course as c ON t.tnum=c.tnum</span><br><span class="line">JOIN sc ON c.cnum=sc.cnum</span><br><span class="line">JOIN student as st ON sc.snum=st.snum</span><br><span class="line"><span class="selector-tag">WHERE</span> <span class="selector-tag">sc</span><span class="selector-class">.score</span>&lt;60</span><br><span class="line"><span class="selector-tag">GROUP</span> <span class="selector-tag">BY</span> <span class="selector-tag">t</span><span class="selector-class">.tnum</span>;</span><br></pre></td></tr></table></figure><p><strong>列表名</strong></p><blockquote><p>列别名可以被用在having和order by调用</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">teacher</span><span class="selector-class">.tname</span> <span class="selector-tag">AS</span> 老师名 ,<span class="selector-tag">GROUP_CONCAT</span>(<span class="selector-tag">CONCAT</span>(<span class="selector-tag">student</span><span class="selector-class">.sname</span>,&quot;：&quot;,<span class="selector-tag">sc</span><span class="selector-class">.score</span>)) <span class="selector-tag">AS</span> 不及格学生成绩</span><br><span class="line"><span class="selector-tag">FROM</span> <span class="selector-tag">teacher</span> </span><br><span class="line">JOIN course ON teacher.tnum=course.tnum</span><br><span class="line">JOIN sc ON course.cnum=sc.cnum</span><br><span class="line">JOIN student ON sc.snum=student.snum</span><br><span class="line"><span class="selector-tag">WHERE</span> <span class="selector-tag">sc</span><span class="selector-class">.score</span>&lt;60</span><br><span class="line"><span class="selector-tag">GROUP</span> <span class="selector-tag">BY</span> <span class="selector-tag">teacher</span><span class="selector-class">.tnum</span>;</span><br></pre></td></tr></table></figure><h2 id="关于5-7版本的group-by中的sql-mode使用"><a href="#关于5-7版本的group-by中的sql-mode使用" class="headerlink" title="关于5.7版本的group by中的sql_mode使用 "></a>关于5.7版本的group by中的sql_mode使用 </h2><p>上述在group by章节有说，这里再做补充示例</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p><strong>不加group by的正常查询用户表</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> <span class="selector-tag">user</span>,<span class="selector-tag">host</span> <span class="selector-tag">from</span> <span class="selector-tag">mysql</span><span class="selector-class">.user</span>;</span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">-----------</span>+</span><br><span class="line">| user          | host      |</span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">-----------</span>+</span><br><span class="line">| root          | 10.0.0.%  |</span><br><span class="line">| word          | 10.0.0.%  |</span><br><span class="line">| mysql.session | localhost |</span><br><span class="line">| mysql.sys     | localhost |</span><br><span class="line">| root          | localhost |</span><br><span class="line">| word          | localhost |</span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">-----------</span>+</span><br></pre></td></tr></table></figure><p><strong>使用group by的错误查询</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">mysql</span>&gt; <span class="selector-tag">select</span> <span class="selector-tag">user</span>,<span class="selector-tag">host</span> <span class="selector-tag">from</span> <span class="selector-tag">mysql</span><span class="selector-class">.user</span> <span class="selector-tag">group</span> <span class="selector-tag">by</span> <span class="selector-tag">user</span>; </span><br><span class="line">//ERROR 1055 (42000): Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column &#x27;mysql.user.Host&#x27; which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by</span><br></pre></td></tr></table></figure><blockquote><p>在带有group by子句的select中，select后的条件列（非主键列），要么是group by后的列，要么需要在函数中包裹</p><p>如这条件语句：select后面user在后面使用group by，而host使用了函数包裹（group_concat)，这样才可以正确使用</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">select</span> <span class="selector-tag">user</span>,<span class="selector-tag">group_concat</span>(<span class="selector-tag">host</span>) <span class="selector-tag">from</span> <span class="selector-tag">mysql</span><span class="selector-class">.user</span> <span class="selector-tag">group</span> <span class="selector-tag">by</span> <span class="selector-tag">user</span>;</span><br></pre></td></tr></table></figure></blockquote><h3 id="关闭sql-mode使用"><a href="#关闭sql-mode使用" class="headerlink" title="关闭sql_mode使用"></a>关闭sql_mode使用</h3><p><strong>查询出sql_mode使用的参数，去掉前面的ONLY_FULL_GROUP_BY</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> @<span class="keyword">@sql_mode</span>;</span><br><span class="line"><span class="selector-tag">ONLY_FULL_GROUP_BY</span>,<span class="selector-tag">STRICT_TRANS_TABLES</span>,<span class="selector-tag">NO_ZERO_IN_DATE</span>,<span class="selector-tag">NO_ZERO_DATE</span>,<span class="selector-tag">ERROR_FOR_DIVISION_BY_ZERO</span>,<span class="selector-tag">NO_AUTO_CREATE_USER</span>,<span class="selector-tag">NO_ENGINE_SUBSTITUTION</span></span><br></pre></td></tr></table></figure><p><strong>编辑配置my.cnf文件，然后重启</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/my.cnf</span><br><span class="line">sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br></pre></td></tr></table></figure><p><strong>在重新测试</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> <span class="selector-tag">user</span>,<span class="selector-tag">host</span> <span class="selector-tag">from</span> <span class="selector-tag">mysql</span><span class="selector-class">.user</span> <span class="selector-tag">group</span> <span class="selector-tag">by</span> <span class="selector-tag">user</span>;</span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">-----------</span>+</span><br><span class="line">| user          | host      |</span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">-----------</span>+</span><br><span class="line">| mysql.session | localhost |</span><br><span class="line">| mysql.sys     | localhost |</span><br><span class="line">| root          | 10.0.0.%  |</span><br><span class="line">| word          | 10.0.0.%  |</span><br></pre></td></tr></table></figure><h2 id="group-concat-使用"><a href="#group-concat-使用" class="headerlink" title="group_concat()使用"></a>group_concat()使用</h2><p>列转行聚合函数</p><blockquote><p>使用该子句，可以对比上述的没有使用了group by和没有使用group by的比较。</p><p>很明显，没有加group_concat参数会少了localhost地址，只有10.0.0.%范围的地址</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> <span class="selector-tag">user</span>,<span class="selector-tag">group_concat</span>(<span class="selector-tag">host</span>) <span class="selector-tag">from</span> <span class="selector-tag">mysql</span><span class="selector-class">.user</span> <span class="selector-tag">group</span> <span class="selector-tag">by</span> <span class="selector-tag">user</span>;</span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">--------------------</span>+</span><br><span class="line">| user          | group_concat(host) |</span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">--------------------</span>+</span><br><span class="line">| mysql.session | localhost          |</span><br><span class="line">| mysql.sys     | localhost          |</span><br><span class="line">| root          | localhost,10.0.0.% |</span><br><span class="line">| word          | localhost,10.0.0.% |</span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">--------------------</span>+</span><br></pre></td></tr></table></figure><h2 id="concat-使用"><a href="#concat-使用" class="headerlink" title="concat()使用"></a>concat()使用</h2><p>对列值进行拼接</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> <span class="selector-tag">concat</span>(<span class="selector-tag">user</span>,&quot;<span class="selector-pseudo">::&quot;</span>,<span class="selector-tag">host</span>) <span class="selector-tag">from</span> <span class="selector-tag">mysql</span><span class="selector-class">.user</span> <span class="selector-tag">group</span> <span class="selector-tag">by</span> <span class="selector-tag">user</span>;</span><br><span class="line">+<span class="selector-tag">--------------------------</span>+</span><br><span class="line">| concat(user,&quot;::&quot;,host)   |</span><br><span class="line">+<span class="selector-tag">--------------------------</span>+</span><br><span class="line">| mysql.session::localhost |</span><br><span class="line">| mysql.sys::localhost     |</span><br><span class="line">| root::10.0.0.%           |</span><br><span class="line">| word::10.0.0.%           |</span><br><span class="line">+<span class="selector-tag">-------------------------</span>+</span><br></pre></td></tr></table></figure><h2 id="distinst-使用"><a href="#distinst-使用" class="headerlink" title="distinst()使用"></a>distinst()使用</h2><p>单独去重复</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> <span class="selector-tag">distinct</span>(<span class="selector-tag">user</span>)<span class="selector-tag">from</span> <span class="selector-tag">mysql</span><span class="selector-class">.user</span>;</span><br><span class="line">+<span class="selector-tag">---------------</span>+</span><br><span class="line">| user          |</span><br><span class="line">+<span class="selector-tag">---------------</span>+</span><br><span class="line">| root          |</span><br><span class="line">| word          |</span><br><span class="line">| mysql.session |</span><br><span class="line">| mysql.sys     |</span><br><span class="line">+<span class="selector-tag">---------------</span>+</span><br></pre></td></tr></table></figure><h2 id="视图的使用"><a href="#视图的使用" class="headerlink" title="视图的使用"></a>视图的使用</h2><p><strong>创建一个视图，并设置视图别名</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">CREATE</span> <span class="selector-tag">VIEW</span> <span class="selector-tag">vv</span> <span class="selector-tag">AS</span></span><br><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">teacher</span><span class="selector-class">.tname</span>,<span class="selector-tag">course</span><span class="selector-class">.cname</span>,<span class="selector-tag">AVG</span>(<span class="selector-tag">sc</span><span class="selector-class">.score</span>)</span><br><span class="line"><span class="selector-tag">FROM</span> <span class="selector-tag">teacher</span> </span><br><span class="line">JOIN course ON teacher.tnum=course.tnum</span><br><span class="line">JOIN sc ON course.cnum=sc.cnum</span><br><span class="line"><span class="selector-tag">GROUP</span> <span class="selector-tag">BY</span> <span class="selector-tag">teacher</span><span class="selector-class">.tname</span>,<span class="selector-tag">course</span><span class="selector-class">.cname</span></span><br><span class="line"><span class="selector-tag">ORDER</span> <span class="selector-tag">BY</span> <span class="selector-tag">AVG</span>(<span class="selector-tag">sc</span><span class="selector-class">.score</span>)</span><br></pre></td></tr></table></figure><p><strong>查询vv视图</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> * <span class="selector-tag">from</span> <span class="selector-tag">vv</span>;</span><br><span class="line">+<span class="selector-tag">-------</span>+<span class="selector-tag">--------</span>+<span class="selector-tag">---------------</span>+</span><br><span class="line">| tname | cname  | AVG(sc.score) |</span><br><span class="line">+<span class="selector-tag">-------</span>+<span class="selector-tag">--------</span>+<span class="selector-tag">---------------</span>+</span><br><span class="line">| hesw  | python |       70.0000 |</span><br><span class="line">| ren   | mysql  |       72.5000 |</span><br><span class="line">| gou   | php    |       73.5000 |</span><br><span class="line">| bin   | linux  |       82.0000 |</span><br><span class="line">+<span class="selector-tag">-------</span>+<span class="selector-tag">--------</span>+<span class="selector-tag">---------------</span>+</span><br></pre></td></tr></table></figure><h2 id="information-schema元数据使用"><a href="#information-schema元数据使用" class="headerlink" title="information_schema元数据使用"></a>information_schema元数据使用</h2><p>元数据是存储在“基表”中，通过专用的DDL语句，DCL语句进行修改，information_schema中保存了大量元数据查询的视图，而show命令是封装好的功能，提供元数据查询基础功能</p><h3 id="information-schema的基础应用"><a href="#information-schema的基础应用" class="headerlink" title="information_schema的基础应用"></a>information_schema的基础应用</h3><p><strong>tables视图的引用</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">use</span> <span class="selector-tag">information_schema</span>;</span><br></pre></td></tr></table></figure><p><strong>查看重要的参数</strong></p><blockquote><p>TABLE_SCHEMA    //表所载的库名<br>TABLE_NAME      //表名<br>ENGINE            //存储引擎<br>TABLE_ROWS      //数据行<br>AVG_ROW_LENGTH    //平均行长度<br>INDEX_LENGTH    //索引长度</p></blockquote><h3 id="information-schema应用示例"><a href="#information-schema应用示例" class="headerlink" title="information_schema应用示例"></a>information_schema应用示例</h3><p><strong>显示所有的库和表的信息</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> <span class="selector-tag">table_schema</span>,<span class="selector-tag">table_name</span> <span class="selector-tag">from</span> <span class="selector-tag">information_schema</span><span class="selector-class">.tables</span>;</span><br></pre></td></tr></table></figure><p><strong>以以下模式 显示所有的库和表的信息</strong></p><blockquote><p>#world     city,country,countrylanguage</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">table_schema</span>,<span class="selector-tag">GROUP_CONCAT</span>(<span class="selector-tag">table_name</span>) <span class="selector-tag">FROM</span> <span class="selector-tag">information_schema</span><span class="selector-class">.tables</span></span><br><span class="line"><span class="selector-tag">GROUP</span> <span class="selector-tag">BY</span> <span class="selector-tag">table_schema</span></span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210208153948255.png"></p><p><strong>查询所有innodb引擎的表</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">table_schema</span>,<span class="selector-tag">table_name</span>,<span class="selector-tag">ENGINE</span> <span class="selector-tag">FROM</span> <span class="selector-tag">information_schema</span><span class="selector-class">.tables</span></span><br><span class="line">WHERE ENGINE=&#x27;innodb&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210208154120059.png"></p><p><strong>统计world下的city表占用空间大小</strong></p><blockquote><p>#表的数据量=平均行长度 * 行数 + 索引长度 AVG_ROW_LENGTH * TABLE_ROWS + INDEX_LENGTH</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">table_schema</span>,<span class="selector-tag">table_name</span>,(<span class="selector-tag">AVG_ROW_LENGTH</span>*<span class="selector-tag">TABLE_ROWS</span>+<span class="selector-tag">INDEX_LENGTH</span>)/1024  //除以1024代表是<span class="selector-tag">kb</span>单位，否则以字节为单位</span><br><span class="line"><span class="selector-tag">FROM</span> <span class="selector-tag">information_schema</span><span class="selector-class">.tables</span> </span><br><span class="line">WHERE table_schema=&#x27;world&#x27; AND table_name=&#x27;city&#x27;;</span><br></pre></td></tr></table></figure><p><strong>统计world库数据量总大小</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">table_schema</span>,<span class="selector-tag">SUM</span>(<span class="selector-tag">AVG_ROW_LENGTH</span>*<span class="selector-tag">TABLE_ROWS</span>+<span class="selector-tag">INDEX_LENGTH</span>)</span><br><span class="line"><span class="selector-tag">FROM</span> <span class="selector-tag">information_schema</span><span class="selector-class">.tables</span></span><br><span class="line">WHERE table_schema=&#x27;world&#x27;;</span><br></pre></td></tr></table></figure><p><strong>统计所有库的总大小</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">SUM</span>(<span class="selector-tag">AVG_ROW_LENGTH</span>*<span class="selector-tag">TABLE_ROWS</span>+<span class="selector-tag">INDEX_LENGTH</span>) <span class="selector-tag">FROM</span> <span class="selector-tag">information_schema</span><span class="selector-class">.tables</span></span><br></pre></td></tr></table></figure><p><strong>统计每个库的数据量大小，并按数据量从大到小排序</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">table_schema</span>,<span class="selector-tag">SUM</span>(<span class="selector-tag">AVG_ROW_LENGTH</span>*<span class="selector-tag">TABLE_ROWS</span>+<span class="selector-tag">INDEX_LENGTH</span>) <span class="selector-tag">AS</span> <span class="selector-tag">total</span></span><br><span class="line"><span class="selector-tag">FROM</span> <span class="selector-tag">information_schema</span><span class="selector-class">.tables</span></span><br><span class="line"><span class="selector-tag">GROUP</span> <span class="selector-tag">BY</span> <span class="selector-tag">table_schema</span></span><br><span class="line"><span class="selector-tag">ORDER</span> <span class="selector-tag">BY</span> <span class="selector-tag">total</span> <span class="selector-tag">DESC</span>;</span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210208154816961.png"></p><h3 id="information-schema配置concat-函数拼接语句或命令"><a href="#information-schema配置concat-函数拼接语句或命令" class="headerlink" title="information_schema配置concat()函数拼接语句或命令"></a>information_schema配置concat()函数拼接语句或命令</h3><p><strong>模仿以下语句,进行数据库的分库分表备份</strong></p><blockquote><p>#mysqldump -uroot -p123 world city &gt;/bak/world_city.sql</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">CONCAT</span>(&quot;<span class="selector-tag">mysqldump</span> <span class="selector-tag">-uroot</span> <span class="selector-tag">-p123</span> &quot;,<span class="selector-tag">table_schema</span>,&quot; &quot;,<span class="selector-tag">table_name</span>,&quot; &gt;/<span class="selector-tag">bak</span>/&quot;,<span class="selector-tag">table_schema</span>,&quot;_&quot;,<span class="selector-tag">table_name</span>,&quot;<span class="selector-class">.sql</span>&quot;) </span><br><span class="line"><span class="selector-tag">FROM</span> <span class="selector-tag">information_schema</span><span class="selector-class">.tables</span>;</span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210208155249328.png"></p><p><strong>模仿以下语句，进行批量生成对world库下所有表进行操作</strong></p><blockquote><p>#ALTER TABLE world.city DISCARD TABLESPACE;</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">SELECT</span> <span class="selector-tag">CONCAT</span>(&quot;<span class="selector-tag">ALTER</span> <span class="selector-tag">TABLE</span> &quot;,<span class="selector-tag">table_schema</span>,&quot;.&quot;,<span class="selector-tag">table_name</span>,&quot; <span class="selector-tag">DISCARD</span> <span class="selector-tag">TABLESPACE</span>;&quot;)</span><br><span class="line">FROM information_schema.tables WHERE table_schema=&#x27;world&#x27;;</span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210208155613881.png"></p><h2 id="sys-Schema元数据使用"><a href="#sys-Schema元数据使用" class="headerlink" title="sys Schema元数据使用"></a>sys Schema元数据使用</h2><p>MySQL4.1版本提供了information_schema数据字典，一些基础元数据可以通过SQL查询得到</p><p>MySQL5.5版本提供了performance_schema性能引擎，可以通过参数performance_schema来开启/关闭</p><p>MySQL5.7版本提供了sys Schema，这个新特性包含了一系列的存储过程、自定义函数以及视图来帮助我们快速地了解系统的元数据信息</p><h3 id="sys-Schema的意义"><a href="#sys-Schema的意义" class="headerlink" title="sys Schema的意义"></a>sys Schema的意义</h3><p>原本需要结合information_schema，performance_schema查询的方式，现在有了sysd的视图方式，把一些优化和诊断信息通过视图的方式汇总起来，更加直观</p><p>如果能好好掌握这些视图的内涵，可以随时查看表的关联关系，对于理解MySQL的运行原理和问题的分析会有很大的帮助</p><h3 id="sys下的对象分布情况"><a href="#sys下的对象分布情况" class="headerlink" title="sys下的对象分布情况"></a>sys下的对象分布情况</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">use</span> <span class="selector-tag">sys</span></span><br><span class="line">&gt; select * from schema_object_overview where db=&#x27;sys&#x27;;</span><br><span class="line">+<span class="selector-tag">-----</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">-------</span>+</span><br><span class="line">| db  | object_type   | count |</span><br><span class="line">+<span class="selector-tag">-----</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">-------</span>+</span><br><span class="line">| sys | FUNCTION      |    22 |</span><br><span class="line">| sys | PROCEDURE     |    26 |</span><br><span class="line">| sys | VIEW          |   100 |</span><br><span class="line">| sys | BASE TABLE    |     1 |</span><br><span class="line">| sys | INDEX (BTREE) |     1 |</span><br><span class="line">| sys | TRIGGER       |     2 |</span><br><span class="line">+<span class="selector-tag">-----</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">-------</span>+</span><br></pre></td></tr></table></figure><h3 id="sys下唯一表"><a href="#sys下唯一表" class="headerlink" title="sys下唯一表"></a>sys下唯一表</h3><p>sys_config是sys的唯一表，使用命令show tables显示出来这个表，其他的都是视图</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> * <span class="selector-tag">from</span> <span class="selector-tag">sys_config</span>;</span><br><span class="line">+<span class="selector-tag">--------------------------------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">---------------------</span>+<span class="selector-tag">--------</span>+</span><br><span class="line">| variable                             | value | set_time            | set_by |</span><br><span class="line">+<span class="selector-tag">--------------------------------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">---------------------</span>+<span class="selector-tag">--------</span>+</span><br><span class="line">| diagnostics.allow_i_s_tables         | OFF   | 2021-02-06 03:56:55 | NULL   |</span><br><span class="line">| diagnostics.include_raw              | OFF   | 2021-02-06 03:56:55 | NULL   |</span><br><span class="line">| ps_thread_trx_info.max_length        | 65535 | 2021-02-06 03:56:55 | NULL   |</span><br><span class="line">| statement_performance_analyzer.limit | 100   | 2021-02-06 03:56:55 | NULL   |</span><br><span class="line">| statement_performance_analyzer.view  | NULL  | 2021-02-06 03:56:55 | NULL   |</span><br><span class="line">| statement_truncate_len               | 64    | 2021-02-06 03:56:55 | NULL   |</span><br><span class="line">+<span class="selector-tag">--------------------------------------</span>+<span class="selector-tag">-------</span>+<span class="selector-tag">---------------------</span>+<span class="selector-tag">--------</span>+</span><br></pre></td></tr></table></figure><p>可以看到里面是一个基础参数的设置 ， 比如一些范围、基数的设置。而且值得一提的是这个表里设置了几个触发器，对这个表的 DML 操作都会触发里面的数据级联变化，继续查看，还是使用 show tables 来看，会看到整个sys下的表／视图有101个，其中 x$开头的对象有 48 个，简单换算一下，里面 的表／视图有53 个</p><h3 id="sys下的session视图"><a href="#sys下的session视图" class="headerlink" title="sys下的session视图"></a>sys下的session视图</h3><p>抽取一个视图来看，输出和show processlist命令如出一辙  </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> * <span class="selector-tag">from</span> <span class="selector-tag">session</span>\<span class="selector-tag">G</span>;</span><br><span class="line">*************************** 1. <span class="selector-tag">row</span> ***************************</span><br><span class="line">                <span class="selector-tag">thd_id</span>: 44</span><br><span class="line">               <span class="selector-tag">conn_id</span>: 19</span><br><span class="line">                  <span class="selector-tag">user</span>: <span class="selector-tag">root</span><span class="keyword">@localhost</span></span><br><span class="line">                    <span class="attribute">db:</span> sys</span><br><span class="line">               <span class="attribute">command:</span> Query</span><br><span class="line">                 <span class="attribute">state:</span> Sending data</span><br><span class="line">                  <span class="attribute">time:</span> <span class="number">0</span></span><br><span class="line">。。。。。。。。。。。。。。。略。。。。。。。。。。。。。。。</span><br></pre></td></tr></table></figure><p>对比一下show processlist;</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">show</span> <span class="selector-tag">processlist</span>;</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">------</span>+<span class="selector-tag">-----------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">------------------</span>+</span><br><span class="line">| Id | User | Host      | db   | Command | Time | State    | Info             |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">------</span>+<span class="selector-tag">-----------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">------------------</span>+</span><br><span class="line">| 19 | root | localhost | sys  | Query   |    0 | starting | show processlist |</span><br><span class="line">+<span class="selector-tag">----</span>+<span class="selector-tag">------</span>+<span class="selector-tag">-----------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">------</span>+<span class="selector-tag">----------</span>+<span class="selector-tag">------------------</span>+</span><br></pre></td></tr></table></figure><p>在MySQL中使用的是单进程多线程，所以会有独立的$session和$processlist两个视图，两者通过内存地址的方式映射，所有在专用服务器模式下，就可以通过进程找到会话，或者通过会话找到进程，对于排查性能问题大有裨益</p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210220212626134.png"></p><h3 id="sys下的数据字典分类"><a href="#sys下的数据字典分类" class="headerlink" title="sys下的数据字典分类"></a>sys下的数据字典分类</h3><blockquote><p>host_summary ： 这个是服务器层面的，比如里面的视图 host_s ummary_by_file io;<br>user summary ： 这个是用户层级的，比如里面的视图 user_summary_by_fi le一io;<br>InnoDB ：这个是 InnoDB 层面的，比如 innodb_buffer_stats_by_schema;<br>memoy：关于内存的使用情况，比如视图 memory_by_host_by_current_bytes;<br>schema：关于 schema 级别的统计信息，比如 schema_table_lock_waits;<br>session ： 关于会话级别的，这个视图少一些，只有 session 和 session_ssl_status 两个；<br>statement ： 关于语句级别的，比如 statements_with_errors_or_warnings;<br>wait：关于等待的，这个还是处于起步阶段，等待模型有待完善 ，目前只有基于io/file, lock/table 和 io/table 这三个方面，提升空间还很大</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> * <span class="selector-tag">from</span> <span class="selector-tag">wait_classes_global_by_avg_latency</span>\<span class="selector-tag">g</span>;</span><br><span class="line">+<span class="selector-tag">-----------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------------</span>+</span><br><span class="line">| event_class     | total   | total_latency | min_latency | avg_latency | max_latency |</span><br><span class="line">+<span class="selector-tag">-----------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------------</span>+</span><br><span class="line">| wait/io/file    |   10385 | 12.88 s       | 0 ps        | 1.24 ms     | 398.63 ms   |</span><br><span class="line">| wait/io/table   | 8284387 | 30.45 s       | 11.46 us    | 3.68 us     | 10.91 s     |</span><br><span class="line">| wait/lock/table |      86 | 115.48 us     | 62.56 ns    | 1.34 us     | 74.79 us    |</span><br><span class="line">+<span class="selector-tag">-----------------</span>+<span class="selector-tag">---------</span>+<span class="selector-tag">---------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-------------</span>+</span><br></pre></td></tr></table></figure></blockquote><h3 id="sys下的InnoDB视图"><a href="#sys下的InnoDB视图" class="headerlink" title="sys下的InnoDB视图"></a>sys下的InnoDB视图</h3><p>InnoDB部分关于锁的视图innodb_lock_waits；</p><p><strong>通过下述命令照成锁机制</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//第一个会话</span><br><span class="line">&gt; <span class="selector-tag">start</span> <span class="selector-tag">transaction</span>;</span><br><span class="line">&gt; update test set id=100;</span><br><span class="line"></span><br><span class="line">//第二个会话</span><br><span class="line">&gt; update test set id=102;</span><br></pre></td></tr></table></figure><p>如果没有sys，只能通过这两条信息查询，当然也可以使用show engine innodb status来得到一些信息，但是上述情况查询到了却不知怎么处理，是否要杀掉，很难决策</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> * <span class="selector-tag">from</span> <span class="selector-tag">information_schema</span><span class="selector-class">.innodb_locks</span>\<span class="selector-tag">G</span>;</span><br><span class="line">&gt; <span class="selector-tag">select</span> * <span class="selector-tag">from</span> <span class="selector-tag">information_schema</span><span class="selector-class">.innodb_trx</span>\<span class="selector-tag">G</span>;</span><br></pre></td></tr></table></figure><p>这时可以看看sys的innodb_lock_waits的结果，这里的过程语句都给准备好，有三行信息阻塞，可以使用kill的方式终止会话，kill语句都准备好了，显示如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> * <span class="selector-tag">from</span> <span class="selector-tag">sys</span><span class="selector-class">.innodb_lock_waits</span>\<span class="selector-tag">G</span>;</span><br><span class="line">*************************** 1. <span class="selector-tag">row</span> ***************************</span><br><span class="line">                <span class="selector-tag">wait_started</span>: 2021<span class="selector-tag">-02-18</span> 21<span class="selector-pseudo">:36</span><span class="selector-pseudo">:21</span></span><br><span class="line">                    <span class="selector-tag">wait_age</span>: 00<span class="selector-pseudo">:00</span><span class="selector-pseudo">:07</span></span><br><span class="line">               <span class="selector-tag">wait_age_secs</span>: 7</span><br><span class="line">                <span class="selector-tag">locked_table</span>: `<span class="selector-tag">test</span>`.`<span class="selector-tag">test</span>`</span><br><span class="line">                <span class="selector-tag">locked_index</span>: <span class="selector-tag">GEN_CLUST_INDEX</span></span><br><span class="line">                 <span class="selector-tag">locked_type</span>: <span class="selector-tag">RECORD</span></span><br><span class="line">              <span class="selector-tag">waiting_trx_id</span>: 4896</span><br><span class="line">         <span class="selector-tag">waiting_trx_started</span>: 2021<span class="selector-tag">-02-18</span> 21<span class="selector-pseudo">:28</span><span class="selector-pseudo">:46</span></span><br><span class="line">             <span class="selector-tag">waiting_trx_age</span>: 00<span class="selector-pseudo">:07</span><span class="selector-pseudo">:42</span></span><br><span class="line">     <span class="selector-tag">waiting_trx_rows_locked</span>: 2</span><br><span class="line">   <span class="selector-tag">waiting_trx_rows_modified</span>: 0</span><br><span class="line">                 <span class="selector-tag">waiting_pid</span>: 19</span><br><span class="line">               waiting_query: update test set id=100</span><br><span class="line">             <span class="selector-tag">waiting_lock_id</span>: 4896<span class="selector-pseudo">:53</span><span class="selector-pseudo">:3</span><span class="selector-pseudo">:2</span></span><br><span class="line">           <span class="selector-tag">waiting_lock_mode</span>: <span class="selector-tag">X</span></span><br><span class="line">             <span class="selector-tag">blocking_trx_id</span>: 4895</span><br><span class="line">                <span class="selector-tag">blocking_pid</span>: 20</span><br><span class="line">              <span class="selector-tag">blocking_query</span>: <span class="selector-tag">NULL</span></span><br><span class="line">            <span class="selector-tag">blocking_lock_id</span>: 4895<span class="selector-pseudo">:53</span><span class="selector-pseudo">:3</span><span class="selector-pseudo">:2</span></span><br><span class="line">          <span class="selector-tag">blocking_lock_mode</span>: <span class="selector-tag">X</span></span><br><span class="line">        <span class="selector-tag">blocking_trx_started</span>: 2021<span class="selector-tag">-02-18</span> 21<span class="selector-pseudo">:24</span><span class="selector-pseudo">:41</span></span><br><span class="line">            <span class="selector-tag">blocking_trx_age</span>: 00<span class="selector-pseudo">:11</span><span class="selector-pseudo">:47</span></span><br><span class="line">    <span class="selector-tag">blocking_trx_rows_locked</span>: 3</span><br><span class="line">  <span class="selector-tag">blocking_trx_rows_modified</span>: 4</span><br><span class="line">     <span class="selector-tag">sql_kill_blocking_query</span>: <span class="selector-tag">KILL</span> <span class="selector-tag">QUERY</span> 20</span><br><span class="line"><span class="selector-tag">sql_kill_blocking_connection</span>: <span class="selector-tag">KILL</span> 20</span><br><span class="line">1 <span class="selector-tag">row</span> <span class="selector-tag">in</span> <span class="selector-tag">set</span>, 3 <span class="selector-tag">warnings</span> (0.00 <span class="selector-tag">sec</span>)</span><br></pre></td></tr></table></figure><p>当然默认事务还有有超时时间设置，可以看到确实阻塞了</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; update test set id=100;</span><br><span class="line"><span class="selector-tag">ERROR</span> 1205 (<span class="selector-tag">HY000</span>): <span class="selector-tag">Lock</span> <span class="selector-tag">wait</span> <span class="selector-tag">timeout</span> <span class="selector-tag">exceeded</span>; <span class="selector-tag">try</span> <span class="selector-tag">restarting</span> <span class="selector-tag">transaction</span></span><br></pre></td></tr></table></figure><h3 id="sys下的schema视图"><a href="#sys下的schema视图" class="headerlink" title="sys下的schema视图"></a>sys下的schema视图</h3><p><strong>schema的所有视图</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">schema_auto_increment_columns</span>      </span><br><span class="line"><span class="selector-tag">schema_index_statistics</span>            </span><br><span class="line"><span class="selector-tag">schema_object_overview</span>             </span><br><span class="line"><span class="selector-tag">schema_redundant_indexes</span>           </span><br><span class="line"><span class="selector-tag">schema_table_lock_waits</span>            </span><br><span class="line"><span class="selector-tag">schema_table_statistics</span>            </span><br><span class="line"><span class="selector-tag">schema_table_statistics_with_buffer</span></span><br><span class="line"><span class="selector-tag">schema_tables_with_full_table_scans</span></span><br><span class="line"><span class="selector-tag">schema_unused_indexes</span>              </span><br></pre></td></tr></table></figure><p>如何查看一个列值溢出的情况，比如列的自增长是否会超出数据类型的限制，使用视图schema_auto_increment_columns</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> * <span class="selector-tag">from</span> <span class="selector-tag">schema_auto_increment_columns</span>;</span><br><span class="line">+<span class="selector-tag">--------------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-----------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-----------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">----------------</span>+<span class="selector-tag">----------------------</span>+</span><br><span class="line">| table_schema | table_name | column_name | data_type | column_type | is_signed | is_unsigned | max_value  | auto_increment | auto_increment_ratio |</span><br><span class="line">+<span class="selector-tag">--------------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-----------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-----------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">----------------</span>+<span class="selector-tag">----------------------</span>+</span><br><span class="line">| school       | student    | snum        | int       | int(11)     |         1 |           0 | 2147483647 |              8 |               0.0000 |</span><br><span class="line">| world        | city       | ID          | int       | int(11)     |         1 |           0 | 2147483647 |           4080 |               0.0000 |</span><br><span class="line">+<span class="selector-tag">--------------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-----------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">-----------</span>+<span class="selector-tag">-------------</span>+<span class="selector-tag">------------</span>+<span class="selector-tag">----------------</span>+<span class="selector-tag">----------------------</span>+</span><br></pre></td></tr></table></figure><p>如果一个表的索引没有使用到，以前用PT工具也可以做分析，现在查个视图就可以搞定了，当然索引的部分，和采样率也有关系，不是一个绝对的结果，视图schema_unused_indexes可查看</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> * <span class="selector-tag">from</span> <span class="selector-tag">schema_unused_indexes</span>;</span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">-----------------</span>+<span class="selector-tag">-------------</span>+</span><br><span class="line">| object_schema | object_name     | index_name  |</span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">-----------------</span>+<span class="selector-tag">-------------</span>+</span><br><span class="line">| test          | t100w           | id_x        |</span><br><span class="line">| test          | test            | id_x        |</span><br><span class="line">| world         | city            | CountryCode |</span><br><span class="line">| world         | city            | idx_dis     |</span><br><span class="line">| world         | countrylanguage | CountryCode |</span><br><span class="line">| world         | t100            | id_k        |</span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">-----------------</span>+<span class="selector-tag">-------------</span>+</span><br></pre></td></tr></table></figure><p>如果要查看哪些表走了全表扫描以及性能情况，可以使用schema_tables_with_full_table_scans视图，如果数据量本身量很大，这个结果就会被放大</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> * <span class="selector-tag">from</span> <span class="selector-tag">schema_tables_with_full_table_scans</span>;</span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">-----------------</span>+<span class="selector-tag">-------------------</span>+<span class="selector-tag">-----------</span>+</span><br><span class="line">| object_schema | object_name     | rows_full_scanned | latency   |</span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">-----------------</span>+<span class="selector-tag">-------------------</span>+<span class="selector-tag">-----------</span>+</span><br><span class="line">| world         | t100            |           7212415 | 22.12 s   |</span><br><span class="line">| test          | t100w           |           1030345 | 7.95 s    |</span><br><span class="line">| world         | city            |             32632 | 110.45 ms |</span><br><span class="line">| world         | countrylanguage |              6888 | 19.15 ms  |</span><br><span class="line">| world         | country         |              1912 | 81.39 ms  |</span><br><span class="line">| world         | test1           |                56 | 600.68 us |</span><br><span class="line">| world         | pp              |                42 | 9.80 ms   |</span><br><span class="line">| world         | test            |                42 | 528.82 us |</span><br><span class="line">| test          | test            |                28 | 2.56 m    |</span><br><span class="line">| school        | sc              |                17 | 35.13 ms  |</span><br><span class="line">| sys           | sys_config      |                12 | 102.70 ms |</span><br><span class="line">| school        | teacher         |                 8 | 2.48 ms   |</span><br><span class="line">| school        | student         |                 7 | 18.36 us  |</span><br><span class="line">| school        | course          |                 5 | 11.64 ms  |</span><br><span class="line">| binlog        | t1              |                 2 | 786.14 us |</span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">-----------------</span>+<span class="selector-tag">-------------------</span>+<span class="selector-tag">-----------</span>+</span><br></pre></td></tr></table></figure><p>如果查看一些冗余的索引，可以使用视图schema_redundant_indexes;，删除的SQL语句会提供好给你</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> * <span class="selector-tag">from</span> <span class="selector-tag">schema_redundant_indexes</span>\<span class="selector-tag">G</span>;</span><br><span class="line">*************************** 1. <span class="selector-tag">row</span> ***************************</span><br><span class="line">              <span class="selector-tag">table_schema</span>: <span class="selector-tag">world</span></span><br><span class="line">                <span class="selector-tag">table_name</span>: <span class="selector-tag">countrylanguage</span></span><br><span class="line">      <span class="selector-tag">redundant_index_name</span>: <span class="selector-tag">CountryCode</span></span><br><span class="line">   <span class="selector-tag">redundant_index_columns</span>: <span class="selector-tag">CountryCode</span></span><br><span class="line"><span class="selector-tag">redundant_index_non_unique</span>: 1</span><br><span class="line">       <span class="selector-tag">dominant_index_name</span>: <span class="selector-tag">PRIMARY</span></span><br><span class="line">    <span class="selector-tag">dominant_index_columns</span>: <span class="selector-tag">CountryCode</span>,<span class="selector-tag">Language</span></span><br><span class="line"> <span class="selector-tag">dominant_index_non_unique</span>: 0</span><br><span class="line">            <span class="selector-tag">subpart_exists</span>: 0</span><br><span class="line">            <span class="selector-tag">sql_drop_index</span>: <span class="selector-tag">ALTER</span> <span class="selector-tag">TABLE</span> `<span class="selector-tag">world</span>`.`<span class="selector-tag">countrylanguage</span>` <span class="selector-tag">DROP</span> <span class="selector-tag">INDEX</span> `<span class="selector-tag">CountryCode</span>`</span><br></pre></td></tr></table></figure><h3 id="sys下的statement视图"><a href="#sys下的statement视图" class="headerlink" title="sys下的statement视图"></a>sys下的statement视图</h3><p><strong>statement的所有视图</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">statement_analysis</span>                         </span><br><span class="line"><span class="selector-tag">statements_with_errors_or_warnings</span>         </span><br><span class="line"><span class="selector-tag">statements_with_full_table_scans</span>           </span><br><span class="line"><span class="selector-tag">statements_with_runtimes_in_95th_percentile</span></span><br><span class="line"><span class="selector-tag">statements_with_sorting</span>                    </span><br><span class="line"><span class="selector-tag">statements_with_temp_tables</span>                </span><br></pre></td></tr></table></figure><p>这部分内容对于分析语句的性能还是很有用的，比如查看语句的排序情况，资源使用情况和延时等都会提供出来</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> * <span class="selector-tag">from</span> <span class="selector-tag">statements_with_sorting</span>\<span class="selector-tag">G</span>;</span><br><span class="line">*************************** 1. <span class="selector-tag">row</span> ***************************</span><br><span class="line">            <span class="selector-tag">query</span>: <span class="selector-tag">SELECT</span> `<span class="selector-tag">substring_index</span>` ( `<span class="selector-tag">pe</span> ... ` <span class="selector-tag">FROM</span> `<span class="selector-tag">performance_schema</span>` . </span><br><span class="line">               <span class="selector-tag">db</span>: <span class="selector-tag">sys</span></span><br><span class="line">       <span class="selector-tag">exec_count</span>: 1</span><br><span class="line">    <span class="selector-tag">total_latency</span>: 664.65 <span class="selector-tag">ms</span></span><br><span class="line"><span class="selector-tag">sort_merge_passes</span>: 0</span><br><span class="line">  <span class="selector-tag">avg_sort_merges</span>: 0</span><br><span class="line"><span class="selector-tag">sorts_using_scans</span>: 1</span><br><span class="line"> <span class="selector-tag">sort_using_range</span>: 0</span><br><span class="line">      <span class="selector-tag">rows_sorted</span>: 3</span><br><span class="line">  <span class="selector-tag">avg_rows_sorted</span>: 3</span><br><span class="line">       <span class="selector-tag">first_seen</span>: 2021<span class="selector-tag">-02-18</span> 21<span class="selector-pseudo">:04</span><span class="selector-pseudo">:07</span></span><br><span class="line">        <span class="selector-tag">last_seen</span>: 2021<span class="selector-tag">-02-18</span> 21<span class="selector-pseudo">:04</span><span class="selector-pseudo">:07</span></span><br><span class="line">           <span class="selector-tag">digest</span>: <span class="selector-tag">bd301608bc81fec1eaab29b42f839b8b</span></span><br><span class="line">*************************** 2. <span class="selector-tag">row</span> ***************************</span><br><span class="line">            <span class="selector-tag">query</span>: <span class="selector-tag">SELECT</span> `<span class="selector-tag">t</span>` . `<span class="selector-tag">THREAD_ID</span>` <span class="selector-tag">AS</span> `<span class="selector-tag">t</span> ... _<span class="selector-tag">NUMBER_OF_BYTES_USED</span>` ) <span class="selector-tag">DESC</span> </span><br><span class="line">               <span class="selector-tag">db</span>: <span class="selector-tag">sys</span></span><br><span class="line">       <span class="selector-tag">exec_count</span>: 5</span><br><span class="line">    <span class="selector-tag">total_latency</span>: 573.00 <span class="selector-tag">ms</span></span><br><span class="line"><span class="selector-tag">sort_merge_passes</span>: 0</span><br><span class="line">  <span class="selector-tag">avg_sort_merges</span>: 0</span><br><span class="line"><span class="selector-tag">sorts_using_scans</span>: 10</span><br><span class="line"> <span class="selector-tag">sort_using_range</span>: 0</span><br><span class="line">      <span class="selector-tag">rows_sorted</span>: 260</span><br><span class="line">  <span class="selector-tag">avg_rows_sorted</span>: 52</span><br><span class="line">       <span class="selector-tag">first_seen</span>: 2021<span class="selector-tag">-02-18</span> 20<span class="selector-pseudo">:55</span><span class="selector-pseudo">:55</span></span><br><span class="line">        <span class="selector-tag">last_seen</span>: 2021<span class="selector-tag">-02-18</span> 21<span class="selector-pseudo">:00</span><span class="selector-pseudo">:18</span></span><br><span class="line">           <span class="selector-tag">digest</span>: <span class="selector-tag">b3ea91361b876a2dba55fdce3df2ee23</span></span><br></pre></td></tr></table></figure><p>在这里SQL语句做了删减，不过语句的信息、执行次数和延时都可以看到</p><p>对于SQL语句中生成的临时表，可以通过视图statement_with_temp_tables，比如某一个语句生成的临时表情况，都做了统计</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> * <span class="selector-tag">from</span> <span class="selector-tag">statements_with_temp_tables</span>\<span class="selector-tag">G</span>;</span><br><span class="line">*************************** 1. <span class="selector-tag">row</span> ***************************</span><br><span class="line">                   <span class="selector-tag">query</span>: <span class="selector-tag">SELECT</span> `<span class="selector-tag">performance_schema</span>` .  ... <span class="selector-tag">name</span>` . `<span class="selector-tag">SUM_TIMER_WAIT</span>` <span class="selector-tag">DESC</span> </span><br><span class="line">                      <span class="selector-tag">db</span>: <span class="selector-tag">sys</span></span><br><span class="line">              <span class="selector-tag">exec_count</span>: 6</span><br><span class="line">           <span class="selector-tag">total_latency</span>: 231.41 <span class="selector-tag">ms</span></span><br><span class="line">       <span class="selector-tag">memory_tmp_tables</span>: 1157</span><br><span class="line">         <span class="selector-tag">disk_tmp_tables</span>: 96</span><br><span class="line"><span class="selector-tag">avg_tmp_tables_per_query</span>: 193</span><br><span class="line">  <span class="selector-tag">tmp_tables_to_disk_pct</span>: 8</span><br><span class="line">              <span class="selector-tag">first_seen</span>: 2021<span class="selector-tag">-02-18</span> 20<span class="selector-pseudo">:54</span><span class="selector-pseudo">:17</span></span><br><span class="line">               <span class="selector-tag">last_seen</span>: 2021<span class="selector-tag">-02-18</span> 21<span class="selector-pseudo">:45</span><span class="selector-pseudo">:47</span></span><br><span class="line">                  <span class="selector-tag">digest</span>: 0777<span class="selector-tag">f5fb19c1c948f63a61c7df1778a2</span></span><br><span class="line">*************************** 2. <span class="selector-tag">row</span> ***************************</span><br><span class="line">                   <span class="selector-tag">query</span>: <span class="selector-tag">SELECT</span> `<span class="selector-tag">information_schema</span>` .  ... <span class="selector-tag">SELECT</span> `<span class="selector-tag">information_schema</span>` . </span><br><span class="line">                      <span class="selector-tag">db</span>: <span class="selector-tag">sys</span></span><br><span class="line">              <span class="selector-tag">exec_count</span>: 2</span><br><span class="line">           <span class="selector-tag">total_latency</span>: 287.82 <span class="selector-tag">ms</span></span><br><span class="line">       <span class="selector-tag">memory_tmp_tables</span>: 390</span><br><span class="line">         <span class="selector-tag">disk_tmp_tables</span>: 66</span><br><span class="line"><span class="selector-tag">avg_tmp_tables_per_query</span>: 195</span><br><span class="line">  <span class="selector-tag">tmp_tables_to_disk_pct</span>: 17</span><br><span class="line">              <span class="selector-tag">first_seen</span>: 2021<span class="selector-tag">-02-18</span> 20<span class="selector-pseudo">:42</span><span class="selector-pseudo">:48</span></span><br><span class="line">               <span class="selector-tag">last_seen</span>: 2021<span class="selector-tag">-02-18</span> 20<span class="selector-pseudo">:42</span><span class="selector-pseudo">:50</span></span><br><span class="line">                  <span class="selector-tag">digest</span>: 86784014<span class="selector-tag">e7e812cb054332f64e8e75a0</span></span><br></pre></td></tr></table></figure><h3 id="sys的备份和重建"><a href="#sys的备份和重建" class="headerlink" title="sys的备份和重建"></a>sys的备份和重建</h3><p>如果查看sys的版本，可以使用视图version来得到</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">select</span> * <span class="selector-tag">from</span> <span class="selector-tag">version</span>;</span><br><span class="line">+<span class="selector-tag">-------------</span>+<span class="selector-tag">---------------</span>+</span><br><span class="line">| sys_version | mysql_version |</span><br><span class="line">+<span class="selector-tag">-------------</span>+<span class="selector-tag">---------------</span>+</span><br><span class="line">| 1.5.1       | 5.7.26-log    |</span><br><span class="line">+<span class="selector-tag">-------------</span>+<span class="selector-tag">---------------</span>+</span><br></pre></td></tr></table></figure><p>如果要导出，可以使用 mysqlpump sys&gt; sys_dump.sql 或者 mysqldump –databases –routines sys &gt; sys_dump . sql 来得到 sys 的创建语旬，如果需要重建则更简单，使用 mysql&lt;sys_dump .sql即可</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL体系结构与管理-2</title>
      <link href="2021/02/20/MySQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%A1%E7%90%86-2/"/>
      <url>2021/02/20/MySQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%A1%E7%90%86-2/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL数据结构与管理"><a href="#MySQL数据结构与管理" class="headerlink" title="MySQL数据结构与管理"></a>MySQL数据结构与管理</h1><h2 id="MySQL文件体系结构"><a href="#MySQL文件体系结构" class="headerlink" title="MySQL文件体系结构"></a>MySQL文件体系结构</h2><p>直观的看待一个服务（内存结构）和一些物理文件可以更清晰的理解，内存结构看不到，但是能够看到这些物理文件，所以可以先从文件简单解读一下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ ll</span><br><span class="line"><span class="selector-tag">-rw-r-----</span>. 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span>       56 <span class="selector-tag">Feb</span>  6 03<span class="selector-pseudo">:56</span> <span class="selector-tag">auto</span><span class="selector-class">.cnf</span></span><br><span class="line"><span class="selector-tag">-rw-r-----</span>. 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span>      876 <span class="selector-tag">Feb</span>  9 22<span class="selector-pseudo">:41</span> <span class="selector-tag">ib_buffer_pool</span></span><br><span class="line"><span class="selector-tag">-rw-r-----</span>. 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span> 12582912 <span class="selector-tag">Feb</span> 10 21<span class="selector-pseudo">:27</span> <span class="selector-tag">ibdata1</span></span><br><span class="line"><span class="selector-tag">-rw-r-----</span>. 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span> 50331648 <span class="selector-tag">Feb</span> 10 21<span class="selector-pseudo">:27</span> <span class="selector-tag">ib_logfile0</span></span><br><span class="line"><span class="selector-tag">-rw-r-----</span>. 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span> 50331648 <span class="selector-tag">Feb</span> 10 21<span class="selector-pseudo">:27</span> <span class="selector-tag">ib_logfile1</span></span><br><span class="line"><span class="selector-tag">-rw-r-----</span>. 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span> 12582912 <span class="selector-tag">Feb</span> 16 20<span class="selector-pseudo">:57</span> <span class="selector-tag">ibtmp1</span></span><br><span class="line"><span class="selector-tag">drwxr-x---</span>. 2 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span>     4096 <span class="selector-tag">Feb</span>  6 03<span class="selector-pseudo">:56</span> <span class="selector-tag">mysql</span></span><br><span class="line"><span class="selector-tag">-rw-r-----</span>. 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span>   104116 <span class="selector-tag">Feb</span> 17 15<span class="selector-pseudo">:13</span> <span class="selector-tag">mysql</span><span class="selector-class">.err</span></span><br><span class="line"><span class="selector-tag">-rw-r-----</span>. 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span>        5 <span class="selector-tag">Feb</span>  9 22<span class="selector-pseudo">:42</span> <span class="selector-tag">mysql</span><span class="selector-class">.pid</span></span><br><span class="line"><span class="selector-tag">drwxr-x---</span>. 2 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span>     8192 <span class="selector-tag">Feb</span>  6 03<span class="selector-pseudo">:56</span> <span class="selector-tag">performance_schema</span></span><br><span class="line"><span class="selector-tag">drwxr-x---</span>. 2 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span>     8192 <span class="selector-tag">Feb</span>  6 03<span class="selector-pseudo">:56</span> <span class="selector-tag">sys</span></span><br><span class="line"><span class="selector-tag">drwxr-x---</span>. 2 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span>      270 <span class="selector-tag">Feb</span>  9 21<span class="selector-pseudo">:52</span> <span class="selector-tag">world</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>文件名</th><th>文件类型</th><th>说明</th></tr></thead><tbody><tr><td>performance_schema</td><td>目录</td><td>数据库，MySQL的数据字典</td></tr><tr><td>mysql</td><td>目录</td><td>数据库，MySQL的数据字典</td></tr><tr><td>sys</td><td>目录</td><td>数据库，MySQL的数据字典</td></tr><tr><td>world</td><td>目录</td><td>数据库，存储应用数据</td></tr><tr><td>auto.cnf</td><td>文件</td><td>MySQL启动时如果没有UUID，就会生成这个文件</td></tr><tr><td>ibdata1</td><td>文件</td><td>系统数据字典信息（统计信息）UNDO表空间等数据</td></tr><tr><td>ibtmp1</td><td>文件</td><td>临时表空间位置，存储临时表</td></tr><tr><td>ib_logfile0-1</td><td>文件</td><td>REDO日志文件，事务日志文件</td></tr><tr><td>ib_buffer_pool</td><td>文件</td><td>5.7版本新特性，关闭MySQL时，会把内存中的热数据保存在这个文件中，提高使用率和性能</td></tr><tr><td>mysql.pid</td><td>文件</td><td>MySQL的服务进程号</td></tr><tr><td>mysql.err</td><td>文件</td><td>MySQL错误日志，记录数据启动的日志</td></tr></tbody></table><p><strong>查看world目录（数据库）下的文件，就会对MySQL数据存储有了一个直观的认识，显示如下</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ cd world</span><br><span class="line">$ ll</span><br><span class="line"><span class="selector-tag">-rw-r-----</span>. 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span>   8710 <span class="selector-tag">Feb</span>  8 23<span class="selector-pseudo">:04</span> <span class="selector-tag">city</span><span class="selector-class">.frm</span></span><br><span class="line"><span class="selector-tag">-rw-r-----</span>. 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span> 655360 <span class="selector-tag">Feb</span>  8 23<span class="selector-pseudo">:04</span> <span class="selector-tag">city</span><span class="selector-class">.ibd</span></span><br><span class="line"><span class="selector-tag">-rw-r-----</span>. 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span>   9172 <span class="selector-tag">Feb</span>  7 15<span class="selector-pseudo">:18</span> <span class="selector-tag">country</span><span class="selector-class">.frm</span></span><br><span class="line"><span class="selector-tag">-rw-r-----</span>. 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span> 180224 <span class="selector-tag">Feb</span>  7 15<span class="selector-pseudo">:18</span> <span class="selector-tag">country</span><span class="selector-class">.ibd</span></span><br><span class="line"><span class="selector-tag">-rw-r-----</span>. 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span>   8702 <span class="selector-tag">Feb</span>  7 15<span class="selector-pseudo">:18</span> <span class="selector-tag">countrylanguage</span><span class="selector-class">.frm</span></span><br><span class="line"><span class="selector-tag">-rw-r-----</span>. 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span> 229376 <span class="selector-tag">Feb</span>  7 15<span class="selector-pseudo">:18</span> <span class="selector-tag">countrylanguage</span><span class="selector-class">.ibd</span></span><br><span class="line"><span class="selector-tag">-rw-r-----</span>. 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span>     67 <span class="selector-tag">Feb</span>  7 15<span class="selector-pseudo">:18</span> <span class="selector-tag">db</span><span class="selector-class">.opt</span></span><br></pre></td></tr></table></figure><blockquote><ul><li><p>InnoDB存储引擎，每个表都有两类文件：.frm和.idb</p><p>frm：存储表的列信息</p><p>ibd：存储表的数据行和索引</p></li><li><p>MySQL大体有两个参数来做基本的空间：</p><p>一个是innodb_data_file_path，就是共享表空间，数据都往一个文件里放（ibdata1），同时也存储undo和数据字典信息</p><p>另一个是innodb_file_per_table，为独立的表空间，每一个表都有独立的文件.frm和.ibd</p></li><li><p>5.5版本的默认模式是共享表空间，也就是所有数据都往一个文件放（ibdata1），管理比较混乱</p></li><li><p>5.6版本以后，共享表空间保留，只用来存储：数据字典信息(idbdata1),undo，临时表</p></li><li><p>5.7版本，ibdata1将临时表独立，也就是我们上述说明的文件ibtmp1</p></li><li><p>8.0版本，ibdate1将undo也独立了</p></li></ul></blockquote><h3 id="简单总结MySQL文件结构"><a href="#简单总结MySQL文件结构" class="headerlink" title="简单总结MySQL文件结构"></a>简单总结MySQL文件结构</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210217171057288.png"></p><h2 id="MySQL存储结构"><a href="#MySQL存储结构" class="headerlink" title="MySQL存储结构"></a>MySQL存储结构</h2><p>其实一个表中的数据不会像文本那样存储，表里的数据是以行位单位存储，每一行会分为多个更细粒度的单元（比如字段），存储最小单元是页，即16K（也可以根据参数innodb_page_size调整为4k、8k、32k等），然后自成一套体系</p><blockquote><ul><li><p>段、区、页（只针对数据行）：</p><p>数据行存储，每次默认64个连续的page(16K)，加起来就是1M区，64 * 16 = 1024</p><p>如果按32K分块，那么每次就会有32个连续的page，也还是1M，不管分多少K为一块，都是1M的区</p><p>一般情况下（非分区表），一张表就是一个段，一个段由多个区构成，每一个区1M，由64个连续（16k）页组成</p></li></ul></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210217171639294.png"></p><h2 id="MySQL服务管理"><a href="#MySQL服务管理" class="headerlink" title="MySQL服务管理"></a>MySQL服务管理</h2><p>MySQL提供的网络访问模式，主要有socket和TCP/IP两类，并且对于每个实例，只能对应一个端口</p><h3 id="Socket连接"><a href="#Socket连接" class="headerlink" title="Socket连接"></a>Socket连接</h3><p>socket是一种特殊的文件，也叫做套接字，是应用层与TCP/IP协议栈通信的中间软件抽象层</p><p>socket连接可以理解是本地连接，MySQL默认使用socket方式连接，如果在服务端使用mysql命令即可连接到数据库的原因，mysql会启动时会寻找my.cnf配置文件中的socket文件路径，即使socket文件的生成目录在[mysqld]上指定，如果没有默认是/tmp/mysql.sock，默认使用的端口是3306</p><p><strong>命令如下</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -Uroot -p123456 -S /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">//或在<span class="selector-tag">mysql</span>命令中执行<span class="selector-tag">socket</span>路径</span><br><span class="line">$ mysql --socket=/data/mysql/data/tmp/mysqld.sock -uroot -p123456 -P3306 </span><br></pre></td></tr></table></figure><h3 id="TCP-IP连接"><a href="#TCP-IP连接" class="headerlink" title="TCP/IP连接"></a>TCP/IP连接</h3><p>TCP/IP连接可以理解为远程方式连接，它是建立一个基于网络的连接请求</p><p><strong>命令如下</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -uroot -p123456 -h 10.0.0.51 -P3306</span><br></pre></td></tr></table></figure><h2 id="MySQL层次结构"><a href="#MySQL层次结构" class="headerlink" title="MySQL层次结构"></a>MySQL层次结构</h2><p><strong>SQL语句引入</strong></p><blockquote><ol><li>SQL（结构化的查询语言）</li><li>DQL（数据查询语言）</li><li>DDL（数据定义语言）</li><li>DML（数据操作语言）</li><li>DCL（数据控制语言）</li></ol></blockquote><p><strong>执行一条命令的过程</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">mysql</span>&gt; <span class="selector-tag">select</span> <span class="selector-tag">user</span>,<span class="selector-tag">host</span> <span class="selector-tag">from</span> <span class="selector-tag">mysql</span><span class="selector-class">.user</span>;</span><br></pre></td></tr></table></figure><p><strong>mysql一共分为三个层次结构进行执行，如下图</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210205205855800.png"></p><blockquote><p>sql_mode：是一组mysql支持的基本语法及校验规则。所有的关系型数据库管理数据的时候使用SQL语句，都是通用使用SQL语句，从mysql5.7才真正的使用了国际标准，SQL（5.6）之前的版本都是不严谨，之前的版本都会有存入错误</p></blockquote><h2 id="MySQL的逻辑存储结构"><a href="#MySQL的逻辑存储结构" class="headerlink" title="MySQL的逻辑存储结构"></a>MySQL的逻辑存储结构</h2><p><strong>MySQL与Linux的对应关系</strong></p><table><thead><tr><th>MySQL</th><th>Linux</th></tr></thead><tbody><tr><td>MySQL库</td><td>Linux目录</td></tr><tr><td>show databases</td><td>Linux中的ls</td></tr><tr><td>create database word</td><td>Linux中mkdir</td></tr><tr><td>Excel表</td><td>Linux的文件</td></tr><tr><td>列（字段）</td><td>无</td></tr><tr><td>列属性</td><td>无</td></tr><tr><td>数据行（记录）</td><td>Linux的数据行</td></tr><tr><td>表属性（元数据）</td><td>Linux的文件数据</td></tr></tbody></table><h2 id="MySQL的物理存储结构"><a href="#MySQL的物理存储结构" class="headerlink" title="MySQL的物理存储结构"></a>MySQL的物理存储结构</h2><h3 id="库"><a href="#库" class="headerlink" title="库"></a><strong>库</strong></h3><p><strong>创建一个目录等同于数据库创建一个库</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ cd /data/mysql/data</span><br><span class="line">$ mkdir word                   </span><br><span class="line"></span><br><span class="line">$ mysql</span><br><span class="line"><span class="selector-tag">mysql</span>&gt; <span class="selector-tag">show</span> <span class="selector-tag">databases</span>;</span><br><span class="line">+<span class="selector-tag">--------------------</span>+</span><br><span class="line">| Database           |</span><br><span class="line">+<span class="selector-tag">--------------------</span>+</span><br><span class="line">| information_schema |</span><br><span class="line">......................</span><br><span class="line">| word               |</span><br><span class="line">+<span class="selector-tag">--------------------</span>+</span><br></pre></td></tr></table></figure><h3 id="表（存储引擎对比）"><a href="#表（存储引擎对比）" class="headerlink" title="表（存储引擎对比）"></a><strong>表（存储引擎对比）</strong></h3><table><thead><tr><th>存储引擎</th><th>InnoDB</th><th>MyISAM</th></tr></thead><tbody><tr><td>读性能</td><td>快</td><td>快</td></tr><tr><td>写性能</td><td>相对较慢</td><td>相对较慢</td></tr><tr><td>事务支持</td><td>支持</td><td>不支持</td></tr><tr><td>事务隔离级别</td><td>4</td><td>N/A</td></tr><tr><td>外键</td><td>支持</td><td>不支持</td></tr><tr><td>数据存储</td><td>大</td><td>大</td></tr><tr><td>压缩</td><td>支持</td><td>支持</td></tr><tr><td>故障自动回复</td><td>支持</td><td>不支持</td></tr></tbody></table><p><strong>MyISAM</strong></p><blockquote><p>MySQL早期的默认存储引擎，不支持事务，已经废弃了，所以不用怎么了解</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. <span class="selector-tag">user</span><span class="selector-class">.frm</span>： //存储的表结构（列，列属性）</span><br><span class="line">2. <span class="selector-tag">user</span><span class="selector-class">.MYD</span>： //存储的数据记录</span><br><span class="line">3. <span class="selector-tag">user</span><span class="selector-class">.MYI</span>： //存错索引</span><br></pre></td></tr></table></figure></blockquote><p><strong>InnoDB</strong></p><blockquote><p>InnoDB自MySQL 5.5.5版本开始就是作为默认的存储引擎，5.5.5以前使用的是MyISAM</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. <span class="selector-tag">time_zone</span><span class="selector-class">.frm</span>：  //存储的表结构（列，列属性）</span><br><span class="line">2. <span class="selector-tag">time_zone</span><span class="selector-class">.ibd</span>：  //存储的数据记录和索引（相当于一块磁盘）</span><br><span class="line">3. <span class="selector-tag">ibdate1</span>：        //数据字典信息</span><br></pre></td></tr></table></figure><h2 id="MySQL连接与内置功能命令"><a href="#MySQL连接与内置功能命令" class="headerlink" title="MySQL连接与内置功能命令"></a>MySQL连接与内置功能命令</h2><h3 id="连接命令"><a href="#连接命令" class="headerlink" title="连接命令"></a>连接命令</h3><p><strong>连接数据库的参数</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>-u</td><td>指定用户</td></tr><tr><td>-p</td><td>指定密码</td></tr><tr><td>-h</td><td>指定远程地址</td></tr><tr><td>-S</td><td>指定本地登录</td></tr><tr><td>-P</td><td>指定端口号</td></tr><tr><td>-e</td><td>免交互式</td></tr><tr><td>&lt;</td><td>恢复数据</td></tr></tbody></table><p><strong>本地和远程登录</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -uroot -p -S /tmp/mysql.sock</span><br><span class="line">$ mysql -uroot -p -h10.0.0.51 -P3306</span><br></pre></td></tr></table></figure><p><strong>免交互式-e参数：通过linux命令行调取mysql应用</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -uroot -p -e &quot;show databases;&quot;</span><br><span class="line"><span class="selector-tag">Enter</span> <span class="selector-tag">password</span>: </span><br><span class="line">+<span class="selector-tag">--------------------</span>+</span><br><span class="line">| Database           |</span><br><span class="line">+<span class="selector-tag">--------------------</span>+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">+<span class="selector-tag">--------------------</span>+</span><br></pre></td></tr></table></figure><p><strong>&lt;恢复数据</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -uroot -p123 &lt;/root/world.sql</span><br></pre></td></tr></table></figure><h3 id="内置命令"><a href="#内置命令" class="headerlink" title="内置命令"></a>内置命令</h3><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>\c、ctrl+c</td><td>结束上个命令运行</td></tr><tr><td>\q、quit；exit、ctrl+d</td><td>退出mysql</td></tr><tr><td>\G</td><td>将数据竖起来显示：select * from mysql.user\G;</td></tr><tr><td>source</td><td>恢复备份文件：source /root/world.sql</td></tr></tbody></table><h2 id="MySQL的日常启动和关闭"><a href="#MySQL的日常启动和关闭" class="headerlink" title="MySQL的日常启动和关闭"></a>MySQL的日常启动和关闭</h2><h3 id="日常启停"><a href="#日常启停" class="headerlink" title="日常启停"></a>日常启停</h3><blockquote><ul><li><p>第一种</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/<span class="selector-tag">application</span>/<span class="selector-tag">mysql</span>/<span class="selector-tag">support-files</span>/<span class="selector-tag">mysql</span><span class="selector-class">.server</span> <span class="selector-tag">start</span> </span><br></pre></td></tr></table></figure></li><li><p>第二种</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/<span class="selector-tag">application</span>/<span class="selector-tag">mysql</span>/<span class="selector-tag">bin</span>/<span class="selector-tag">mysqld_safe</span> &amp;</span><br></pre></td></tr></table></figure></li><li><p>第三种</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/<span class="selector-tag">etc</span>/<span class="selector-tag">init</span><span class="selector-class">.d</span>/<span class="selector-tag">mysqld</span> <span class="selector-tag">start</span> </span><br></pre></td></tr></table></figure></li><li><p>第四种</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ystemctl</span> <span class="selector-tag">start</span> <span class="selector-tag">mysqld</span> </span><br></pre></td></tr></table></figure><p>#PS：顺序优先mysql.server start –&gt; mysql_safe –&gt; mysqld</p></li></ul></blockquote><h3 id="启动方式优先"><a href="#启动方式优先" class="headerlink" title="启动方式优先"></a>启动方式优先</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210205222253436.png"></p><blockquote><ul><li><p>启动方式1：/etc/init.mysqld（推荐）</p><p>调用的是/application/mysql/support-files/mysql.server</p></li><li><p>启动方式2：systemctl start mysqld</p><p>是直接找mysqld启动文件按，需要依赖于my.cnf文件</p></li><li><p>启动方法3：维护性的任务</p><p>mysqld_safe –skip-grant-table –skip-networking &amp;</p><p>一般会将我们需要的参数临时加到命令行，也会读取/etc/my.cnf的内容，但是如果冲突，命令行优先最高</p></li><li><p>启动方法4：mysqld_safe</p><p>mysqld_safe &amp; </p><p>mysqladmin -uroot -proot shutdown  //关闭方法</p></li></ul></blockquote><h2 id="初始化配置文件"><a href="#初始化配置文件" class="headerlink" title="初始化配置文件"></a>初始化配置文件</h2><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><blockquote><ul><li>影响数据库的启动</li><li>影响客户端的工鞥呢</li></ul></blockquote><h3 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h3><blockquote><p>[标签]</p><p>xxx=xxx</p><p>[标签]</p><p>xxx=xxx</p></blockquote><h3 id="配置文件标签的归类"><a href="#配置文件标签的归类" class="headerlink" title="配置文件标签的归类"></a>配置文件标签的归类</h3><blockquote><ul><li><p>服务端</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[mysqld]</span></span><br><span class="line"><span class="selector-attr">[mysqld_safe]</span></span><br><span class="line"><span class="selector-attr">[server]</span></span><br></pre></td></tr></table></figure></li><li><p>客户端</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[mysql]</span></span><br><span class="line"><span class="selector-attr">[mysqladmin]</span></span><br><span class="line"><span class="selector-attr">[mysqldump]</span></span><br><span class="line"><span class="selector-attr">[client]</span></span><br></pre></td></tr></table></figure></li></ul></blockquote><h3 id="配置文件设置样板（5-7版本）"><a href="#配置文件设置样板（5-7版本）" class="headerlink" title="配置文件设置样板（5.7版本）"></a>配置文件设置样板（5.7版本）</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/my.cnf </span><br><span class="line"><span class="selector-attr">[mysqld]</span></span><br><span class="line">user=mysql</span><br><span class="line">basedir=/application/mysql</span><br><span class="line">datadir=/data/mysql/data</span><br><span class="line">server_id=6</span><br><span class="line">socket=/tmp/mysql.soke</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[mysql]</span></span><br><span class="line">socket=/tmp/mysql.soke</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>[mysqld]</td><td>服务端配置</td></tr><tr><td>user=mysql</td><td>设置用户</td></tr><tr><td>basedir=/application/mysql</td><td>软件部分路径</td></tr><tr><td>datadir=/data/mysql/data</td><td>数据部分路径</td></tr><tr><td>server_id=6</td><td>服务器id，这个做主从用的</td></tr><tr><td>socket=/tmp/mysql.soke</td><td>服务器放置socket文件位置</td></tr><tr><td>[mysql]</td><td>客户端配置</td></tr><tr><td>socket=/tmp/mysql.soke</td><td>客户端放置socket的文件路径要跟服务器一致</td></tr></tbody></table><h3 id="配置读取顺序"><a href="#配置读取顺序" class="headerlink" title="配置读取顺序"></a>配置读取顺序</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ msyqld --verbose --help|grep my.cnf</span><br><span class="line">/<span class="selector-tag">etc</span>/<span class="selector-tag">my</span><span class="selector-class">.cnf</span> /<span class="selector-tag">etc</span>/<span class="selector-tag">mysql</span>/<span class="selector-tag">my</span><span class="selector-class">.cnf</span> /<span class="selector-tag">usr</span>/<span class="selector-tag">local</span>/<span class="selector-tag">mysql</span>/<span class="selector-tag">etc</span>/<span class="selector-tag">my</span><span class="selector-class">.cnf</span> ~/<span class="selector-class">.my</span><span class="selector-class">.cnf</span> </span><br><span class="line">                      my.cnf, $MYSQL_TCP_PORT, /etc/services, built-in default</span><br></pre></td></tr></table></figure><h3 id="可以强制使用自定义配置文件"><a href="#可以强制使用自定义配置文件" class="headerlink" title="可以强制使用自定义配置文件"></a>可以强制使用自定义配置文件</h3><blockquote><p>加上–defautls-file参数 </p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysqld_safe --defaults-file=/tmp/aa.txt &amp;</span><br></pre></td></tr></table></figure><h2 id="MySQL的连接管理"><a href="#MySQL的连接管理" class="headerlink" title="MySQL的连接管理"></a>MySQL的连接管理</h2><h3 id="使用SQLyog软件"><a href="#使用SQLyog软件" class="headerlink" title="使用SQLyog软件"></a>使用SQLyog软件</h3><blockquote><p>官网下载地址：<a href="https://sqlyog.en.softonic.com/download">https://sqlyog.en.softonic.com/download</a></p></blockquote><p><strong>1. mysql TCP/IP登录命令(远程)</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">mysql</span>&gt; <span class="selector-tag">grant</span> <span class="selector-tag">all</span> <span class="selector-tag">on</span> *.* <span class="selector-tag">to</span> <span class="selector-tag">root</span>@’10.0.0.%’ identified by ‘<span class="number">123</span>’;</span><br><span class="line"><span class="selector-tag">mysql</span> –<span class="selector-tag">uroot</span> –<span class="selector-tag">p123</span> –<span class="selector-tag">h10</span>.0.0.51 –<span class="selector-tag">P3306</span></span><br></pre></td></tr></table></figure><p><strong>2. 用sqlyog软件登录，如图：输入主机地址，用户名和密码既可以登录</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210205224613469.png"></p><p><strong>3. select user,local from mysql.user查看</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210205224658078.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL概述与部署安装-1</title>
      <link href="2021/02/20/MySQL%E6%A6%82%E8%BF%B0%E4%B8%8E%E9%83%A8%E7%BD%B2%E5%AE%89%E8%A3%85-1/"/>
      <url>2021/02/20/MySQL%E6%A6%82%E8%BF%B0%E4%B8%8E%E9%83%A8%E7%BD%B2%E5%AE%89%E8%A3%85-1/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL概述与部署安装"><a href="#MySQL概述与部署安装" class="headerlink" title="MySQL概述与部署安装"></a>MySQL概述与部署安装</h1><h2 id="MySQL概述"><a href="#MySQL概述" class="headerlink" title="MySQL概述"></a>MySQL概述</h2><h3 id="MySQL介绍"><a href="#MySQL介绍" class="headerlink" title="MySQL介绍"></a>MySQL介绍</h3><p>MySQL是开源、多线程的关系型数据库，关系型数据库的特点是将数据保存在不同的表中，再将这些表放入不同的数据库，而不是将所有数据统一放在一个大仓库。这样的设计增加了MySQL的读取速度，而且灵活性与可管理性也有大大的提高，访问及管理MySQL数据库的最常用标准化语言为SQL结构化查询语言</p><h3 id="MySQL主要分支"><a href="#MySQL主要分支" class="headerlink" title="MySQL主要分支"></a>MySQL主要分支</h3><p>MySQL官方版并一定适合所有的业务场景，于是产生了一些分支，如：Percona、MariaDB和Drizzle等</p><blockquote><p>Percona分支：是由MySQL咨询公司Percona发布，Percona Server是一款独立的数据库产品，可以与MySQL完全兼容，默认使用的引擎是XtraDB</p><p>MariaDB分支：名称来自Michael（Monty）Wideius的女儿Maria名字，MariaDB的目的是完全兼容MySQL，包括API和命令行，使之轻松称为MySQL的代替品，在10.0.9版本起使用XtraDB（名称代号为Aria）来替代MySQL的InnoDB存储引擎</p><p>Drizzle分支：是对MySQL引擎的重大修改版本，做了很多定制和改动，将很多代码重写，并进行了优化，甚至将编程语言从C换成了C++，但使用场景，与MySQL不兼容</p></blockquote><h3 id="MySQL的两个部分"><a href="#MySQL的两个部分" class="headerlink" title="MySQL的两个部分"></a>MySQL的两个部分</h3><p>MySQL本身没有明确的安装规范，但在工作可能会遇到各种奇怪的问题，为了能够统一环境的配置，方面定位和管理MySQL。可以将MySQL分为软件安装目录和数据目录，让软件和数据分离</p><p><strong>对于软件目录和数据目录可以根据公司的规划制定目录</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210204213725601.png"></p><p><strong>当然还可以将数据目录可以划分更详细，比如将数据目录、日志目录、临时目录分不同分区存放，以提高性能</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210204214323833.png"></p><h2 id="MySQL部署安装"><a href="#MySQL部署安装" class="headerlink" title="MySQL部署安装"></a>MySQL部署安装</h2><h3 id="MySQL-5-7-26（二进制版本安装）"><a href="#MySQL-5-7-26（二进制版本安装）" class="headerlink" title="MySQL-5.7.26（二进制版本安装）"></a>MySQL-5.7.26（二进制版本安装）</h3><p><strong>官网下载</strong></p><blockquote><p>官网下载地址：<a href="https://downloads.mysql.com/archives/get/p/23/file/mysql-5.7.26-linux-glibc2.12-x86_64.tar.gz">https://downloads.mysql.com/archives/get/p/23/file/mysql-5.7.26-linux-glibc2.12-x86_64.tar.gz</a></p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20210204220438246.png"></p><h3 id="创建目录，上传软件包"><a href="#创建目录，上传软件包" class="headerlink" title="创建目录，上传软件包"></a>创建目录，上传软件包</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir -p /server/tools        //存放的mysql压缩包目录</span><br><span class="line">$ mkdir /application            //存放mysql软件部分的目录</span><br><span class="line">$ mkdir -p /data/mysql/data     //存放的mysql数据部分的目录</span><br><span class="line"></span><br><span class="line">$ cd /server/tools/     </span><br><span class="line">$ rz -E</span><br><span class="line">$ ls                  </span><br><span class="line"><span class="selector-tag">mysql-5</span>.7.26<span class="selector-tag">-linux-glibc2</span>.12<span class="selector-tag">-x86_64</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br><span class="line">$ tar xf mysql-5.7.26-linux-glibc2.12-x86_64.tar.gz </span><br><span class="line">$ mv mysql-5.7.26-linux-glibc2.12-x86_64 /application/mysql</span><br><span class="line"></span><br><span class="line">$ cd /application/mysql/</span><br><span class="line">$ ls</span><br><span class="line"><span class="selector-tag">bin</span>  <span class="selector-tag">COPYING</span>  <span class="selector-tag">docs</span>  <span class="selector-tag">include</span>  <span class="selector-tag">lib</span>  <span class="selector-tag">man</span>  <span class="selector-tag">README</span>  <span class="selector-tag">share</span>  <span class="selector-tag">support-fil</span> </span><br></pre></td></tr></table></figure><p><strong>如果之前安装了MariaDB数据库的，需要进行移除</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -qa|grep mariadb </span><br><span class="line">$ yum remove mariadb-libs.x86_64 -y</span><br></pre></td></tr></table></figure><h3 id="创建MySQL用户并设置环境变量"><a href="#创建MySQL用户并设置环境变量" class="headerlink" title="创建MySQL用户并设置环境变量"></a>创建MySQL用户并设置环境变量</h3><p><strong>创建用户</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ useradd -s /sbin/nologin mysql</span><br><span class="line">$ tail -1 /etc/passwd</span><br><span class="line"><span class="selector-tag">mysql</span><span class="selector-pseudo">:x</span><span class="selector-pseudo">:1002</span><span class="selector-pseudo">:1002</span>::/<span class="selector-tag">home</span>/<span class="selector-tag">mysql</span>:/<span class="selector-tag">sbin</span>/<span class="selector-tag">nologin</span></span><br></pre></td></tr></table></figure><p><strong>设置环境变量</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ echo &quot;export PATH=/application/mysql/bin:$PATH&quot; &gt;&gt;/etc/profile</span><br><span class="line">$ tail -1 /etc/profile</span><br><span class="line">export PATH=/application/mysql/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin</span><br><span class="line"></span><br><span class="line">$ source /etc/profile</span><br><span class="line">$ echo $PATH  </span><br><span class="line">/<span class="selector-tag">application</span>/<span class="selector-tag">mysql</span>/<span class="selector-tag">bin</span>:/<span class="selector-tag">usr</span>/<span class="selector-tag">local</span>/<span class="selector-tag">sbin</span>:/<span class="selector-tag">usr</span>/<span class="selector-tag">local</span>/<span class="selector-tag">bin</span>:/<span class="selector-tag">usr</span>/<span class="selector-tag">sbin</span>:/<span class="selector-tag">usr</span>/<span class="selector-tag">bin</span>:/<span class="selector-tag">root</span>/<span class="selector-tag">bin</span></span><br></pre></td></tr></table></figure><p><strong>检查版本</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -V</span><br><span class="line"><span class="selector-tag">mysql</span> <span class="selector-tag">Ver</span> 14.14 <span class="selector-tag">Distrib</span> 5.7.26, <span class="selector-tag">for</span> <span class="selector-tag">linux-glibc2</span>.12 (<span class="selector-tag">x86_64</span>) <span class="selector-tag">using</span>  <span class="selector-tag">EditLine</span> <span class="selector-tag">wrapper</span></span><br></pre></td></tr></table></figure><h3 id="加载一块磁盘，作为MySQL的数据盘"><a href="#加载一块磁盘，作为MySQL的数据盘" class="headerlink" title="加载一块磁盘，作为MySQL的数据盘"></a>加载一块磁盘，作为MySQL的数据盘</h3><p><strong>查看没有挂载的磁盘</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ fdisk -l</span><br><span class="line"><span class="selector-tag">Disk</span> /<span class="selector-tag">dev</span>/<span class="selector-tag">sda</span>: 10.7 <span class="selector-tag">GB</span>, 10737418240 <span class="selector-tag">bytes</span>, 20971520 <span class="selector-tag">sectors</span>      //挂载了磁盘</span><br><span class="line"><span class="selector-tag">Device</span> <span class="selector-tag">Boot</span>      <span class="selector-tag">Start</span>         <span class="selector-tag">End</span>      <span class="selector-tag">Blocks</span>   <span class="selector-tag">Id</span>  <span class="selector-tag">System</span></span><br><span class="line">/<span class="selector-tag">dev</span>/<span class="selector-tag">sda1</span>   *        2048      411647      204800   83  <span class="selector-tag">Linux</span></span><br><span class="line">    </span><br><span class="line"><span class="selector-tag">Disk</span> /<span class="selector-tag">dev</span>/<span class="selector-tag">sdb</span>: 21.5 <span class="selector-tag">GB</span>, 21474836480 <span class="selector-tag">bytes</span>, 41943040 <span class="selector-tag">sectors</span>      //没有挂载的磁盘</span><br></pre></td></tr></table></figure><p><strong>格式化磁盘，文件系统为xfs</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkfs.xfs /dev/sdb      </span><br></pre></td></tr></table></figure><p><strong>查看/dev/sdb的UUID</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ blkid   </span><br><span class="line">/dev/sdb: UUID=&quot;5f948a8b-8512-4c60-b1c5-99e5bc96f3e1&quot; TYPE=&quot;xfs&quot; </span><br></pre></td></tr></table></figure><p><strong>查看文件，将UUID作为挂载内容，挂载到/data目录中</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ tail -1 /etc/fstab</span><br><span class="line">UUID=5f948a8b-8512-4c60-b1c5-99e5bc96f3e1 /data   xfs  default 0 0 </span><br></pre></td></tr></table></figure><p><strong>自行挂载</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mount -a           </span><br></pre></td></tr></table></figure><p><strong>查看是否挂载成功</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ df   </span><br><span class="line"><span class="selector-tag">Filesystem</span>     1<span class="selector-tag">K-blocks</span>    <span class="selector-tag">Used</span> <span class="selector-tag">Available</span> <span class="selector-tag">Use</span>% <span class="selector-tag">Mounted</span> <span class="selector-tag">on</span></span><br><span class="line">/<span class="selector-tag">dev</span>/<span class="selector-tag">sdb</span>        20961280   32944  20928336   1% /<span class="selector-tag">data</span> </span><br></pre></td></tr></table></figure><h3 id="软件目录以及数据目录进行授权修改"><a href="#软件目录以及数据目录进行授权修改" class="headerlink" title="软件目录以及数据目录进行授权修改"></a>软件目录以及数据目录进行授权修改</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ chown -R mysql.mysql /application/</span><br><span class="line">$ chown -R mysql.mysql /data/</span><br></pre></td></tr></table></figure><h3 id="初始化命令"><a href="#初始化命令" class="headerlink" title="初始化命令"></a>初始化命令</h3><blockquote><p>5.6版本的初始化命令：/application/mysql/scritps/mysql_install_db</p><p>5.7版本的初始化命令：mysqld –initialize –user=mysql –basedir=/application/mysql –datadir=/data/mysql/data</p></blockquote><p><strong>初始化，设置指定用户，以及软件目录和数据目录</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ mysqld --initialize --user=mysql --basedir=/application/mysql --datadir=/data/mysql/data     </span><br><span class="line"></span><br><span class="line">............................省略......................................</span><br><span class="line"></span><br><span class="line">2020-08-29T08:09:54.587202Z 1 [Note] A temporary password is generated for root@localhost: rl)HpxuHi0su  </span><br><span class="line">//初始化的最后一条信息，5.7版本将会帮你创建一个临时密码(<span class="selector-tag">rl</span>)<span class="selector-tag">HpxuHi0su</span>）</span><br></pre></td></tr></table></figure><blockquote><ul><li><p>5.7的新特性：–initialize参数</p><p>1）对于密码复杂度进行定制：12位，4种（数字、大写字符、小写字母、符号）</p><p>2）密码过期时间：180</p><p>3）给root@localhost用户设置临时密码</p></li></ul></blockquote><p><strong>如果不希望设置密码则–initialize参数加上-insecure参数</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ rm -rf /data/mysql/data/              //要将之前的数据删除</span><br><span class="line">$ mysqld --initialize-insecure --user=mysql --basedir=/application/mysql --datadir=/data/mysql/data</span><br></pre></td></tr></table></figure><h3 id="编写配置文件"><a href="#编写配置文件" class="headerlink" title="编写配置文件"></a>编写配置文件</h3><blockquote><p>[mysqld]：服务端</p><p>[mysql]：客户端</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/my.cnf</span><br><span class="line"><span class="selector-attr">[mysqld]</span></span><br><span class="line">user=mysql</span><br><span class="line">basedir=/application/mysql</span><br><span class="line">datadir=/data/mysql/data</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">server_id=6</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[mysql]</span></span><br><span class="line">socket=/tmp/mysql.sock</span><br></pre></td></tr></table></figure><h3 id="设置用-etc-init-d启动和关闭数据库"><a href="#设置用-etc-init-d启动和关闭数据库" class="headerlink" title="设置用/etc/init.d启动和关闭数据库"></a>设置用/etc/init.d启动和关闭数据库</h3><blockquote><p>//复制路径到/etc/init.d/mysqld</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cp -rf /application/mysql/support-files/mysql.server  /etc/init.d/mysqld </span><br><span class="line">$ /etc/init.d/mysqld start </span><br></pre></td></tr></table></figure><h3 id="设置用systemctl方式启动和关闭数据库"><a href="#设置用systemctl方式启动和关闭数据库" class="headerlink" title="设置用systemctl方式启动和关闭数据库"></a>设置用systemctl方式启动和关闭数据库</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">cat</span> &gt;/<span class="selector-tag">etc</span>/<span class="selector-tag">systemd</span>/<span class="selector-tag">system</span>/<span class="selector-tag">mysqld</span><span class="selector-class">.service</span> &lt;&lt;<span class="selector-tag">EOF</span></span><br><span class="line"><span class="selector-attr">[Unit]</span></span><br><span class="line">Description=MySQL Server</span><br><span class="line">Documentation=man:mysqld(8)</span><br><span class="line">Documentation=http://dev.mysql.com/doc/refman/en/using-systemd.html</span><br><span class="line">After=network.target</span><br><span class="line">After=syslog.target</span><br><span class="line"><span class="selector-attr">[Install]</span></span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"><span class="selector-attr">[Service]</span></span><br><span class="line">User=mysql</span><br><span class="line">Group=mysql</span><br><span class="line">ExecStart=/application/mysql/bin/mysqld --defaults-file=/etc/my.cnf</span><br><span class="line">LimitNOFILE = 5000</span><br><span class="line"><span class="selector-tag">EOF</span></span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl stop mysqld  &amp;&amp; systemctl start mysqld </span><br><span class="line">$ ss -lntup|grep 3306  </span><br><span class="line">tcp    LISTEN     0      80       :::3306                 :::*                   users:((&quot;mysqld&quot;,pid=3737,fd=20))</span><br></pre></td></tr></table></figure><h3 id="查看用户及密码"><a href="#查看用户及密码" class="headerlink" title="查看用户及密码"></a>查看用户及密码</h3><p><strong>查看用户表信息</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ mysql</span><br><span class="line"><span class="selector-tag">mysql</span>&gt; <span class="selector-tag">select</span> <span class="selector-tag">user</span>,<span class="selector-tag">host</span> <span class="selector-tag">from</span> <span class="selector-tag">mysql</span><span class="selector-class">.user</span>;</span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">-----------</span>+</span><br><span class="line">| user          | host      |</span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">-----------</span>+</span><br><span class="line">| mysql.session | localhost |</span><br><span class="line">| mysql.sys     | localhost |</span><br><span class="line">| root          | localhost |</span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">-----------</span>+</span><br></pre></td></tr></table></figure><p><strong>查看密码信息，加上authentication_string参数</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">mysql</span>&gt; <span class="selector-tag">select</span> <span class="selector-tag">user</span>,<span class="selector-tag">host</span>,<span class="selector-tag">authentication_string</span> <span class="selector-tag">from</span> <span class="selector-tag">mysql</span><span class="selector-class">.user</span>;</span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">-----------</span>+<span class="selector-tag">-------------------------------------------</span>+</span><br><span class="line">| user          | host      | authentication_string                     |</span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">-----------</span>+<span class="selector-tag">-------------------------------------------</span>+</span><br><span class="line">| root          | localhost | *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 |</span><br><span class="line">| mysql.session | localhost | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE |</span><br><span class="line">| mysql.sys     | localhost | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE |</span><br><span class="line">+<span class="selector-tag">---------------</span>+<span class="selector-tag">-----------</span>+<span class="selector-tag">-------------------------------------------</span>+</span><br></pre></td></tr></table></figure><h2 id="设置管理员密码"><a href="#设置管理员密码" class="headerlink" title="设置管理员密码"></a>设置管理员密码</h2><h3 id="交换式添加密码"><a href="#交换式添加密码" class="headerlink" title="交换式添加密码"></a>交换式添加密码</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mysqladmin -uroot password  </span><br><span class="line"><span class="selector-tag">New</span> <span class="selector-tag">password</span>: 密码</span><br><span class="line"><span class="selector-tag">Confirm</span> <span class="selector-tag">new</span> <span class="selector-tag">password</span>: 再次输入密码</span><br></pre></td></tr></table></figure><h3 id="免交互式添加密码"><a href="#免交互式添加密码" class="headerlink" title="免交互式添加密码"></a>免交互式添加密码</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysqladmin -uroot password 123456</span><br></pre></td></tr></table></figure><h3 id="密码忘记的解决方法"><a href="#密码忘记的解决方法" class="headerlink" title="密码忘记的解决方法"></a>密码忘记的解决方法</h3><blockquote><p>–skip-grant-tables：跳过授权表<br>–skip-networking：跳过远程登录，如果不跳过远程登录，那么每个人都可以登录进来</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ /etc/init.d/mysqld stop</span><br><span class="line">$ mysql --skip-grant-tables --skip-networking &amp;</span><br><span class="line"><span class="selector-attr">[1]</span> 10227</span><br><span class="line">[root@db01 ~]# 2020-06-29T10:39:48.780708Z mysqld_safe Logging to &#x27;/data/mysql/data/db01.err&#x27;.</span><br><span class="line">2020<span class="selector-tag">-06-29T10</span><span class="selector-pseudo">:39</span><span class="selector-pseudo">:48.816038Z</span> <span class="selector-tag">mysqld_safe</span> <span class="selector-tag">Starting</span> <span class="selector-tag">mysqld</span> <span class="selector-tag">daemon</span> <span class="selector-tag">with</span> <span class="selector-tag">databases</span> <span class="selector-tag">from</span> /<span class="selector-tag">data</span>/<span class="selector-tag">mysql</span>/<span class="selector-tag">data</span>       //回车</span><br></pre></td></tr></table></figure><p><strong>此时不需要密码即可进入mysql数据库，进入之后重新修改密码</strong></p><blockquote><p>注意：需要先使用flush privileges;命令刷新上述的操作，重新加载表，否则会出现以下错误</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ERROR</span> 1290 (<span class="selector-tag">HY000</span>): <span class="selector-tag">The</span> <span class="selector-tag">MySQL</span> <span class="selector-tag">server</span> <span class="selector-tag">is</span> <span class="selector-tag">running</span> <span class="selector-tag">with</span> <span class="selector-tag">the</span> <span class="selector-tag">--skip-grant-tables</span> <span class="selector-tag">option</span> <span class="selector-tag">so</span> <span class="selector-tag">it</span> <span class="selector-tag">cannot</span> <span class="selector-tag">execute</span> <span class="selector-tag">this</span> <span class="selector-tag">statement</span></span><br><span class="line">//意思是服务正在运行跳过<span class="selector-tag">grant</span>的参数，所以不能执行该命令</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">flush</span> <span class="selector-tag">privileges</span>;</span><br><span class="line">&gt; <span class="selector-tag">alter</span> <span class="selector-tag">user</span> <span class="selector-tag">root</span>@&#x27;localhost&#x27; identified by <span class="string">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="分析处理MySQL数据库无法启动"><a href="#分析处理MySQL数据库无法启动" class="headerlink" title="分析处理MySQL数据库无法启动"></a>分析处理MySQL数据库无法启动</h2><h3 id="示例1：修改-data-mysql-data的一个文件属性"><a href="#示例1：修改-data-mysql-data的一个文件属性" class="headerlink" title="示例1：修改/data/mysql/data的一个文件属性"></a>示例1：修改/data/mysql/data的一个文件属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ pwd</span><br><span class="line">/<span class="selector-tag">data</span>/<span class="selector-tag">mysql</span>/<span class="selector-tag">data</span></span><br><span class="line">$ chown root.root ibdata1</span><br><span class="line"></span><br><span class="line">$ ll  </span><br><span class="line"><span class="selector-tag">-rw-r-----</span> 1 <span class="selector-tag">root</span>  <span class="selector-tag">root</span>  12582912 <span class="selector-tag">Jun</span> 29 17<span class="selector-pseudo">:58</span> <span class="selector-tag">ibdata1</span></span><br><span class="line"><span class="selector-tag">-rw-r-----</span> 1 <span class="selector-tag">mysql</span> <span class="selector-tag">mysql</span> 50331648 <span class="selector-tag">Jun</span> 29 17<span class="selector-pseudo">:58</span> <span class="selector-tag">ib_logfile0</span></span><br></pre></td></tr></table></figure><p><strong>systemctl重启，登录mysql才会出现以下错误</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl stop mysqld  &amp;&amp; systemctl start mysqld </span><br><span class="line">$ mysql                 </span><br><span class="line">ERROR 2002 (HY000): Can&#x27;t connect to local MySQL server through socket &#x27;/tmp/mysql.sock&#x27; (2)</span><br></pre></td></tr></table></figure><p><strong>用/etc/init/mysqld方式开启就会直接出现报错</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ /etc/init.d/mysqld start </span><br><span class="line"><span class="selector-tag">Starting</span> <span class="selector-tag">MySQL</span>.. <span class="selector-tag">ERROR</span>! <span class="selector-tag">The</span> <span class="selector-tag">server</span> <span class="selector-tag">quit</span> <span class="selector-tag">without</span> <span class="selector-tag">updating</span> <span class="selector-tag">PID</span> <span class="selector-tag">file</span> (/<span class="selector-tag">data</span>/<span class="selector-tag">mysql</span>/<span class="selector-tag">data</span>/<span class="selector-tag">db01</span><span class="selector-class">.pid</span>).</span><br></pre></td></tr></table></figure><blockquote><ul><li><p>两种方法</p><p>很明显使用systemctl可以重启，但是没有指明保存的信息</p><p>使用/etc/init.mysqld开启，就会出现报错，<em>所以推荐使用这种方法启停mysql</em></p></li></ul></blockquote><p><strong>查看错误日志</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ cat db01.err   </span><br><span class="line"><span class="selector-tag">ad</span> <span class="selector-tag">priority</span> <span class="selector-tag">can</span> <span class="selector-tag">be</span> <span class="selector-tag">changed</span>. <span class="selector-tag">See</span> <span class="selector-tag">the</span> <span class="selector-tag">man</span> <span class="selector-tag">page</span> <span class="selector-tag">of</span> <span class="selector-tag">setpriority</span>().</span><br><span class="line">2020-06-29T10:11:40.095458Z 0 [ERROR] InnoDB: The innodb_system data file &#x27;ibdata1&#x27; must be writable    //文件必须可写，这就可以看出权限不对劲</span><br><span class="line">2020-06-29T10:11:40.095482Z 0 [ERROR] InnoDB: The innodb_system data file &#x27;ibdata1&#x27; must be writable</span><br><span class="line">2020<span class="selector-tag">-06-29T10</span><span class="selector-pseudo">:11</span><span class="selector-pseudo">:40.095490Z</span> 0 <span class="selector-attr">[ERROR]</span> <span class="selector-tag">InnoDB</span>: <span class="selector-tag">Plugin</span> <span class="selector-tag">initialization</span> <span class="selector-tag">aborted</span> <span class="selector-tag">with</span> <span class="selector-tag">error</span> <span class="selector-tag">Generic</span> <span class="selector-tag">error</span></span><br><span class="line">2020-06-29T10:11:40.700063Z 0 [ERROR] Plugin &#x27;InnoDB&#x27; init function returned error.</span><br><span class="line">2020-06-29T10:11:40.700130Z 0 [ERROR] Plugin &#x27;InnoDB&#x27; registration as a STORAGE ENGINE failed.</span><br><span class="line">2020<span class="selector-tag">-06-29T10</span><span class="selector-pseudo">:11</span><span class="selector-pseudo">:40.700147Z</span> 0 <span class="selector-attr">[ERROR]</span> <span class="selector-tag">Failed</span> <span class="selector-tag">to</span> <span class="selector-tag">initialize</span> <span class="selector-tag">builtin</span> <span class="selector-tag">plugins</span>.</span><br><span class="line">2020<span class="selector-tag">-06-29T10</span><span class="selector-pseudo">:11</span><span class="selector-pseudo">:40.700172Z</span> 0 <span class="selector-attr">[ERROR]</span> <span class="selector-tag">Aborting</span></span><br></pre></td></tr></table></figure><h3 id="示例2：修改了-data-mysql-data数据下的全部文件"><a href="#示例2：修改了-data-mysql-data数据下的全部文件" class="headerlink" title="示例2：修改了/data/mysql/data数据下的全部文件"></a>示例2：修改了/data/mysql/data数据下的全部文件</h3><blockquote><p>这种情况会连日志文件都查看不了，无法判断错误</p></blockquote><p><strong>使用以下方法：将错误日志输出到屏幕上，就可以查看错误的日志原因</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ /application/mysql/bin/mysqld --defaults-file=/etc/my.cnf</span><br><span class="line"><span class="selector-tag">ead</span> <span class="selector-tag">priority</span> <span class="selector-tag">can</span> <span class="selector-tag">be</span> <span class="selector-tag">changed</span>. <span class="selector-tag">See</span> <span class="selector-tag">the</span> <span class="selector-tag">man</span> <span class="selector-tag">page</span> <span class="selector-tag">of</span> <span class="selector-tag">setpriority</span>().</span><br><span class="line">2020-06-29T10:20:30.233058Z 0 [ERROR] InnoDB: The innodb_system data file &#x27;ibdata1&#x27; must be writable</span><br></pre></td></tr></table></figure><h3 id="其他一些情况"><a href="#其他一些情况" class="headerlink" title="其他一些情况"></a>其他一些情况</h3><blockquote><ol><li>/etc/my.cnf路径不对经</li><li>/tmp/mysql.sock文件修改过或删除过</li><li>数据目录权限不是mysql</li><li>参数修改错误</li></ol></blockquote><h2 id="多实例管理"><a href="#多实例管理" class="headerlink" title="多实例管理"></a>多实例管理</h2><h3 id="创建多实例目录"><a href="#创建多实例目录" class="headerlink" title="创建多实例目录"></a>创建多实例目录</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir -p /data/330&#123;7..9&#125;/data</span><br><span class="line">$ tree -L 1 /data/</span><br><span class="line">/<span class="selector-tag">data</span>/</span><br><span class="line">├── 3307</span><br><span class="line">├── 3308</span><br><span class="line">├── 3309</span><br><span class="line">└── <span class="selector-tag">mysql</span></span><br></pre></td></tr></table></figure><h3 id="配置多实例"><a href="#配置多实例" class="headerlink" title="配置多实例"></a>配置多实例</h3><p><strong>创建（3307、3308、3309）的配置文件</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">cat</span> &gt; /<span class="selector-tag">data</span>/3307/<span class="selector-tag">my</span><span class="selector-class">.cnf</span> &lt;&lt;<span class="selector-tag">EOF</span></span><br><span class="line"><span class="selector-attr">[mysqld]</span></span><br><span class="line">basedir=/application/mysql</span><br><span class="line">datadir=/data/3307/data</span><br><span class="line">socket=/data/3307/mysql.sock</span><br><span class="line">log_error=/data/3307/mysql.log</span><br><span class="line">port=3307</span><br><span class="line">server_id=7</span><br><span class="line">log_bin=/data/3307/mysql-bin</span><br><span class="line"><span class="selector-tag">EOF</span></span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cp /data/3307/my.cnf /data/3308/my.cnf  </span><br><span class="line">$ sed -i &#x27;s#7#8#g&#x27; /data/3308/my.cnf </span><br><span class="line"></span><br><span class="line">$ cp /data/3307/my.cnf /data/3309/my.cnf </span><br><span class="line">$ sed -i &#x27;s#7#9#g&#x27; /data/3309/my.cnf</span><br></pre></td></tr></table></figure><h3 id="初始化三套数据"><a href="#初始化三套数据" class="headerlink" title="初始化三套数据"></a>初始化三套数据</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cp /etc/my.cnf /etc/my.cnf.bak    //备份一下</span><br><span class="line"></span><br><span class="line">$ mysqld --initialize-insecure  --user=mysql --datadir=/data/3307/data --basedir=/application/mysql</span><br><span class="line">$ mysqld --initialize-insecure  --user=mysql --datadir=/data/3308/data --basedir=/application/mysql</span><br><span class="line">$ mysqld --initialize-insecure  --user=mysql --datadir=/data/3309/data --basedir=/application/mysql</span><br></pre></td></tr></table></figure><h3 id="复制systemctl管理多实例"><a href="#复制systemctl管理多实例" class="headerlink" title="复制systemctl管理多实例"></a>复制systemctl管理多实例</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cd /etc/systemd/system/</span><br><span class="line">$ cp mysqld.service mysqld3307.service </span><br><span class="line">$ cp mysqld.service mysqld3308.service </span><br><span class="line">$ cp mysqld.service mysqld3309.service </span><br></pre></td></tr></table></figure><p><strong>修改启动路径</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sed  -i &#x27;s#/etc/my.cnf#/data/3307/my.cnf#g&#x27; mysqld3307.service </span><br><span class="line">$ sed  -i &#x27;s#/etc/my.cnf#/data/3308/my.cnf#g&#x27; mysqld3308.service </span><br><span class="line">$ sed  -i &#x27;s#/etc/my.cnf#/data/3309/my.cnf#g&#x27; mysqld3309.service </span><br></pre></td></tr></table></figure><h3 id="授权并启动服务"><a href="#授权并启动服务" class="headerlink" title="授权并启动服务"></a>授权并启动服务</h3><p><strong>授权</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chown -R mysql.mysql /data/</span><br></pre></td></tr></table></figure><p><strong>启动服务</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl start mysqld3307.service </span><br><span class="line">$ systemctl start mysqld3308.service </span><br><span class="line">$ systemctl start mysqld3309.service </span><br></pre></td></tr></table></figure><p><strong>查看启动的服务</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ ss -lnt|grep 330</span><br><span class="line"><span class="selector-tag">LISTEN</span>     0      80        <span class="selector-attr">[::]</span><span class="selector-pseudo">:3306</span>                  <span class="selector-attr">[::]</span>:*                  </span><br><span class="line"><span class="selector-tag">LISTEN</span>     0      80        <span class="selector-attr">[::]</span><span class="selector-pseudo">:3307</span>                  <span class="selector-attr">[::]</span>:*                  </span><br><span class="line"><span class="selector-tag">LISTEN</span>     0      80        <span class="selector-attr">[::]</span><span class="selector-pseudo">:3308</span>                  <span class="selector-attr">[::]</span>:*                  </span><br><span class="line"><span class="selector-tag">LISTEN</span>     0      80        <span class="selector-attr">[::]</span><span class="selector-pseudo">:3309</span>                  <span class="selector-attr">[::]</span>:*  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ansible-roles</title>
      <link href="2021/02/03/ansible-roles/"/>
      <url>2021/02/03/ansible-roles/</url>
      
        <content type="html"><![CDATA[<h1 id="ansible-roles"><a href="#ansible-roles" class="headerlink" title="ansible-roles"></a>ansible-roles</h1><h2 id="ansible程序roles–规范"><a href="#ansible程序roles–规范" class="headerlink" title="ansible程序roles–规范"></a>ansible程序roles–规范</h2><p><strong>playbook(剧本)编写完的一些问题</strong></p><blockquote><ol><li>目录结构不够规范</li><li>编写好的任务如何重复调用</li><li>服务端配置文件改动，客户端参数信息也自动变化（客户端，服务器都一个文件写）</li><li>汇总剧本中没有显示主机角色信息</li><li>一个剧本内容信息过多，不容易进行阅读</li></ol></blockquote><h3 id="创建规范目录结构"><a href="#创建规范目录结构" class="headerlink" title="创建规范目录结构"></a>创建规范目录结构</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ pwd</span><br><span class="line">/etc/ansible/roles</span><br><span class="line">$ mkdir &#123;rsync,nfs&#125;</span><br><span class="line">$ mkdir &#123;rsync,nfs&#125;/&#123;vars,tasks,templates,handlers,files&#125;</span><br><span class="line">$ tree</span><br><span class="line">.</span><br><span class="line">├── nfs</span><br><span class="line">│   ├── files          <span class="comment">//保存需要分发文件目录</span></span><br><span class="line">│   ├── handlers       <span class="comment">//保存触发器配置文件信息</span></span><br><span class="line">│   ├── tasks          <span class="comment">//保存要执行的动作信息文件</span></span><br><span class="line">│   ├── templates      <span class="comment">//保存需要分发模板文件，模板文件中可以设置变量信息</span></span><br><span class="line">│   └── vars           <span class="comment">//要保存的变量信息文件</span></span><br><span class="line">└── rsync</span><br><span class="line">    ├── files</span><br><span class="line">    ├── handlers</span><br><span class="line">    ├── tasks</span><br><span class="line">    ├── templates</span><br><span class="line">    └── vars</span><br></pre></td></tr></table></figure><h2 id="roles目录中创建相关文件-部署NFS"><a href="#roles目录中创建相关文件-部署NFS" class="headerlink" title="roles目录中创建相关文件(部署NFS)"></a>roles目录中创建相关文件(部署NFS)</h2><p><strong>编写文件流程图</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20201207124352333.png"></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ touch nfs/files/exports</span><br><span class="line">$ touch nfs/&#123;handlers,tasks,vars&#125;/main.yml</span><br><span class="line">$ tree nfs</span><br><span class="line">nfs</span><br><span class="line">├── files</span><br><span class="line">│   └── exports</span><br><span class="line">├── handlers</span><br><span class="line">│   └── main<span class="selector-class">.yml</span></span><br><span class="line">├── tasks</span><br><span class="line">│   └── main<span class="selector-class">.yml</span></span><br><span class="line">├── templates</span><br><span class="line">└── vars</span><br><span class="line">    └── main<span class="selector-class">.yml</span></span><br></pre></td></tr></table></figure><h3 id="编写roles，实现自动化部署NFS"><a href="#编写roles，实现自动化部署NFS" class="headerlink" title="编写roles，实现自动化部署NFS"></a>编写roles，实现自动化部署NFS</h3><h4 id="nfs-server"><a href="#nfs-server" class="headerlink" title="nfs_server"></a>nfs_server</h4><p><strong>1. 编写tasks目录中的main.yml文件</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/ansible/roles/nfs/tasks/main.yml </span><br><span class="line">- name: <span class="number">01</span>-push file to nfs server</span><br><span class="line">  copy: src=/etc/ansible/nfs_dir/nfs_server/exports dest=/etc/</span><br><span class="line">  notify: restart nfs service</span><br><span class="line">- name: <span class="number">02</span>-create nfs server username</span><br><span class="line">  user: name=nfsnobody create_home=no shell=/sbin/nologin</span><br><span class="line">- name: <span class="number">03</span>-create data directory</span><br><span class="line">  file: path=&#123;&#123; Data_dir &#125;&#125; state=directory owner=nfsnobody group=nfsnobody</span><br><span class="line">- name: <span class="number">04</span>-boot server</span><br><span class="line">  service: name=&#123;&#123; item &#125;&#125; state=started enabled=yes</span><br><span class="line">  with_items:</span><br><span class="line">    - rpcbind</span><br><span class="line">    - nfs</span><br></pre></td></tr></table></figure><p><strong>2. 编写vars目录中的main.yml文件</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/ansible/roles/nfs/vars/main.yml </span><br><span class="line">Data_dir: /data</span><br></pre></td></tr></table></figure><p><strong>3. 编写files目录中的文件</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cp /etc/ansible/nfs_dir/nfs_server/exports /etc/ansible/roles/nfs/files/</span><br><span class="line">cp: overwrite ‘nfs/files/exports’? y</span><br><span class="line"></span><br><span class="line">$ ll /etc/ansible/roles/nfs/files/</span><br><span class="line">-rw-r--r-- <span class="number">1</span> root root <span class="number">28</span> Dec  <span class="number">7</span> <span class="number">11</span>:<span class="number">22</span> exports</span><br></pre></td></tr></table></figure><p><strong>4. 编写handlers目录中的main.yml文件</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/ansible/roles/nfs/handlers/main.yml </span><br><span class="line">- name: <span class="number">06</span>-trigger restart nfs service</span><br><span class="line">  service: name=nfs state=restarted</span><br></pre></td></tr></table></figure><h4 id="nfs-client"><a href="#nfs-client" class="headerlink" title="nfs_client"></a>nfs_client</h4><p><strong>1. 编写tasks目录中的main.yml文件</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$  cat nfs_client/tasks/main.yml </span><br><span class="line">- name: <span class="number">01</span>-create mount directory</span><br><span class="line">  file: name=/www state=directory </span><br><span class="line">- name: <span class="number">02</span>-mount nfs file system</span><br><span class="line">  mount: src=<span class="number">10.0</span>.<span class="number">0.211</span>:&#123;&#123; Data_dir &#125;&#125; path=/www fstype=nfs state=mounted</span><br><span class="line">- name: <span class="number">03</span>-check mount info</span><br><span class="line">  shell: df -h |grep /data</span><br><span class="line">  register: result </span><br><span class="line">- name: <span class="number">04</span>-display mount info</span><br><span class="line">  debug: var=result.stdout verbosity=<span class="number">0</span></span><br></pre></td></tr></table></figure><p><strong>2. 编写vars目录中的main.yml文件</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cat nfs_client/vars/main.yml </span><br><span class="line">Data_dir: /data</span><br></pre></td></tr></table></figure><h3 id="编写一个主剧本文件"><a href="#编写一个主剧本文件" class="headerlink" title="编写一个主剧本文件"></a><strong>编写一个主剧本文件</strong></h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ pwd </span><br><span class="line">/etc/ansible/roles</span><br><span class="line">$ vim site<span class="selector-class">.yml</span> </span><br><span class="line">---</span><br><span class="line">- hosts: nfs_server      </span><br><span class="line">  roles: </span><br><span class="line">    - nfs_server      //服务器目录</span><br><span class="line"></span><br><span class="line">- hosts: nfs_client    </span><br><span class="line">  roles:</span><br><span class="line">    - nfs_client      //客户端目录</span><br></pre></td></tr></table></figure><p><strong>执行该剧本</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ansible-playbook --syntax-check site.yml       //检查语法</span><br><span class="line">$ ansible-playbook -C site.yml                   //模拟执行</span><br><span class="line">$ ansible-playbook site.yml                      //执行</span><br></pre></td></tr></table></figure><p><strong>还可以分的更细，可以每个不同操作创建一个yml文件</strong></p><blockquote><p>PS：如果操作较多，可以分开创建使用，这样每次操作就不用执行整个main的tasks动作。分开使用，不需要执行在mian文件去除就行，就像调取每个功能一样</p></blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ pwd </span><br><span class="line">/etc/ansible/roles/nfs_server/tasks</span><br><span class="line">$ vim main<span class="selector-class">.yml</span>                         <span class="comment">//编写主文件，调用下面的子文件</span></span><br><span class="line">- include_tasks: copy_info.yml      </span><br><span class="line">- include_tasks: create_dir.yml</span><br><span class="line">- include_tasks: boot_server.yml</span><br><span class="line"></span><br><span class="line">$ vim copy_info.yml </span><br><span class="line">- name: <span class="number">01</span>-copy conf file</span><br><span class="line">  copy: src=exports dest=/etc</span><br><span class="line">  notify: restart nfs server</span><br><span class="line"></span><br><span class="line">$ vim create_dir.yml</span><br><span class="line">- name: <span class="number">02</span>-create data dir</span><br><span class="line">  file: path=&#123;&#123; Data_dir &#125;&#125; state=directory owner=nfsnobody group=nfsnobody </span><br><span class="line"></span><br><span class="line">$ vim boot_server.yml</span><br><span class="line">- name: <span class="number">03</span>-boot server</span><br><span class="line">  service: name=&#123;&#123; item &#125;&#125; state=started enabled=yes</span><br><span class="line">  with_items:</span><br><span class="line">    - rpcbind</span><br><span class="line">    - nfs</span><br></pre></td></tr></table></figure><h2 id="template目录说明"><a href="#template目录说明" class="headerlink" title="template目录说明"></a><strong>template目录说明</strong></h2><p>template是一个模板，可以将相应的配置文件放入到template，然后在从template模块调用，在调用template模块时，可以不用把配置放入files目录中，就可以直接推送到被管理端。也可以在template写入变量（如果只是在vars目录下写变量信息，每次有变化都需要在配置文件上修改），在template下修改移动来的配置文件，就不需要去配置文件修改，而是直接在vars目录下的文件进行修改就行。</p><blockquote><ol><li><p>把相应的配置文件放入到template目录中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cp /etc/ansible/rsync_dir/rsync_server/* /etc/ansible/roles/rsync/template/</span><br><span class="line">$ ls </span><br><span class="line">rsyncd.conf  rsync.password</span><br></pre></td></tr></table></figure></li><li><p>tasks动作目录配置信息使用template模块</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">template: src=rsyncd.conf  dest=/etc/ </span><br></pre></td></tr></table></figure><p>#PS：使用这模块可以不用把配置文件放入到files目录中，可以直接推送到被管理端</p></li><li><p>定义vars目录配置文件中的变量信息</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vim rsyncd.conf</span><br><span class="line">  <span class="selector-tag">Port_info</span>: 873</span><br></pre></td></tr></table></figure></li><li><p>template目录中的配置文件定义变量</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vim rsync.conf</span><br><span class="line">port= &#123;&#123; Port_info &#125;&#125;</span><br></pre></td></tr></table></figure><p>#PS：修改端口就可以直接到vars目录中的变量文件进行修改，而不需要在去配置文件修改</p></li></ol></blockquote><h2 id="编写roles-实现自动化部署rsync"><a href="#编写roles-实现自动化部署rsync" class="headerlink" title="编写roles-实现自动化部署rsync"></a>编写roles-实现自动化部署rsync</h2><h3 id="rsync-server"><a href="#rsync-server" class="headerlink" title="rsync_server"></a>rsync_server</h3><p><strong>1. 编写tasks目录中的main.yml文件</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ cat tasks/main.yml </span><br><span class="line">- name: <span class="number">01</span>-install rsync service</span><br><span class="line">  yum: name=rsync state=installed</span><br><span class="line">- name: <span class="number">02</span>-create user rsync</span><br><span class="line">  user: name=rsync create_home=no shell=/sbin/nologin</span><br><span class="line">- name: <span class="number">03</span>-create dir backup</span><br><span class="line">  file: name=&#123;&#123; Data_dir &#125;&#125; state=directory owner=rsync group=rsync</span><br><span class="line">- name: <span class="number">04</span>-push file info to remote</span><br><span class="line">  copy: src=&#123;&#123; item.src &#125;&#125; dest=&#123;&#123; item.dest &#125;&#125; mode=&#123;&#123; item.mode &#125;&#125;</span><br><span class="line">  notify: if file is change it restart rsync server</span><br><span class="line">  with_items:</span><br><span class="line">    - &#123; src: <span class="string">&#x27;rsyncd.conf&#x27;</span>, dest: <span class="string">&#x27;/etc/&#x27;</span>, mode: <span class="string">&#x27;644&#x27;</span> &#125;</span><br><span class="line">    - &#123; src: <span class="string">&#x27;rsync.password&#x27;</span>, dest: <span class="string">&#x27;/etc/&#x27;</span>, mode: <span class="string">&#x27;600&#x27;</span>&#125; </span><br><span class="line">- name: <span class="number">05</span>-start rsync service</span><br><span class="line">  service: name=rsyncd state=started enabled=yes</span><br></pre></td></tr></table></figure><p><strong>2. 编写vars目录中的main.yml文件</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cat vars/main.yml </span><br><span class="line">Data_dir: /backup</span><br><span class="line">Port_info: <span class="number">876</span></span><br></pre></td></tr></table></figure><p><strong>3. 编写files目录中的文件</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cp /etc/ansible/rsync_dir/rsync_server/* ./</span><br></pre></td></tr></table></figure><p><strong>4. 编写handlers目录中的main.yml文件</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cat handlers/main.yml </span><br><span class="line">- name: restart rsync server</span><br><span class="line">  service: name=rsync state=restarted</span><br></pre></td></tr></table></figure><p><strong>5. 通过template目录实现变量转换</strong></p><blockquote><ol><li><p>将配置文件拷贝至templates目录</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cp /etc/ansible/rsync_dir/rsync_server/* /template/</span><br><span class="line">$ ll /etc/ansible/roles/rsync_server/templates/</span><br><span class="line"><span class="selector-tag">-rw-r--r--</span> 1 <span class="selector-tag">root</span> <span class="selector-tag">root</span> 467 <span class="selector-tag">Dec</span>  7 15<span class="selector-pseudo">:45</span> <span class="selector-tag">rsyncd</span><span class="selector-class">.conf</span></span><br><span class="line"><span class="selector-tag">-rw-r--r--</span> 1 <span class="selector-tag">root</span> <span class="selector-tag">root</span>  20 <span class="selector-tag">Dec</span>  7 15<span class="selector-pseudo">:45</span> <span class="selector-tag">rsync</span><span class="selector-class">.password</span></span><br></pre></td></tr></table></figure></li><li><p>tasks/main.yml文件修改</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cat tasks/main.yml </span><br><span class="line">template: src=&#123;&#123; item.src &#125;&#125; dest=&#123;&#123; item.dest &#125;&#125; mode=&#123;&#123; item.mode &#125;&#125;     //使用template模块</span><br><span class="line"><span class="selector-tag">notify</span>: <span class="selector-tag">if</span> <span class="selector-tag">file</span> <span class="selector-tag">is</span> <span class="selector-tag">change</span> <span class="selector-tag">it</span> <span class="selector-tag">restart</span> <span class="selector-tag">rsync</span> <span class="selector-tag">server</span></span><br><span class="line"><span class="selector-tag">with_items</span>:</span><br><span class="line">    <span class="selector-tag">-</span> &#123; <span class="attribute">src</span>: <span class="string">&#x27;rsyncd.conf&#x27;</span>, dest: <span class="string">&#x27;/etc/&#x27;</span>, mode: <span class="string">&#x27;644&#x27;</span> &#125;</span><br><span class="line">    <span class="selector-tag">-</span> &#123; <span class="attribute">src</span>: <span class="string">&#x27;rsync.password&#x27;</span>, dest: <span class="string">&#x27;/etc/&#x27;</span>, mode: <span class="string">&#x27;600&#x27;</span>&#125; </span><br></pre></td></tr></table></figure><p>#PS：将copy模块改成template</p></li><li><p>vars/main.yml文件修改</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cat vars/main.yml </span><br><span class="line"><span class="selector-tag">Data_dir</span>: /<span class="selector-tag">backup</span></span><br><span class="line"><span class="selector-tag">Port_info</span>: 876</span><br></pre></td></tr></table></figure></li><li><p>rsync的配置文件修改</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ grep &#x27;port&#x27; templates/rsyncd.conf </span><br><span class="line">port = &#123;&#123; Port_info &#125;&#125;                        //改成vars/main.yml变量的参数</span><br></pre></td></tr></table></figure></li><li><p>编写主剧本文件，写入rsync_server执行</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ pwd </span><br><span class="line">/<span class="selector-tag">etc</span>/<span class="selector-tag">ansible</span>/<span class="selector-tag">roles</span></span><br><span class="line">$ vim rsync_site.yml </span><br><span class="line"><span class="selector-tag">---</span></span><br><span class="line"><span class="selector-tag">-</span> <span class="selector-tag">hosts</span>: <span class="selector-tag">rsync_server</span>                    //主机清单</span><br><span class="line">  <span class="selector-tag">roles</span>: </span><br><span class="line">    <span class="selector-tag">-</span> <span class="selector-tag">rsync_server</span> </span><br><span class="line"></span><br><span class="line">$ ansible-playbook --syntax-check rsync_site.yml       //检查语法</span><br><span class="line">$ ansible-playbook -C rsync_site.yml                   //模拟执行</span><br><span class="line">$ ansible-playbook rsync_site.yml                      //执行</span><br></pre></td></tr></table></figure></li><li><p>客户端查看结果</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ grep &#x27;port&#x27; /etc/rsyncd.conf </span><br><span class="line">port = 876</span><br></pre></td></tr></table></figure></li></ol></blockquote><h3 id="rsync-client"><a href="#rsync-client" class="headerlink" title="rsync_client"></a>rsync_client</h3><p><strong>编写tasks目录中的main.yml文件</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ cat rsync_client/tasks/main.yml</span><br><span class="line">- name: <span class="number">01</span>-install rsync service</span><br><span class="line">  yum: name=rsync state=installed</span><br><span class="line">- name: <span class="number">02</span>-create password file</span><br><span class="line">  copy: content=<span class="number">123456</span> dest=/etc/rsync.password mode=<span class="number">600</span></span><br><span class="line">- name: <span class="number">03</span>-create test file</span><br><span class="line">  file: dest=/tmp/test.txt state=touch</span><br><span class="line">- name: <span class="number">04</span>-check test</span><br><span class="line">  shell: rsync -az /tmp/test.txt rsync_backup@<span class="number">10.0</span>.<span class="number">0.212</span>::backup --password-file=/etc/rsync.password</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> ansible </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ansible </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ansible-playbook</title>
      <link href="2021/02/03/ansible-playbook/"/>
      <url>2021/02/03/ansible-playbook/</url>
      
        <content type="html"><![CDATA[<h1 id="ansible-playbook"><a href="#ansible-playbook" class="headerlink" title="ansible-playbook"></a>ansible-playbook</h1><h2 id="剧本介绍"><a href="#剧本介绍" class="headerlink" title="剧本介绍"></a>剧本介绍</h2><p>playbook（也成为剧本） 是一个不同于ad-hoc命令行执行方式的模型，其功能更为强大灵活。它是一个非常简单的配置管理和多主机部署系统。playbook是由一个或多个<code>“play”</code>组成的列表。play的主要功能是将事先归一组的主机装扮成通过ansible中的task事先定义好的角色。从根本上来讲，所谓的task就是调用ansible的一个module将多个play组织一个playbook中，将通过连通起来，完整整个演员剧本。</p><h2 id="编写剧本的方法和规范"><a href="#编写剧本的方法和规范" class="headerlink" title="编写剧本的方法和规范"></a>编写剧本的方法和规范</h2><h3 id="编写剧本的规范"><a href="#编写剧本的规范" class="headerlink" title="编写剧本的规范"></a>编写剧本的规范</h3><p><strong>剧本编写规范:</strong></p><blockquote><ol><li><p>合理的信息缩进  两个空格表示一个缩进关系</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">标题一</span><br><span class="line">    标题二</span><br><span class="line">        标题三</span><br></pre></td></tr></table></figure><p>#PS: 在ansible中一定不能用tab进行缩进</p></li><li><p>冒号的使用方法</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">hosts</span>: 172.16.1.41</span><br><span class="line"><span class="selector-tag">tasks</span>:</span><br><span class="line">yum: name=xx</span><br></pre></td></tr></table></figure><p>#PS: 使用冒号时后面要有空格信息,以冒号结尾，冒号信息出现在注释说明中，后面不需要加上空格</p></li><li><p>短横线应用 -(列表功能)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">-</span> 张三</span><br><span class="line">  男</span><br><span class="line">    <span class="selector-tag">-</span> 打游戏</span><br><span class="line">   <span class="selector-tag">-</span> 运动</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">-</span> 李四</span><br><span class="line">  女</span><br><span class="line">    学习</span><br><span class="line">       湖南</span><br><span class="line"><span class="selector-tag">-</span> 王五</span><br><span class="line">  男</span><br><span class="line">    运动</span><br><span class="line">       深圳</span><br></pre></td></tr></table></figure><p>#PS: 使用短横线构成列表信息，短横线后面需要有空格 </p></li></ol></blockquote><h3 id="Ad-hoc部署rsync服务"><a href="#Ad-hoc部署rsync服务" class="headerlink" title="Ad-hoc部署rsync服务"></a>Ad-hoc部署rsync服务</h3><p><strong>服务端</strong></p><blockquote><ol><li><p>第一个历程：安装软件</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.41 -m yum -a &quot;name=rsync state=installed&quot;</span><br></pre></td></tr></table></figure></li><li><p>第二个历程：编写配置文件</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.41 -m copy -a &quot;src=/etc/rsyncd.conf dest=/etc/&quot;</span><br></pre></td></tr></table></figure></li><li><p>第三个历程：创建虚拟用户：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.41 -m user -a &quot;name=rsync create_home=no shell=/sbin/nologin&quot;</span><br></pre></td></tr></table></figure></li><li><p>第四个历程：创建目录</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.41 -m file -a &quot;dest=/bakcup state=directory owner=rsync group=rsync&quot;</span><br></pre></td></tr></table></figure></li><li><p>第五个历程：创建密码文件</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.41 -m copy -a &quot;content=rsync_backup:123456 dest=/etc/rsync.password mode=600&quot;</span><br></pre></td></tr></table></figure></li><li><p>第六个历程：启动服务</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.41 -m service -a &quot;name=rsync state=started enbaled=yes&quot;</span><br></pre></td></tr></table></figure></li></ol></blockquote><p><strong>客户端</strong></p><blockquote><ol><li><p>第一个历程：安装软件</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.31 -m yum -a &quot;name=rsync state=installed&quot;</span><br></pre></td></tr></table></figure></li><li><p>第二个历程：创建验证服务端的密码文件</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.31 -m copy -a &quot;content=123456 dest=/etc/rsync.password mode=600&quot;</span><br></pre></td></tr></table></figure></li><li><p>第三个历程：创建一个文件</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.31 -m file -a &quot;dest=/tmp/test.txt state=touch&quot;</span><br></pre></td></tr></table></figure></li><li><p>将文件备份到服务端</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.31 -m shell -a &quot;rsync -az /tmp/test.txt rsync_backup@10.0.0.212::backup --password-filel=/etc/rsync.password&quot;</span><br></pre></td></tr></table></figure></li></ol></blockquote><h3 id="编写剧本前奏"><a href="#编写剧本前奏" class="headerlink" title="编写剧本前奏"></a>编写剧本前奏</h3><blockquote><ol><li><p>创建剧本文件</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir /etc/ansible/ansible-playbook</span><br><span class="line">$ cd /etc/ansible/ansible-playbook</span><br><span class="line">$ vim rsync_service.yaml</span><br></pre></td></tr></table></figure><p>#PS：剧本扩展名尽量写为yaml</p></li><li><p>如何执行剧本：</p><p>第一个步骤：检查剧本的语法格式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ansible-playbook</span> <span class="selector-tag">--syntax-check</span> <span class="selector-tag">rsync_service</span><span class="selector-class">.yaml</span></span><br></pre></td></tr></table></figure><p>第二个步骤：模拟执行剧本</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ansible-playbook</span> <span class="selector-tag">-C</span> <span class="selector-tag">rsync_service</span><span class="selector-class">.yaml</span></span><br></pre></td></tr></table></figure><p>第三个步骤：直接执行剧本</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ansible-playbook</span> <span class="selector-tag">rsync_service</span><span class="selector-class">.yaml</span></span><br></pre></td></tr></table></figure></li></ol></blockquote><h3 id="playbook-rsync自动部署"><a href="#playbook-rsync自动部署" class="headerlink" title="playbook-rsync自动部署"></a>playbook-rsync自动部署</h3><p>通过playbook设置多个定制好的tasks，可以执行一键自动化部署，但是还有许多重复的设置，这些重复的设置或多于的设置是没有必要的，所以我们可以简化这段自动部署代码（比如：可以使用变量、循环、判断、标签等功能进行优化）</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">$ pwd</span><br><span class="line">/etc/ansible/ansible-playbook</span><br><span class="line">$ cat rsync_service<span class="selector-class">.yaml</span></span><br><span class="line">- hosts: rsync_server</span><br><span class="line">  tasks:</span><br><span class="line">    - name: <span class="number">01</span>-install rsync service</span><br><span class="line">      yum: name=rsync state=installed</span><br><span class="line">    - name: <span class="number">02</span>-push config file</span><br><span class="line">      copy: src=/etc/ansible/rsync_dir/rsync_server/rsyncd.conf dest=/etc/</span><br><span class="line">    - name: <span class="number">03</span>-create user rsync</span><br><span class="line">      user: name=rsync create_home=no shell=/sbin/nologin</span><br><span class="line">    - name: <span class="number">04</span>-create dir backup</span><br><span class="line">      file: name=/backup state=directory owner=rsync group=rsync</span><br><span class="line">    - name: <span class="number">05</span>-create password file info</span><br><span class="line">      copy: content=rsync_backup:<span class="number">123456</span> dest=/etc/rsync.password mode=<span class="number">600</span></span><br><span class="line">    - name: <span class="number">06</span>-start rsync service</span><br><span class="line">      service: name=rsyncd state=started enabled=yes</span><br><span class="line"></span><br><span class="line">- hosts: rsync_client</span><br><span class="line">  tasks:</span><br><span class="line">    - name: <span class="number">01</span>-install rsync service</span><br><span class="line">      yum: name=rsync state=installed</span><br><span class="line">    - name: <span class="number">02</span>-create password file</span><br><span class="line">      copy: content=<span class="number">123456</span> dest=/etc/rsync.password mode=<span class="number">600</span></span><br><span class="line">    - name: <span class="number">03</span>-create test file</span><br><span class="line">      file: dest=/tmp/test.txt state=touch</span><br><span class="line">    - name: <span class="number">04</span>-check test</span><br><span class="line">      shell: rsync -az /tmp/test.txt rsync_backup@<span class="number">10.0</span>.<span class="number">0.212</span>::backup --password-file=/etc/rsync.password</span><br></pre></td></tr></table></figure><h2 id="编写剧本的重要功能介绍"><a href="#编写剧本的重要功能介绍" class="headerlink" title="编写剧本的重要功能介绍"></a>编写剧本的重要功能介绍</h2><h3 id="剧本中设置变量信息"><a href="#剧本中设置变量信息" class="headerlink" title="剧本中设置变量信息"></a>剧本中设置变量信息</h3><p><strong>方法一：直接在剧本文件编写</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vars:</span><br><span class="line">  wuwei01: data01</span><br><span class="line">  wuwei02: data02</span><br></pre></td></tr></table></figure><p><strong>方法二：在命令行进行制定</strong></p><blockquote><p>-e：简写，在命令行添加变量只是临时操作</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ansible-playbook --extra-vars=wuwei01=data01</span><br><span class="line">$ ansible-playbook Backup=/data -e Passfile=rsync.password rsync_variable.yaml</span><br></pre></td></tr></table></figure><p><strong>方法三：在主机清单文件编写</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[rsync_server]</span></span><br><span class="line">10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.211</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[rsync_server:vars]</span></span><br><span class="line">Backup=/backup</span><br><span class="line">Passfile=rsync.password</span><br></pre></td></tr></table></figure><p><strong>三种方式的优先级</strong></p><blockquote><ul><li><p>最优先：命令行变量设置</p></li><li><p>次优先：剧本编写的变量设置</p></li><li><p>最后：主机清单配置的变量设置</p></li></ul></blockquote><h3 id="剧本中设置注册信息"><a href="#剧本中设置注册信息" class="headerlink" title="剧本中设置注册信息"></a>剧本中设置注册信息</h3><p><strong>编辑剧本</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ vim rsync_service<span class="selector-class">.yaml</span></span><br><span class="line">- name: <span class="number">07</span>-check port info</span><br><span class="line">  shell: netstat -lntup|grep <span class="number">873</span>                 //端口信息</span><br><span class="line">  register: result                               //注册端口信息,名称可以自己起</span><br><span class="line">- name: display port info</span><br><span class="line">  debug: var=result.stdout verbosity=<span class="number">0</span>           //调用注册信息（stdout_lines以标准的方式输出）</span><br></pre></td></tr></table></figure><p><strong>操作显示结果</strong></p><blockquote><p>显示进程信息,便是服务已经正常启动</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">TASK</span> <span class="selector-attr">[display port info]</span> ***************************************************************************************************</span><br><span class="line">ok: [172.16.1.41] =&gt; &#123;</span><br><span class="line">&quot;msg&quot;: [</span><br><span class="line">    &quot;<span class="selector-tag">tcp</span>        0      0 0.0.0.0<span class="selector-pseudo">:873</span>             0.0.0.0:*               <span class="selector-tag">LISTEN</span>      24042/<span class="selector-tag">rsync</span>         &quot;, </span><br><span class="line">    &quot;<span class="selector-tag">tcp6</span>       0      0 :<span class="selector-pseudo">::873</span>                  :::*                    <span class="selector-tag">LISTEN</span>      24042/<span class="selector-tag">rsync</span>         &quot;</span><br><span class="line"> ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="剧本中设置判断信息"><a href="#剧本中设置判断信息" class="headerlink" title="剧本中设置判断信息"></a>剧本中设置判断信息</h3><p><strong>setup模块中显示被管理主机系统的详细信息</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible rsync_server -m setup</span><br></pre></td></tr></table></figure><p><strong>剧本信息</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$ pwd</span><br><span class="line">/etc/ansible/ansible-playbook</span><br><span class="line">$ cat rsync_service<span class="selector-class">.yaml</span></span><br><span class="line"></span><br><span class="line">- hosts: rsync_server</span><br><span class="line">  tasks:</span><br><span class="line">    - name: <span class="number">01</span>-install rsync service</span><br><span class="line">      yum: name=rsync state=installed</span><br><span class="line">.......................省略........................</span><br><span class="line"></span><br><span class="line">- hosts: rsync_client</span><br><span class="line">  tasks:</span><br><span class="line">.......................省略........................</span><br><span class="line">    - name: <span class="number">04</span>-check test</span><br><span class="line">      shell: rsync -az /tmp/test.txt rsync_backup@<span class="number">10.0</span>.<span class="number">0.212</span>::backup --password-file=/etc/rsync.password</span><br><span class="line">      when: (ansible_hostname == <span class="string">&quot;nfs&quot;</span>)    //判断，如果是nfs主机，才push(推送）文件</span><br><span class="line">    - name: <span class="number">05</span>-check test</span><br><span class="line">      shell: rsync -az /tmp/test.txt rsync_backup@<span class="number">10.0</span>.<span class="number">0.212</span>::web --password-file=/etc/rsync.password</span><br><span class="line">      when: (ansible_hostname == <span class="string">&quot;web01&quot;</span>)  //判断，如果是web01主机，才push（推送）文件</span><br></pre></td></tr></table></figure><blockquote><p>//获取内置变量方法：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible rsync_server -m setup -a &quot;filter=ansible_hostname&quot;</span><br></pre></td></tr></table></figure><p>//获取子信息方法：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible rsync_server -m setup -a &quot;filter=ansible_eth0[Ipv4]&quot;</span><br></pre></td></tr></table></figure></blockquote><p><strong>常见主机信息</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ansible_all_ipv4_address           <span class="comment">//仅显示Ipv4的信息</span></span><br><span class="line">ansible_derices<span class="comment">//仅显示磁盘设备信息</span></span><br><span class="line">ansible_distribution <span class="comment">//显示是什么系统.例：centos ,sues等.</span></span><br><span class="line">ansible_distribution_major_version<span class="comment">//显示是系统主版本</span></span><br><span class="line">ansible_distribution_version        <span class="comment">//仅显示系统版本</span></span><br><span class="line">ansible_machine<span class="comment">//显示系统类型.例：32位,还是64位</span></span><br><span class="line">ansible_eth0<span class="comment">//仅显示eth0的信息</span></span><br><span class="line">ansible_hostname<span class="comment">//仅显示主机名</span></span><br><span class="line">ansible_kernel<span class="comment">//仅显示内核版本</span></span><br><span class="line">ansible_lvm<span class="comment">//显示lvm相关信息</span></span><br><span class="line">ansible_memtotal_mb        <span class="comment">//显示系统总内存</span></span><br><span class="line">ansible_memfreee_mb<span class="comment">//显示可用系统内存</span></span><br><span class="line">ansible_memory_mb<span class="comment">//详细显示内存情况</span></span><br><span class="line">ansible_swaptotal_mb<span class="comment">//显示总的swap内存</span></span><br><span class="line">ansible_swapfree_mb<span class="comment">//显示swap内存大可用内存</span></span><br><span class="line">ansible_mounts<span class="comment">//显示系统磁盘挂载情况</span></span><br><span class="line">ansible_processor<span class="comment">//显示CPU个数（具体显示每个CPU的型号）</span></span><br><span class="line">ansible_processor_vcpus<span class="comment">//显示CPU个数（只显示总的个数）</span></span><br></pre></td></tr></table></figure><h3 id="剧本中设置循环信息"><a href="#剧本中设置循环信息" class="headerlink" title="剧本中设置循环信息"></a>剧本中设置循环信息</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ cat rsync_service_循环信息<span class="selector-class">.yaml</span></span><br><span class="line">- hosts: rsync_server</span><br><span class="line">  tasks:</span><br><span class="line">    - name: <span class="number">01</span>-install rsync service</span><br><span class="line">      yum: name=rsync state=installed</span><br><span class="line">    - name: <span class="number">02</span>-create user rsync</span><br><span class="line">      user: name=rsync create_home=no shell=/sbin/nologin</span><br><span class="line">    - name: <span class="number">03</span>-create dir backup</span><br><span class="line">      file: name=/backup state=directory owner=rsync group=rsync</span><br><span class="line">    - name: <span class="number">04</span>-start rsync service</span><br><span class="line">      service: name=rsyncd state=restarted enabled=yes</span><br><span class="line">    - name: <span class="number">05</span>-push file info to remote</span><br><span class="line">      copy: src=/etc/ansible/rsync_dir/rsync_server/&#123;&#123; item.src &#125;&#125; dest=&#123;&#123; item.dest &#125;&#125; mode=&#123;&#123; item.mode &#125;&#125;</span><br><span class="line">      with_items:</span><br><span class="line">        - &#123; src: <span class="string">&#x27;rsyncd.conf&#x27;</span>, dest: <span class="string">&#x27;/etc/&#x27;</span>, mode: <span class="string">&#x27;644&#x27;</span> &#125;</span><br><span class="line">        - &#123; src: <span class="string">&#x27;rsync.password&#x27;</span>, dest: <span class="string">&#x27;/etc/&#x27;</span>, mode: <span class="string">&#x27;600&#x27;</span>&#125;  </span><br></pre></td></tr></table></figure><blockquote><p><strong>#PS：通过循环只使用了一条copy即可</strong></p></blockquote><h3 id="剧本中设置忽略错误"><a href="#剧本中设置忽略错误" class="headerlink" title="剧本中设置忽略错误"></a>剧本中设置忽略错误</h3><p><strong>默认playbook会检查命令和模块的返回状态，如遇到错误的终端playbook执行，可以加入ignore_errors:yes忽略错误</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- name: <span class="number">03</span>-create user rsync</span><br><span class="line">  user: ame=rsync create_home=no shell=/sbin/nologin</span><br><span class="line">  ignore_errors: yes</span><br><span class="line"></span><br><span class="line"> TASK [<span class="number">03</span>-create user rsync] ************************************************************************************************</span><br><span class="line"> fatal: [<span class="number">172.16</span>.<span class="number">1.41</span>]: FAILED! =&gt; &#123;<span class="string">&quot;changed&quot;</span>: false, <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;Unsupported parameters for (user) module: ame Supported parameters include: append, authorization, comment, create_home, expires, force, generate_ssh_key, group, groups, hidden, home, local, login_class, move_home, name, non_unique, password, password_lock, profile, remove, role, seuser, shell, skeleton, ssh_key_bits, ssh_key_comment, ssh_key_file, ssh_key_passphrase, ssh_key_type, state, system, uid, update_password&quot;</span>&#125;</span><br><span class="line"> ...ignoring</span><br></pre></td></tr></table></figure><h3 id="剧本中设置标签功能"><a href="#剧本中设置标签功能" class="headerlink" title="剧本中设置标签功能"></a>剧本中设置标签功能</h3><blockquote><p>指定执行那个标签任务：ansible-playbook –tags=t2 test05.yaml</p><p>跳过指定标签任务：ansible-playbook –skip-tags=t2 test05.yaml</p></blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- name: <span class="number">05</span>-create password file info</span><br><span class="line">  copy: content=rsync_backup:<span class="number">123456</span> dest=/etc/rsync.password mode=<span class="number">600</span></span><br><span class="line">  tags: <span class="number">05in</span>fo</span><br></pre></td></tr></table></figure><h3 id="剧本功能设置触发功能"><a href="#剧本功能设置触发功能" class="headerlink" title="剧本功能设置触发功能"></a>剧本功能设置触发功能</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ cat rsync_service_触发<span class="selector-class">.yaml</span></span><br><span class="line">- hosts: rsync_server</span><br><span class="line">  tasks:</span><br><span class="line">..............省略.....................</span><br><span class="line">    - name: <span class="number">02</span>-push config file</span><br><span class="line">      copy: src=/etc/ansible/rsync_dir/rsync_server/rsyncd.conf dest=/etc/</span><br><span class="line">      notify: restart rsync server              //通知</span><br><span class="line">..............省略.....................</span><br><span class="line">  </span><br><span class="line">  handlers:</span><br><span class="line">    - name: restart rsync server               //触发</span><br><span class="line">      service: name=rsyncd state=restarted</span><br></pre></td></tr></table></figure><blockquote><p><strong>#PS：如果步骤2出现改动，则触发重启</strong></p></blockquote><h2 id="将多个剧本进行整合"><a href="#将多个剧本进行整合" class="headerlink" title="将多个剧本进行整合"></a>将多个剧本进行整合</h2><h3 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">include_tasks: f1.yml  </span><br><span class="line">     - hosts: all</span><br><span class="line">       remote_user: root</span><br><span class="line">       tasks:</span><br><span class="line">         - include_tasks: f1.yml</span><br><span class="line">         - include_tasks: f2.yml</span><br></pre></td></tr></table></figure><h3 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">include: f1.yml</span><br><span class="line">      - include：f1.yml</span><br><span class="line">      - include：f2.yml</span><br></pre></td></tr></table></figure><h3 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ pwd</span><br><span class="line">/etc/ansible/ansible-playbook</span><br><span class="line">$ cat main<span class="selector-class">.yml</span> </span><br><span class="line">  - import_playbook: base.yml     </span><br><span class="line">  - import_playbook: rsync.yml    </span><br><span class="line">  - import_playbook: nfs.yml      </span><br><span class="line">  - import_playbook: oxxx.yml</span><br><span class="line">  - import_playbook: rsync.yml</span><br><span class="line">  - import_playbook: nfs.yml</span><br></pre></td></tr></table></figure><h2 id="编写NFS服务剧本"><a href="#编写NFS服务剧本" class="headerlink" title="编写NFS服务剧本"></a>编写NFS服务剧本</h2><p><strong>1. 创建几个目录</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir -p nfs_dir/&#123;nfs_client,nfs_server&#125;</span><br><span class="line">$ tree nfs_dir/</span><br><span class="line">nfs_dir/</span><br><span class="line">├── nfs_client</span><br><span class="line">└── nfs_server</span><br></pre></td></tr></table></figure><p><strong>2. 编写hosts文件</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ awk &#x27;NR==28,NR==32&#x27; /etc/ansible/hosts </span><br><span class="line"><span class="selector-attr">[nfs_client]</span></span><br><span class="line">10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.213</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[nfs_server]</span></span><br><span class="line">10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.211</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[nfs:children]</span></span><br><span class="line">nfs_client</span><br><span class="line">nfs_server</span><br></pre></td></tr></table></figure><p><strong>3. 编写配置文件</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ pwd /etc/ansible/nfs_dir/nfs_server</span><br><span class="line">$ cat nfs_deploy<span class="selector-class">.yaml</span></span><br><span class="line">---</span><br><span class="line">- hosts: nfs:children                          //客户端和服务端都要操作的步骤</span><br><span class="line">  tasks:</span><br><span class="line">    - name: install nfs software package       //第一种yum写法（saltstark写法，另一个自动化工具）</span><br><span class="line">      yum:</span><br><span class="line">        name: [<span class="string">&#x27;nfs-utils&#x27;</span>,<span class="string">&#x27;rpcbind&#x27;</span>]</span><br><span class="line">        state: installed</span><br><span class="line">      </span><br><span class="line">  # - name: install nfs software package      //第二种yum写法（ansible写法）</span><br><span class="line">  #    yum: name=nfs-utils state=installed</span><br><span class="line">  #    yum: name=rpcbind state=installed</span><br></pre></td></tr></table></figure><p><strong>服务端</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">-</span> <span class="selector-tag">hosts</span>: <span class="selector-tag">nfs_server</span>                     </span><br><span class="line">  <span class="selector-tag">vars</span>:</span><br><span class="line">    <span class="selector-tag">Data_dir</span>: /<span class="selector-tag">data</span></span><br><span class="line">    <span class="selector-tag">Mount_info</span>: /<span class="selector-tag">data</span> 10.0.0.0/24 (<span class="selector-tag">rw</span>,<span class="selector-tag">sync</span>)</span><br><span class="line">  <span class="selector-tag">tasks</span>:</span><br><span class="line">    <span class="selector-tag">-</span> <span class="selector-tag">name</span>: 01<span class="selector-tag">-write</span> <span class="selector-tag">nfs</span> <span class="selector-tag">mount</span> <span class="selector-tag">file</span> <span class="selector-tag">info</span></span><br><span class="line">      copy: content=&#123;&#123; Mount_info &#125;&#125; dest=/etc/exports</span><br><span class="line">    <span class="selector-tag">-</span> <span class="selector-tag">name</span>: 02<span class="selector-tag">-push</span> <span class="selector-tag">file</span> <span class="selector-tag">to</span> <span class="selector-tag">nfs</span> <span class="selector-tag">server</span></span><br><span class="line">      copy: src=/etc/ansible/nfs_dir/nfs_server/exports dest=/etc/</span><br><span class="line">      <span class="selector-tag">notify</span>: <span class="selector-tag">restart</span> <span class="selector-tag">nfs</span> <span class="selector-tag">service</span></span><br><span class="line">    <span class="selector-tag">-</span> <span class="selector-tag">name</span>: 03<span class="selector-tag">-create</span> <span class="selector-tag">nfs</span> <span class="selector-tag">server</span> <span class="selector-tag">username</span></span><br><span class="line">      user: name=nfsnobody create_home=no shell=/sbin/nologin</span><br><span class="line">    <span class="selector-tag">-</span> <span class="selector-tag">name</span>: 04<span class="selector-tag">-create</span> <span class="selector-tag">data</span> <span class="selector-tag">directory</span></span><br><span class="line">      file: path=&#123;&#123; Data_dir &#125;&#125; state=directory owner=nfsnobody group=nfsnobody</span><br><span class="line">    <span class="selector-tag">-</span> <span class="selector-tag">name</span>: 05<span class="selector-tag">-boot</span> <span class="selector-tag">server</span></span><br><span class="line">      service: name=&#123;&#123; item &#125;&#125; state=started enabled=yes</span><br><span class="line">      <span class="selector-tag">with_items</span>:</span><br><span class="line">        <span class="selector-tag">-</span> <span class="selector-tag">rpcbind</span></span><br><span class="line">        <span class="selector-tag">-</span> <span class="selector-tag">nfs</span></span><br><span class="line">  <span class="selector-tag">handlers</span>:</span><br><span class="line">    <span class="selector-tag">-</span> <span class="selector-tag">name</span>: 06<span class="selector-tag">-trigger</span> <span class="selector-tag">restart</span> <span class="selector-tag">nfs</span> <span class="selector-tag">service</span></span><br><span class="line">      service: name=nfs state=restarted</span><br></pre></td></tr></table></figure><p><strong>客户端</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">-</span> <span class="selector-tag">hosts</span>: <span class="selector-tag">nfs_client</span>                         </span><br><span class="line">  <span class="selector-tag">vars</span>:</span><br><span class="line">    <span class="selector-tag">Data_dir</span>: /<span class="selector-tag">data</span></span><br><span class="line">  <span class="selector-tag">tasks</span>:</span><br><span class="line">    <span class="selector-tag">-</span> <span class="selector-tag">name</span>: 01<span class="selector-tag">-create</span> <span class="selector-tag">mount</span> <span class="selector-tag">directory</span></span><br><span class="line">      file: name=/www state=directory </span><br><span class="line">    <span class="selector-tag">-</span> <span class="selector-tag">name</span>: 02<span class="selector-tag">-mount</span> <span class="selector-tag">nfs</span> <span class="selector-tag">file</span> <span class="selector-tag">system</span></span><br><span class="line">      mount: src=10.0.0.211:&#123;&#123; Data_dir &#125;&#125; path=/www fstype=nfs state=mounted</span><br><span class="line">    <span class="selector-tag">-</span> <span class="selector-tag">name</span>: 03<span class="selector-tag">-check</span> <span class="selector-tag">mount</span> <span class="selector-tag">info</span></span><br><span class="line">      shell: df -h |grep /data</span><br><span class="line">      <span class="selector-tag">register</span>: <span class="selector-tag">result</span> </span><br><span class="line">    <span class="selector-tag">-</span> <span class="selector-tag">name</span>: 04<span class="selector-tag">-display</span> <span class="selector-tag">mount</span> <span class="selector-tag">info</span></span><br><span class="line">      debug: var=result.stdout verbosity=0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> ansible </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ansible </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ansible入门</title>
      <link href="2021/02/03/ansible%E5%85%A5%E9%97%A8/"/>
      <url>2021/02/03/ansible%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Ansible自动化"><a href="#Ansible自动化" class="headerlink" title="Ansible自动化"></a>Ansible自动化</h1><h2 id="Ansible介绍"><a href="#Ansible介绍" class="headerlink" title="Ansible介绍"></a><strong>Ansible介绍</strong></h2><p>Ansible是一款运维自动化工具，其主要功能是帮助运维实现IT工作的自动化，降低人为操作失误，提高业务自动化率、提升运维工作效率，常用于软件部署自动化、配置自动化、管理自动化、系统化系统任务、持续集成、零宕机平滑升级等，它有丰富的内置模块（如：<code>acl、command、shell、cron、yum、copy、file、user</code>等，多大5-6百个）和开放的API接口，同时任何遵循GPL协议的企业或个人都可以随意修改和发布自己的版本。</p><p><strong>Ansible的模块应用范围：</strong></p><blockquote><ul><li>系统层：支持的系统有Linux、Windows、AIX等，对应模块有acl、cron、pip、easy install、yum、authorized key等大量的内置模块</li><li>知名第三方平台支持：支持的平台有AWS、Azure、Cloudflare、OpenStack、Google、Linode、Digital、Ocean等，对应的模块有ec2、azure_rm_deployment、couldflare_dns、clc_aa_policy、glance_image、gc_storage、digital_ocean等</li><li>虚拟化：VMware、Docker、Cloudstack、LXC、OpenStack等，对应的模块有vmware_vmkernel、docker、cs_account、lxc_container、glance_image等</li><li>商业化硬件：F5、ASA、Citrix、EOS等，对应的模块有bigip_facts、asa_acl、netscaler、eos_command等</li><li>系统应用层：Apache、Zabbix、Rabbitmq、SVN、GIT等，对应的模块有apache2_module、zabbix_groupreabbimq_binding、subversion、git等</li></ul></blockquote><h2 id="Ansible是如何工作的"><a href="#Ansible是如何工作的" class="headerlink" title="Ansible是如何工作的"></a><strong>Ansible是如何工作的</strong></h2><p>Ansible没有客户端，因此底层通信依赖于系统软件，Linux系统下基本OpenSSH通信，window系统下基于PowerShell，管理端必须是Linux系统，管理者认证通过在管理节点通过Ansible工具调用各应用模块将指令推送至被管理端执行，并在执行完毕后自动删除产生的临时文件。</p><p><strong>根据Ansible使用过程中不同角色，其分为：</strong></p><blockquote><ul><li>使用者</li><li>Ansible工具集</li><li>作用对象</li></ul></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20201212151925936.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20201212155517979.png"></p><h3 id="使用者"><a href="#使用者" class="headerlink" title="使用者"></a>使用者</h3><blockquote><ul><li>第一种方法：CMDB（Configuretion Management Database，配置管理数据库），CMDB存储和管理者企业IT架构中的各项配置信息，是构建ITIL项目的核心工具，可以组合CMDB和Ansible，通过CMDB直接下发指令调用Ansible工具集完成相应的工作</li><li>第二种方法：PUBLIC/PRIVATE方式，Ansible除了丰富的内置模块外，同时提供丰富的API语言接口，如PHP、Python、Perl等多种语言，基于PUBLIC（公有云）/PRIVATE（私有云，Ansible以API调用的方式运行）</li><li>第三种方法：运维人员直接使用Ad-Hoc临时命令集调用Ansible工具集来完整任务执行</li><li>第四种方法：运维人员预先编写好的Ansible Playbook，通过执行Playbook中预先编排好的任务集按序完成任务执行</li></ul></blockquote><h3 id="Ansible工具集"><a href="#Ansible工具集" class="headerlink" title="Ansible工具集"></a>Ansible工具集</h3><p>Ansible命令是Ansible的核心工具，Ansible命令并非自身完整所有的功能集，其只是Ansible执行任务的调用入口，所有命令通过工具集来最终完整。如：上图绿色框框中的内容</p><blockquote><ul><li>Ansible Playbooks：任务剧本，编排定义Ansible任务集的配置我呢间，由Ansible顺序依次执行，通常是JSON格式的YML文件</li><li>INVENTORY：Ansible管理主机的清单</li><li>MODULES：Ansible执行的功能模块，多数为内置的核心模块，也可自定义</li><li>PLUGINS：模块功能的补充，如连接类型插件，循环插件、变量插件、过滤插件等</li><li>API：供第三方程序调用的应用程序编程接口</li></ul><p><strong>Ansible：组合INVENTORY、API、MODULES、PLUGINS，其为核心执行工具</strong></p></blockquote><h3 id="作用对象"><a href="#作用对象" class="headerlink" title="作用对象"></a>作用对象</h3><p>Ansible的作用对象，不仅仅是Linux和非Linux操作系统的主机，同样也可以作用于各类公有云/私有云，商业和非商业设备的网络设施</p><h3 id="Ansible执行任务，组件相互调用关系图"><a href="#Ansible执行任务，组件相互调用关系图" class="headerlink" title="Ansible执行任务，组件相互调用关系图"></a>Ansible执行任务，组件相互调用关系图</h3><p>使用Ansible或Ansible-playbook时，在灌流单输入Ansible的Ad-Hoc命令激活Playbook后，Ansible会遵循预先编排的规则将Playbook逐条拆解为Play，再将<code>Play</code>组成Ansible可识别的任务<code>Task</code>，随后调用任务涉及的所有模块<code>Module</code>和插件<code>Plugin</code>，根据<code>Inventory</code>中定义的主机列表通过SSH将任务集以临时文件或命令的形式传输到远程客户端执行并返回执行结果，如果是临时文件则执行完毕后自动删除</p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20201212154930371.png"></p><h2 id="Ansible通信"><a href="#Ansible通信" class="headerlink" title="Ansible通信"></a><strong>Ansible通信</strong></h2><p>Ansible特点就是无需任务<code>Daemon</code>维护进程即可显示相互间的通信，且通信方式是基于业内统一标准的安全可靠的SSh安全连接。同时因为SSH是每台Linux主机系统必装的软件，所以Ansible无需再远程主机端安装任务额外的进程。实现<code>Agentless</code>（无客户端），以及稳定、快速、安全的SSH连接是Ansible通信negligible的核心</p><h3 id="Ansible-SSH工作机制"><a href="#Ansible-SSH工作机制" class="headerlink" title="Ansible SSH工作机制"></a>Ansible SSH工作机制</h3><p>Ansible执行命令时，通过其底层传输连接模块，将一个或数个文件，或者定义个Play或Command命令传输到远程服务器<code>/tmp</code>目录的临时文件，并在远程执行这些Play/Command命令，然后又删除这些临时文件，同时回传整体命令执行结果。</p><p><strong>Ansible特点总结：</strong></p><blockquote><ul><li>无客户端，只需要安装SSH、Python即可</li><li>基于OpenSSH通信，底层基于SSH协议</li><li>支持密码和SSH认证，可通过密码认证和密钥对认证</li><li>支持Windows，但仅支持被客户端，服务端必须是Linux系统</li><li>通过YAML语法，基于管理，API简单明了</li><li>能快速入手，设置简单，无需任务第三方软件</li><li>丰富的内置模块，满足日常功能所需，配置管理、应用部署、任务编排等功能集于一身</li><li>没有额外软件包消耗系统性能（高效）</li><li>基于OpenSSH，保证通信的安全可靠性</li></ul></blockquote><h3 id="基于ssh密钥对实现免交互连接"><a href="#基于ssh密钥对实现免交互连接" class="headerlink" title="基于ssh密钥对实现免交互连接"></a>基于ssh密钥对实现免交互连接</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t 秘钥对（dsa|rsa）                            //服务端</span><br><span class="line">$ ssh-copy-id -i /root/.ssh/id_dsa.pub root@10.0.0.211     //发送被动端</span><br></pre></td></tr></table></figure><h2 id="Ansible的安装部署"><a href="#Ansible的安装部署" class="headerlink" title="Ansible的安装部署"></a><strong>Ansible的安装部署</strong></h2><p>Ansible被RedHAT红帽官方收购后，其安装源被收录在<code>epel</code>中，如果已经安装<code>epel</code>可直接使用yum或apt安装，也可以通过pip和easy_install的Python第三方包管理器安装Ansible</p><h3 id="pip方式"><a href="#pip方式" class="headerlink" title="pip方式"></a>pip方式</h3><p>Ansible底层基于Python编写，通过pip方式安装Ansible：</p><blockquote><p>//安装python-pip3程序包及Python-devel</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install python-pip python-devel -y</span><br></pre></td></tr></table></figure><p>//安装前确保服务器的gcc、glibc开发环境均已安装，系统几乎所有的软件包编译环境均基于gcc。如果不确认可先执行如下命令：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install gcc glibc-devel zlib-devel rpm-build openssl-devel -y</span><br></pre></td></tr></table></figure><p>//升级本地pip至最新版本</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install --upgrade pip</span><br></pre></td></tr></table></figure><p>//安装Ansible服务</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install ansible --upgrade</span><br></pre></td></tr></table></figure><p>//执行命令ansible –version，查看安装的版本</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ ansible --version</span><br><span class="line">ansible 2<span class="selector-class">.10</span><span class="selector-class">.3</span></span><br><span class="line">  config file = None</span><br><span class="line">  configured module search path = [&#x27;/root/.ansible/plugins/modules&#x27;, &#x27;/usr/share/ansible/plugins/modules&#x27;]</span><br><span class="line">  ansible python module location = /usr/local/lib/python3.6/site-packages/ansible</span><br><span class="line">  executable location = /usr/local/bin/ansible</span><br><span class="line">  python version = 3.6.8 (default, Nov 16 2020, 16:55:22) [GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]</span><br></pre></td></tr></table></figure></blockquote><h3 id="yum方式"><a href="#yum方式" class="headerlink" title="yum方式"></a>yum方式</h3><p>Yum（Yellow dog Updater，Modified）是一个在Fedora和RedHAT以及CentOS中的Shell前端软件包管理器。基于RPM包管理，能够从指定的服务器自动下载RPM包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，无需繁琐地下载依赖。</p><blockquote><p>//事先要安装epel源，才能找到并安装Ansible（Centos7）</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br></pre></td></tr></table></figure><p>//安装Ansible</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y ansible</span><br></pre></td></tr></table></figure></blockquote><h3 id="Apt-get"><a href="#Apt-get" class="headerlink" title="Apt-get"></a>Apt-get</h3><p>全程是Advand Package Tool，是一款适合于UNIX和Linux系统的应用程序管理器，适用于Ubuntu、Debian等deb包管理式的操作系统，主要用于自动地从互联网的软件仓库中搜索、安装、升级、卸载软件或操作系统。</p><blockquote><p>//添加Ansible源</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-add-repository -y ppa:ansible/ansible</span><br></pre></td></tr></table></figure><p>//升级库我呢见</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get update</span><br></pre></td></tr></table></figure><p>//安装Ansible</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install -y ansible</span><br></pre></td></tr></table></figure></blockquote><h3 id="源码安装方式"><a href="#源码安装方式" class="headerlink" title="源码安装方式"></a>源码安装方式</h3><p>Pip、Yum、Apt-get都是二进制的安装方式，源码安装比较难，但学会源码安装软件方式是一项非常重要的技能。</p><blockquote><p>//安装git客户端，一般服务器都会自带git，如果没有则安装</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y git</span><br></pre></td></tr></table></figure><p>//使用git将拉去指定的Ansible版本至本地当前目录</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/ansible/ansible.git</span><br></pre></td></tr></table></figure><p>//切换至程序包目录</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ./ansible</span><br></pre></td></tr></table></figure><p>//执行env-setup脚本，安装Ansible软件包</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ./hacking/env-setup</span><br></pre></td></tr></table></figure></blockquote><h2 id="Ansible元素介绍"><a href="#Ansible元素介绍" class="headerlink" title="Ansible元素介绍"></a><strong>Ansible元素介绍</strong></h2><h3 id="Ansible目录结构介绍"><a href="#Ansible目录结构介绍" class="headerlink" title="Ansible目录结构介绍"></a>Ansible目录结构介绍</h3><p>Ansible是开源工具，整个开发过程或二次开发均遵循GPL协议，所以所有源码均可见。</p><blockquote><p>//查看ansible配置文件目录</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -ql ansible|egrep -v &quot;/usr/share|/usr/lib|/usr/bin&quot; </span><br><span class="line">/etc/ansible             //配置文件目录</span><br><span class="line">/etc/ansible/ansible.cfg //ansible服务配置文件</span><br><span class="line">/etc/ansible/hosts       //主机清单文件，定义可以管理的主机信息</span><br><span class="line">/etc/ansible/roles       //角色目录</span><br></pre></td></tr></table></figure><p>//其他目录文件</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin           //执行文件目录</span><br><span class="line">/usr/lib/python2.7/site-packages/ansible   //lib库依赖目录</span><br><span class="line">/usr/share/doc/ansible-xx/                 //help文档目录</span><br><span class="line">/usr/share/man/man1                        //man文档目录</span><br></pre></td></tr></table></figure></blockquote><blockquote><ul><li>配置文件目录/etc/ansible/，主要功能为：Inventory主机信息配置、Ansible工具集配置等。所有Ansible的配置均存放在该目录下。</li><li>执行文件目录/usr/bin/，主要功能为：Ansiblle系列命令默认存放目录。Ansible所有的可执行文件存放在该目录下</li><li>在/usr/lib/python.xxx/site-packages/下，该目录时系统当前默认的Python路径，因为ansible是基于Python编写的，所有ansible的所有lib库文件和模块文件也均存放于该目录下</li></ul></blockquote><h3 id="Ansible配置文件解析"><a href="#Ansible配置文件解析" class="headerlink" title="Ansible配置文件解析"></a>Ansible配置文件解析</h3><p>Inventory用于定义Ansible的主机（hosts）列表配置，Ansible的自身配置文件只有一个，即ansible.cfg，ansible.cfg配置文件可以存在多个地方。</p><p><strong>Ansible读取配置文件的顺序依次当前命令执行目录——&gt;用户家目录下的.ansible.cfg——&gt;/etc/ansible.cfg，先找到哪个就使用哪个的配置</strong></p><blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ tree /etc/ansible/</span><br><span class="line">/etc/ansible/</span><br><span class="line">├── ansible<span class="selector-class">.cfg</span></span><br><span class="line">├── ansible-playbook</span><br><span class="line">│   └── rsync_service<span class="selector-class">.yaml</span></span><br><span class="line">├── hosts</span><br><span class="line">└── roles</span><br></pre></td></tr></table></figure></blockquote><p><strong>查看/etc/ansible/ansible.cfg文件内容</strong></p><blockquote><p>//[default]，日常可能用到的配置，多数保持默认即可</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[defaults]</span></span><br><span class="line"></span><br><span class="line">#inventory      = /etc/ansible/hosts                    //定义Inventory</span><br><span class="line">#library        = /usr/share/my_modules/                //自定义lib库存放目录</span><br><span class="line">#module_utils   = /usr/share/my_module_utils/</span><br><span class="line">#remote_tmp     = ~/.ansible/tmp                        //远程临时文件本地存放目录</span><br><span class="line">#local_tmp      = ~/.ansible/tmp                        //本地临时文件本地存放目录</span><br><span class="line">#plugin_filters_cfg = /etc/ansible/plugin_filters.yml   //定义插件的yml文件 </span><br><span class="line">#forks          = 5                                     //默认开启的并发数</span><br><span class="line">#poll_interval  = 15                                    //默认轮询时间间隔</span><br><span class="line">#sudo_user      = root                                  //默认sudo用户</span><br><span class="line">#ask_sudo_pass = True                                   //是否需要sudo密码</span><br><span class="line">#ask_pass      = True                                   //是否需要密码</span><br><span class="line">#transport      = smart                                 //传输端口类型                          </span><br><span class="line">#remote_port    = 22                                    //默认远程的端口                       </span><br><span class="line">#module_set_locale = False                              //首次连接是否需要检查key认证，建议设为FALSE</span><br><span class="line">#timeout = 10</span><br><span class="line">#remote_user = root                                     //默认远程用户</span><br><span class="line">#log_path = /var/log/ansible.log                        //存放日志的路径</span><br><span class="line">#module_name = command                                  //默认执行的模块</span><br><span class="line">#action_plugins     = /usr/share/ansible/plugins/action  //action插件的存放目录</span><br><span class="line">#become_plugins     = /usr/share/ansible/plugins/become  //become插件的存放目录</span><br><span class="line">#cache_plugins      = /usr/share/ansible/plugins/cache   //下列插件都是类似</span><br><span class="line">#callback_plugins   = /usr/share/ansible/plugins/callback</span><br><span class="line">#connection_plugins = /usr/share/ansible/plugins/connection</span><br><span class="line">#lookup_plugins     = /usr/share/ansible/plugins/lookup</span><br><span class="line">#inventory_plugins  = /usr/share/ansible/plugins/inventory</span><br><span class="line">#vars_plugins       = /usr/share/ansible/plugins/vars</span><br><span class="line">#filter_plugins     = /usr/share/ansible/plugins/filter</span><br><span class="line">#test_plugins       = /usr/share/ansible/plugins/test</span><br><span class="line">#terminal_plugins   = /usr/share/ansible/plugins/terminal</span><br><span class="line">#strategy_plugins   = /usr/share/ansible/plugins/strategy</span><br><span class="line">#fact_caching = memory                                         //getfact缓存的主机信息存放方式</span><br><span class="line">#fact_caching_connection=/tmp                                  //getfact缓存的主机信息存放目录</span><br><span class="line">#retry_files_enabled = False</span><br><span class="line">#retry_files_save_path = ~/.ansible-retry                      //错误重启文件存放目录         </span><br></pre></td></tr></table></figure><p>//[privilege_escalation]，安全角度考虑，部分公司不希望直接以root的高级管理员权限直接部署应用，往往会开放普通用户权限并给予sudo的权限，该部分配置主要针对sudo用户提权的配置</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#become=True                   //是否sudo</span><br><span class="line">#become_method=sudo            //sudo方式</span><br><span class="line">#become_user=root              //sudo后变成root用户</span><br><span class="line">#become_ask_pass=False         //sudo后是否验证密码</span><br></pre></td></tr></table></figure><p>//[paramiko_connection]，不常用，了解即可</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#record_host_keys=False        //不记录新主机的key以提升效率</span><br><span class="line">#pty=False                     //禁用sudo功能</span><br></pre></td></tr></table></figure><p>//[ssh_connection]，默认使用SSH协议连接对端主机，多数保持默认即可</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#pipelining = False            //管道加速功能，需配置requiretty使用方可生效</span><br></pre></td></tr></table></figure><p>//[accelerate]，连接加速相关配置。多数保持默认即可</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#accelerate_port = 5099               //加速连接端口</span><br><span class="line">#accelerate_timeout = 30              //命令执行超时时间，单位秒</span><br><span class="line">#accelerate_connect_timeout = 5.0     //连接超时时间，单位秒</span><br><span class="line">#accelerate_daemon_timeout = 30       //上一个活动连接的时间，单位分钟</span><br><span class="line">#accelerate_multi_key = yes           </span><br></pre></td></tr></table></figure><p>//[selinux]，保持默认配置即可</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#libvirt_lxc_noseclabel = yes</span><br></pre></td></tr></table></figure><p>//[colors]，对于输出结果的颜色，保持默认即可</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#highlight = white</span><br><span class="line">#verbose = blue               //蓝色，显示ansible命令的执行过程 </span><br><span class="line">#warn = bright purple         //亮紫色，显示忠告信息  </span><br><span class="line">#error = red                  //红色，报错信息  </span><br><span class="line">#debug = dark gray            //深灰色，调试</span><br><span class="line">#deprecate = purple           //紫色，不在使用</span><br><span class="line">#skip = cyan                  //青色，跳过</span><br><span class="line">#unreachable = red            //红色，不可达</span><br><span class="line">#ok = green                   //绿色，查看主机信息/对主机未作改动</span><br><span class="line">#changed = yellow             //黄色，对主机信息做了改变   </span><br><span class="line">#diff_add = green             //绿色，对比之后添加</span><br><span class="line">#diff_remove = red            //红色，对比之后移除</span><br><span class="line">#diff_lines = cyan            //青色，对比每一行</span><br></pre></td></tr></table></figure></blockquote><h2 id="Ansible系列命令用法详解"><a href="#Ansible系列命令用法详解" class="headerlink" title="Ansible系列命令用法详解"></a><strong>Ansible系列命令用法详解</strong></h2><h3 id="ansible-galaxy"><a href="#ansible-galaxy" class="headerlink" title="ansible-galaxy"></a>ansible-galaxy</h3><p>通过ansible-galaxy命令，可以根据下载量和关注量等信息，查找和安装优秀的Roles。Roles是Ansible非常重要的一项功能。</p><p><strong>ansible-galaxy命令使用格式如下：</strong></p><blockquote><p>ansible-galaxy [-h] [–version] [-v] TYPE</p></blockquote><p><strong>ansible-galaxy命令分三大部分：</strong></p><blockquote><p>init：初始化本地的Roles配置，以备上传Roles至galaxy</p><ul><li>info：列表指定Role的详细信息</li><li>install：下载并安装galaxy指定的Roles到本地</li><li>list：列出本地已下载的Roles</li><li>remove：删除本地已下载的Roles</li></ul></blockquote><p><strong>输入<a href="https://galaxy.ansible.com/%E7%BD%91%E5%9D%80%EF%BC%8C%E9%80%89%E6%8B%A9web%E7%9A%84Roles%EF%BC%8C%E9%80%9A%E8%BF%87ansible-galaxy%E5%91%BD%E4%BB%A4%E4%B8%8B%E8%BD%BD%E5%B7%B2%E7%BB%8F%E6%89%93%E5%8C%85%E5%A5%BD%E7%9A%84nginx%EF%BC%88Roles%EF%BC%89">https://galaxy.ansible.com/网址，选择web的Roles，通过ansible-galaxy命令下载已经打包好的nginx（Roles）</a></strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20201213211107478.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20201213211214732.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20201213211333420.png"></p><blockquote><p>//下载</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ ansible-galaxy install geerlingguy<span class="selector-class">.nginx</span></span><br><span class="line">- downloading role &#x27;nginx&#x27;, owned by geerlingguy</span><br><span class="line">- downloading role from https://github.com/geerlingguy/ansible-role-nginx/archive/<span class="number">2.8</span>.<span class="number">0</span>.tar.gz</span><br><span class="line">- extracting geerlingguy.nginx to /root/.ansible/roles/geerlingguy.nginx</span><br><span class="line">- geerlingguy.nginx (<span class="number">2.8</span>.<span class="number">0</span>) was installed successfully</span><br></pre></td></tr></table></figure><p>//默认Roles存放在</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/root/.ansible/roles/geerlingguy.nginx</span><br></pre></td></tr></table></figure><p>//配置roles执行文件安装部署nginx</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cd /root/.ansible/roles</span><br><span class="line">$ vim nginx_site<span class="selector-class">.yml</span></span><br><span class="line">- hosts: rsync_server</span><br><span class="line">  roles:</span><br><span class="line">    - &#123; role: geerlingguy.nginx &#125;</span><br></pre></td></tr></table></figure><p>//检查并执行roles文件</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ansible-playbook --syntax-check nginx_site<span class="selector-class">.yml</span>    <span class="comment">//检查语法</span></span><br><span class="line">$ ansible-playbook  nginx_site<span class="selector-class">.yml</span> </span><br></pre></td></tr></table></figure></blockquote><h3 id="ansible-doc"><a href="#ansible-doc" class="headerlink" title="ansible-doc"></a>ansible-doc</h3><p>ansible-doc是Ansible 模块文档说明，针对每个模块都有详细的用法说明及应用案例介绍，功能和Linux系统man命令类似。</p><p><strong>该命令使用方式如下：</strong></p><blockquote><p>ansible-doc [-h] [–version] [-v] [-M MODULE_PATH]</p></blockquote><p><strong>具体示例如下：</strong></p><blockquote><p>//列出支持的模块</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible-doc -l</span><br></pre></td></tr></table></figure><p>//模块功能说明</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible-doc ping</span><br></pre></td></tr></table></figure></blockquote><h3 id="ansible-vault"><a href="#ansible-vault" class="headerlink" title="ansible-vault"></a>ansible-vault</h3><p>ansible-vault主要用于配置文件加密，如编写的Playbook配置文件中包含敏感信息，不希望其他人随意查看，ansible-vault可加密/解密这个配置文件</p><p><strong>具体使用方法：</strong></p><blockquote><p>ansible-vault [-h] [–version] [-v]<br>              {create,decrypt,edit,view,encrypt,encrypt_string,rekey}</p></blockquote><p><strong>具体示例如下：</strong></p><blockquote><p>//设置如下密码，加密a.yml文件</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible-vault encrypt anaconda-ks<span class="selector-class">.cfg</span> </span><br></pre></td></tr></table></figure><p>//会有以下输入加密密码提示</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">New Vault password: </span><br><span class="line">Confirm New Vault password: </span><br><span class="line">Encryption successful</span><br></pre></td></tr></table></figure><p>//这时，再打开a.yml文件后会发现该文件已经加密，只有通过命令才能进行解密</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible-vault decrypt anaconda-ks<span class="selector-class">.cfg</span> </span><br></pre></td></tr></table></figure></blockquote><h3 id="ansible-console"><a href="#ansible-console" class="headerlink" title="ansible-console"></a>ansible-console</h3><p>ansible-console是Ansible为用户提供的一款交换式工具，用户可以在ansible-console虚拟出来的终端上像Shell一样使用Ansible内置的各种命令</p><p><strong>输入ansible-console的显示：</strong></p><blockquote><p>root@all (3)[f:5]$ 是提示符，该提示符表示“当前的使用用户@当前所在的Inventory中定义的组，默认是all分组（Inventory中all组所有主机的数量）[forks:线程数]$”</p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/image-20201213213914724.png"></p><p><strong>使用cd命令可切换至指定Hosts或分组，同时提示符也会相应改变，显示如下：</strong></p><blockquote><p>cd切换至rsync-server分组后，在输入命令cat /etc/hosts命令，就能使用shell方式控制分组的主机了。</p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20201213214238077.png"></p><p><strong>如果需要启动rsyncd服务，可以输入该命令：</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ root@rsync_server (1)[f:5]$ service name=rsyncd state=started</span><br></pre></td></tr></table></figure><h2 id="定义主机和组"><a href="#定义主机和组" class="headerlink" title="定义主机和组"></a><strong>定义主机和组</strong></h2><p>Inventory配置文件遵循INI文件风格，中括号中的字符为组名，其支持将同一个主机他同时归并到多个不同的组中，分组的功能能大大提供便利，另外如果主机使用了非默认的SSH端口，可以在主机名之后使用冒号端口号来表明</p><h3 id="简单分组配置主机信息"><a href="#简单分组配置主机信息" class="headerlink" title="简单分组配置主机信息"></a>简单分组配置主机信息</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[web]</span></span><br><span class="line">172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.7</span></span><br><span class="line">172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.8</span></span><br><span class="line">172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.9</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[data]</span></span><br><span class="line">172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.31</span></span><br><span class="line">172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.41</span></span><br></pre></td></tr></table></figure><p><strong>操作过程</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ ansible web -a &quot;hostname&quot;</span><br><span class="line">172.16.1.7 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line"><span class="selector-tag">web01</span></span><br><span class="line"></span><br><span class="line">$ ansible data -a &quot;hostname&quot;</span><br><span class="line">172.16.1.31 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line"><span class="selector-tag">nfs01</span></span><br></pre></td></tr></table></figure><h3 id="主机名符号匹配配置"><a href="#主机名符号匹配配置" class="headerlink" title="主机名符号匹配配置"></a>主机名符号匹配配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[web]</span>         </span><br><span class="line">172<span class="selector-class">.16</span><span class="selector-class">.1</span>.<span class="selector-attr">[7:9]</span>   <span class="comment">//以地址方式</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[web]</span></span><br><span class="line">web<span class="selector-attr">[01:03]</span>       <span class="comment">//以主机名方式</span></span><br></pre></td></tr></table></figure><p><strong>操作过程</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ ansible web01  -a &quot;hostname&quot;      </span><br><span class="line">web01 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line"><span class="selector-tag">web01</span></span><br><span class="line"></span><br><span class="line">$ ansible web  -a &quot;hostname&quot;</span><br><span class="line">web01 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line"><span class="selector-tag">web01</span></span><br></pre></td></tr></table></figure><h3 id="加上远程端口"><a href="#加上远程端口" class="headerlink" title="加上远程端口"></a>加上远程端口</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[web]</span></span><br><span class="line"> 172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.7</span>:<span class="number">52113</span></span><br><span class="line"> web01:<span class="number">52113</span></span><br></pre></td></tr></table></figure><p><strong>操作过程</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ ansible web01  -a &quot;hostname&quot;</span><br><span class="line">web01 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line"><span class="selector-tag">web01</span></span><br><span class="line"></span><br><span class="line">$ ansible 172.16.1.7  -a &quot;hostname&quot;</span><br><span class="line">172.16.1.7 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line"><span class="selector-tag">web01</span></span><br><span class="line"></span><br><span class="line">$ ansible web  -a &quot;hostname&quot;</span><br><span class="line">172.16.1.7 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line"><span class="selector-tag">web01</span></span><br><span class="line">web01 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line"><span class="selector-tag">web01</span></span><br></pre></td></tr></table></figure><h3 id="主机使用特殊的变量"><a href="#主机使用特殊的变量" class="headerlink" title="主机使用特殊的变量"></a>主机使用特殊的变量</h3><p><strong>这种方式不需要使用ssh密钥，可以在主机清单中使用参数指定</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[web]</span></span><br><span class="line">172.16.1.7 ansible_ssh_port=52113 ansible_ssh_user=root ansible_ssh_pass=123456</span><br><span class="line"></span><br><span class="line">//增添了主机名</span><br><span class="line"><span class="selector-attr">[web]</span></span><br><span class="line">web01 ansible_ssh_host=172.16.1.7 ansible_ssh_port=52113 ansible_ssh_user=root ansible_ssh_pass=123456</span><br></pre></td></tr></table></figure><p><strong>操作过程</strong></p><blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;$ ansible 172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.7</span>  -<span class="selector-tag">a</span> &quot;hostname&quot;</span><br><span class="line">172.16.1.7 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">web01</span><br><span class="line"></span><br><span class="line">$ ansible web -<span class="selector-tag">a</span> &quot;hostname&quot;</span><br><span class="line">web01 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">web01</span><br></pre></td></tr></table></figure></blockquote><h3 id="主机名嵌入配置"><a href="#主机名嵌入配置" class="headerlink" title="主机名嵌入配置"></a>主机名嵌入配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[rsync:children]</span>  <span class="comment">//包括服务端和客户端端</span></span><br><span class="line">rsync_server</span><br><span class="line">rsync_client</span><br><span class="line"> </span><br><span class="line"><span class="selector-attr">[rsync_client]</span>    <span class="comment">//客户端主机清单</span></span><br><span class="line"> 172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.31</span></span><br><span class="line"> 172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.7</span></span><br><span class="line"> <span class="selector-id">#172</span><span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.8</span></span><br><span class="line"> <span class="selector-id">#172</span><span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.9</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-attr">[rsync_server]</span>    <span class="comment">//服务端主机清单</span></span><br><span class="line"> 172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.41</span></span><br></pre></td></tr></table></figure><p><strong>操作过程</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ ansible rsync_server -a &quot;hostname&quot;</span><br><span class="line">172.16.1.41 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line"><span class="selector-tag">backup</span></span><br><span class="line"></span><br><span class="line">$ ansible rsync_client -a &quot;hostname&quot;</span><br><span class="line">172.16.1.7 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line"><span class="selector-tag">web01</span></span><br><span class="line">172.16.1.31 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line"><span class="selector-tag">nfs01</span></span><br><span class="line"></span><br><span class="line">$ ansible rsync:children -a &quot;hostname&quot;</span><br><span class="line"><span class="selector-attr">[WARNING]</span>: <span class="selector-tag">Could</span> <span class="selector-tag">not</span> <span class="selector-tag">match</span> <span class="selector-tag">supplied</span> <span class="selector-tag">host</span> <span class="selector-tag">pattern</span>, <span class="selector-tag">ignoring</span>: <span class="selector-tag">children</span></span><br><span class="line">172.16.1.7 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line"><span class="selector-tag">web01</span></span><br><span class="line">172.16.1.41 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line"><span class="selector-tag">backup</span></span><br><span class="line">172.16.1.31 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line"><span class="selector-tag">nfs01</span></span><br></pre></td></tr></table></figure><blockquote><p>//嵌入式变量信息 </p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[web:vars]</span>   </span><br><span class="line"> ansible_ssh_host=172.16.1.7 </span><br><span class="line"> ansible_ssh_port=22</span><br><span class="line">ansible_ssh_user=root </span><br><span class="line">ansible_ssh_pass=123456</span><br><span class="line"> </span><br><span class="line"> <span class="selector-attr">[web]</span></span><br><span class="line"> web01</span><br></pre></td></tr></table></figure></blockquote><h3 id="Ansible与正则"><a href="#Ansible与正则" class="headerlink" title="Ansible与正则"></a>Ansible与正则</h3><p>正则表达式（Patterns）是各类高级语言的必定支持的方法一直，Ansible也不例外。其Patterns功能等同于正则表达式，语法使用也和正则类同，大大的提高了Ansible的灵活性。同时也支持Ansible-playbook</p><p><strong>1. ALL（全量）匹配</strong></p><blockquote><p>//匹配所有主机，all或*号功能系统</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ansible all -m ping</span><br><span class="line">$ ansible &quot;*&quot; -m ping</span><br></pre></td></tr></table></figure></blockquote><p><strong>2. ‘:’逻辑或（or）匹配</strong></p><blockquote><p>//使用方法</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible &quot;rsync_server:rsync_client<span class="string">&quot; -m ping</span></span><br></pre></td></tr></table></figure></blockquote><p><strong>3. 逻辑非(!)匹配</strong></p><blockquote><p>//所有在rsync_server组但不在nfs_clien组的主机</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible &quot;rsync_server!nfs_client&quot; -m ping</span><br></pre></td></tr></table></figure></blockquote><p><strong>4. 逻辑与（&amp;）匹配</strong></p><blockquote><p>//rsync_server组合nfs_client组中同时存在的主机</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible &quot;rsync_server:&amp;nfs_client<span class="string">&quot; -m ping</span></span><br></pre></td></tr></table></figure></blockquote><p><strong>5. 多条件组合</strong></p><blockquote><p>//rsync_server和nginx两个组中的所有主机，在dbserver组中存在，且在nfs_client组中不存在</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible &quot;rsync_server:ngxin:&amp;dbserver:!nfs_client<span class="string">&quot;</span></span><br></pre></td></tr></table></figure></blockquote><p><strong>6. 模糊匹配</strong></p><blockquote><p>//所以.myboke.com结尾的主机均符合</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*<span class="selector-class">.myboke</span><span class="selector-class">.com</span></span><br></pre></td></tr></table></figure></blockquote><p><strong>7. 与切割</strong></p><blockquote><p>//通过[0:1]即可获取数值1</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[webserver]</span></span><br><span class="line">webpong</span><br><span class="line">webping</span><br><span class="line">webclient</span><br></pre></td></tr></table></figure><p>//通过截取数值下标可以获取对应变量值</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">webservers[0]   # == webpong</span><br><span class="line">webservers[0:1] # == webservers[0],webservers[1]</span><br><span class="line">webservers[-1]  # == webclient</span><br><span class="line">webservers[1:]  # == webpong,webping</span><br></pre></td></tr></table></figure></blockquote><p><strong>8. 正则匹配</strong></p><blockquote><p>//“~”开始表示正则匹配</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~(web|db).*\.example\.com</span><br><span class="line"><span class="comment">//匹配web或db后的所有字符.example.com的域名</span></span><br></pre></td></tr></table></figure><p>//检测beta.example.com、web.example.com、gree.example.com、beta.example.org、web.example.org、green.example.org的存活</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible &quot;~(beat|web|greem)\.example.(com|org)&quot; -m ping</span><br></pre></td></tr></table></figure><p>//检测Inventory中所有以192.168开头的服务器存活信息</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible ~192\<span class="selector-class">.168</span>\.<span class="selector-attr">[0-9]</span>\&#123;\2&#125;.<span class="selector-attr">[0-9]</span>\&#123;2,&#125; -m ping</span><br></pre></td></tr></table></figure></blockquote><h2 id="Ad-Hoc"><a href="#Ad-Hoc" class="headerlink" title="Ad-Hoc"></a>Ad-Hoc</h2><p>Ad-Hoc，是ansible的一种“临时命令”，英文中作为形容词有“特别的，临时”的含义。Ad-Hoc只是官方对Ansible命令的一种称谓。</p><p><strong>其命令用法如下：</strong></p><blockquote><p>ansible [-h] [–version] [-v] [-b] [–become-method BECOME_METHOD]</p></blockquote><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-v,–verbose</td><td>输出更详细的执行过程信息，-vvv可得到执行过程所有信息</td></tr><tr><td>-i PATH，–Inventory=PATH</td><td>指定Inventory信息，默认/etc/ansible/hosts</td></tr><tr><td>-f NUM，–forks=NUM</td><td>并发线程数，默认5个线程</td></tr><tr><td>–private-key=PRIVATE_KEY_FILE</td><td>指定密钥文件</td></tr><tr><td>-m MODULE_NAME, –module-name MODULE_NAME</td><td>指定执行使用的模块</td></tr><tr><td>–M MODULE_PATH, –module-path MODULE_PATH</td><td>指定模块存放路径，默认/usr/share/ansible</td></tr><tr><td>-a MODULE_ARGS，–args MODULE_ARGS</td><td>模块参数</td></tr><tr><td>-o, –one-line</td><td>标准输出至一行</td></tr><tr><td>-s，–sudo</td><td>相当于Linux系统下的sudo命令</td></tr><tr><td>-t TREE, –tree TREE</td><td>输出信息至Directory目录下，结果文件以远程主机命名</td></tr><tr><td>-T TIMEOUT, –timeout TIMEOUT</td><td>指定连接远程主机的最大超时，单位是秒</td></tr><tr><td>-B SECONDS, –background</td><td>后台执行命令，超NUM秒后中止正在执行的任务</td></tr><tr><td>-P POLL_INTERVAL</td><td>定期返回后台任务进度</td></tr><tr><td>-u REMOTE_USER, –user REMOTE_USER</td><td>在孤独不过远程主机以Username运行命令</td></tr><tr><td>-c CONNECTION, –connection CONNECTION</td><td>指定连接方式，可用选项paramiko（ssh)、ssh、local方式</td></tr><tr><td>-l SUBSET, –limit SUBSET</td><td>指定运行主机</td></tr><tr><td>–syntax-check</td><td>检查语法是否出错</td></tr><tr><td>–list-hosts</td><td>列出符合条件的主机列表，不执行任何命令</td></tr></tbody></table><h3 id="ansible模块语法说明"><a href="#ansible模块语法说明" class="headerlink" title="ansible模块语法说明"></a>ansible模块语法说明</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">The <span class="selector-tag">command</span> module takes the <span class="selector-tag">command</span> name followed by <span class="selector-tag">a</span> list of space-delimited arguments.</span><br><span class="line"><span class="comment">//命令模块采用命令名,后面要有空格分隔的参数</span></span><br><span class="line"></span><br><span class="line">The given <span class="selector-tag">command</span> will be executed on all selected nodes.</span><br><span class="line"><span class="comment">//给定的命令将在所有选定的节点上执行</span></span><br><span class="line"></span><br><span class="line">The command(s) will not be processed through the shell, so variables like $HOME and operations like &quot;&lt;&quot;, &quot;&gt;&quot;, &quot;|&quot;, &quot;;&quot; and &quot;&amp;&quot; will not work. Use the shell module if you need these features.</span><br><span class="line"><span class="comment">//输出的命令不会通过shell处理,所以变量名和一些符号将不起作用,如果需要这些特性,请使用shell模块</span></span><br><span class="line"> </span><br><span class="line">To create <span class="selector-tag">command</span> tasks that are easier to read than the ones using space-delimited arguments, pass parameters using the args task keyword or use cmd parameter.</span><br><span class="line"><span class="comment">//若要创建比使用空格分隔的参数更易于读取的命令任务,请使用args task关键字传递参数或使用cmd参数</span></span><br><span class="line"> </span><br><span class="line">Either <span class="selector-tag">a</span> free <span class="selector-tag">form</span> <span class="selector-tag">command</span> or cmd parameter is required, see the examples.</span><br><span class="line"><span class="comment">//需要自由格式命令或cmd输出,请参见示例</span></span><br><span class="line"> </span><br><span class="line">For Windows targets, use the win_command module instead.</span><br><span class="line"><span class="comment">//对Window对象,可以使 用win_command模块代替</span></span><br></pre></td></tr></table></figure><h3 id="ping（检测模块）"><a href="#ping（检测模块）" class="headerlink" title="ping（检测模块）"></a>ping（检测模块）</h3><p><strong>描述</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># <span class="selector-tag">Try</span> <span class="selector-tag">to</span> <span class="selector-tag">connect</span> <span class="selector-tag">to</span> <span class="selector-tag">host</span>, <span class="selector-tag">verify</span> <span class="selector-tag">a</span> <span class="selector-tag">usable</span> <span class="selector-tag">python</span> <span class="selector-tag">and</span> <span class="selector-tag">return</span> <span class="selector-tag">pong</span> <span class="selector-tag">on</span> <span class="selector-tag">success</span>  //测试连接的主机，验证一个可用的<span class="selector-tag">python</span>，染回<span class="selector-tag">pong</span>则表示成功</span><br></pre></td></tr></table></figure><p><strong>执行命令：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ ansible rsync_server -f 5 -m ping</span><br><span class="line">10.0.0.212 | SUCCESS =&gt; &#123;</span><br><span class="line"> &quot;<span class="selector-tag">ansible_facts</span>&quot;: &#123;</span><br><span class="line">     &quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;</span><br><span class="line"> &#125;, </span><br><span class="line"> &quot;<span class="selector-tag">changed</span>&quot;: <span class="selector-tag">false</span>, </span><br><span class="line"> &quot;<span class="selector-tag">ping</span>&quot;: &quot;<span class="selector-tag">pong</span>&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>执行的详细结果</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible rsync_server -f 5 -m ping -vvv</span><br></pre></td></tr></table></figure><blockquote><p>执行命令——&gt;ssh连接——&gt;生成临时目录——&gt;将/tmp临时脚本移动至$HOME/.ansible/tmp/ansible-tmp-数字/目录下——&gt;执行命令——&gt;返回结果给控制机——&gt;END</p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img1/image-20201214133539759.png"></p><h3 id="command-默认模块"><a href="#command-默认模块" class="headerlink" title="command(默认模块)"></a>command(默认模块)</h3><p><strong>描述</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># <span class="selector-tag">command</span> – Execute commands on targets  <span class="comment">//在目标上执行命令</span></span><br></pre></td></tr></table></figure><p><strong>简单用法</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.211</span> -m <span class="selector-tag">command</span> -<span class="selector-tag">a</span> &quot;hostname&quot;</span><br><span class="line">10.0.0.211 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">nfs</span><br></pre></td></tr></table></figure><p><strong>扩展应用</strong></p><blockquote><ol><li><p>chdir Change into this directory before running the command.</p><p>//在执行这个命令前对目录进行切换</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 10.0.0.211 -m command -a &quot;chdir=/tmp touch wuwei1.txt&quot;</span><br></pre></td></tr></table></figure></li><li><p>creates A filename or (since 2.0) glob pattern. If it already exists, this step won’t be run.</p><p>//一个文件名称或全局模式，如果这个文件已经存在，不会运行下一步    </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 10.0.0.211 -m command -a &quot;creates=/tmp/hosts.bak touch wuwei.txt&quot;</span><br></pre></td></tr></table></figure></li><li><p>removes If it already exists, this step will be run.  </p><p>//如果文件已经存在，可以运行下一步(相反不存在，则不运行)</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 10.0.0.211 -m command -a &quot;removes=/tmp/hosts.bak chdir=/tmp touch wuwei3.txt&quot;</span><br></pre></td></tr></table></figure></li><li><p>free_form(required）</p><p>The command module takes a free form command to run. </p><p>There is no actual parameter named ‘free form’.</p><p>//使用command模块的时候，-a参数后面必须写上一个合法Linux命令信息。如果不加合法的Linux命令信息，则显示报错。</p></li></ol></blockquote><h3 id="shell-万能模块）"><a href="#shell-万能模块）" class="headerlink" title="shell(万能模块）"></a>shell(万能模块）</h3><p><strong>描述</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell  Execute shell commands on targets   <span class="comment">//在目标上执行shell命令</span></span><br></pre></td></tr></table></figure><p><strong>简单用法</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.211</span> -m shell-<span class="selector-tag">a</span> &quot;hostname&quot;</span><br><span class="line">  172.16.1.31 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">  nfs01</span><br><span class="line"></span><br><span class="line"><span class="comment">//过滤信息shell模块可以，command模块也可以</span></span><br><span class="line">$ ansible 172.16.1.41 -m shell -a &quot;grep -E &#x27;nfs01|lb01&#x27; /etc/hosts&quot;</span><br><span class="line">  172.16.1.41 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">  172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.5</span>      lb01</span><br><span class="line">  172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.31</span>     nfs01</span><br></pre></td></tr></table></figure><p><strong>扩展应用</strong></p><blockquote><ol><li><p>chdir Change into this directory before running the command.</p><p>//在执行这个命令前对目录进行切换</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 10.0.0.211 -m shell -a &quot;chdir=/tmp touch wuwei.txt&quot;</span><br></pre></td></tr></table></figure></li><li><p>creates A filename  If it already exists, this step won’t be run.</p><p>//一个文件名称或全局模式,如果这个文件已经存在,不会运行下一步     </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 10.0.0.211 -m shell -a &quot;creates=/tmp/hosts.bak touch wuwei.txt&quot;</span><br></pre></td></tr></table></figure></li><li><p>removes A filename, when it does not exist, this step will not be run.</p><p>//如果文件已经存在,可以运行下一步</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 10.0.0.211 -m shell -a &quot;removes=/tmp/hosts.bak chdir=/tmp touch wuwei.txt&quot;</span><br></pre></td></tr></table></figure></li></ol></blockquote><p><strong>实践应用：利用shell执行脚本</strong></p><blockquote><p>步骤： </p><ol><li>第一个步骤：编写一个脚本</li><li>第二个步骤：将脚本发送到远程主机</li><li>第三个步骤：将脚本权限进行修改（添加执行权限）</li><li>第四个步骤：运行ansible命令执行脚本</li></ol></blockquote><blockquote><ol><li><p>编写一个脚本（ansible端）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ vim yum_install_software.sh</span><br><span class="line">  #!/<span class="selector-tag">bin</span>/<span class="selector-tag">bash</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-id">#install</span> <span class="selector-tag">top</span> <span class="selector-tag">extend</span> <span class="selector-tag">software</span></span><br><span class="line">  <span class="selector-tag">yum</span> <span class="selector-tag">install</span> <span class="selector-tag">-y</span> <span class="selector-tag">htop</span></span><br></pre></td></tr></table></figure></li><li><p>修改脚本的权限为执行权限</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ chmod a+x yum_install_software.sh</span><br><span class="line">$ ll yum_install_software.sh </span><br><span class="line">  <span class="selector-tag">-rwxr-xr-x</span> 1 <span class="selector-tag">root</span> <span class="selector-tag">root</span> 62 <span class="selector-tag">May</span>  3 20<span class="selector-pseudo">:36</span> <span class="selector-tag">yum_install_software</span><span class="selector-class">.sh</span></span><br></pre></td></tr></table></figure></li><li><p>将脚本发送到远程主机</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ scp -rp yum_install_software.sh 10.0.0.211:/server/scripts/</span><br></pre></td></tr></table></figure></li><li><p>运行ansible命令执行脚本</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 10.0.0.211 -m shell -a &quot;/bin/sh /server/scripts/yum_install_software.sh&quot;</span><br><span class="line">  10.0.0.211 | CHANGED | rc=0 &gt;&gt;</span><br></pre></td></tr></table></figure></li><li><p>被动端检查</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -qa|grep htop</span><br><span class="line">  <span class="selector-tag">htop-2</span>.2.0<span class="selector-tag">-3</span><span class="selector-class">.el7</span><span class="selector-class">.x86_64</span></span><br></pre></td></tr></table></figure></li></ol></blockquote><h3 id="script-脚本模块"><a href="#script-脚本模块" class="headerlink" title="script(脚本模块)"></a>script(脚本模块)</h3><p><strong>实践应用：利用script执行脚本</strong></p><blockquote><p>步骤</p><ol><li>第一个步骤：编写一个脚本</li><li>第二个步骤：运行ansible命令执行脚本</li></ol></blockquote><blockquote><ol><li><p>编写脚本</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ vim yum_install_software.txt</span><br><span class="line">  #!/<span class="selector-tag">bin</span>/<span class="selector-tag">bash</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-id">#install</span> <span class="selector-tag">top</span> <span class="selector-tag">extend</span> <span class="selector-tag">software</span></span><br><span class="line">  <span class="selector-tag">yum</span> <span class="selector-tag">install</span> <span class="selector-tag">-y</span> <span class="selector-tag">httpd</span></span><br></pre></td></tr></table></figure></li><li><p>使用ansible命令执行脚本</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 10.0.0.211 -m script -a &quot;/server/scripts/yum_install_software.txt&quot;</span><br></pre></td></tr></table></figure></li></ol><p><strong>#PS：script模块参数功能和command模块类似</strong></p></blockquote><p><strong><code>提示：相比shell模块而言，script模块步骤更简单，所以不要依靠shell的模块</code></strong></p><h3 id="copy-文件类型模块"><a href="#copy-文件类型模块" class="headerlink" title="copy(文件类型模块)"></a>copy(文件类型模块)</h3><p><strong>描述</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># copy Copy files to remote locations   <span class="comment">//复制文件信息到远端位置</span></span><br></pre></td></tr></table></figure><p><strong>简单用法</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 10.0.0.211 -m copy -a &quot;src=/etc/hosts dest=/etc/&quot;</span><br><span class="line">  10.0.0.211 | CHANGED =&gt; &#123;                                     //对那台主机进行变动</span><br><span class="line">     &quot;ansible_facts&quot;: &#123;                                //找到ansible,发现解释器Python</span><br><span class="line">         <span class="string">&quot;discovered_interpreter_python&quot;</span>: <span class="string">&quot;/usr/bin/python&quot;</span></span><br><span class="line">     &#125;, </span><br><span class="line">     <span class="string">&quot;changed&quot;</span>: true,                                       //是否对主机信息进行改变,true改变,false不改变</span><br><span class="line">     <span class="string">&quot;checksum&quot;</span>: <span class="string">&quot;8e84ecc450e3d3174259bbd67f342f0986f30c2f&quot;</span>,    //生成一个文件校验码==MD5值</span><br><span class="line">     <span class="string">&quot;dest&quot;</span>: <span class="string">&quot;/etc/hosts&quot;</span>,                                    //显示目录路径信息 </span><br><span class="line">     <span class="string">&quot;gid&quot;</span>: <span class="number">0</span>,           //显示复制后文件gid信息</span><br><span class="line">     <span class="string">&quot;group&quot;</span>: <span class="string">&quot;root&quot;</span>,                  //显示复制后文件的属组</span><br><span class="line">     <span class="string">&quot;md5sum&quot;</span>: <span class="string">&quot;82f4f9d946109b47ab4942e8b1b079fa&quot;</span>,//生成一个文件校验码==MD5值 </span><br><span class="line">     <span class="string">&quot;mode&quot;</span>: <span class="string">&quot;0644&quot;</span>,                           //显示复制后文件的权限</span><br><span class="line">     <span class="string">&quot;owner&quot;</span>: <span class="string">&quot;root&quot;</span>,                 //显示复制后属主信息</span><br><span class="line">     <span class="string">&quot;size&quot;</span>: <span class="number">392</span>,         //显示复制后的大小信息</span><br><span class="line">     <span class="string">&quot;src&quot;</span>: <span class="string">&quot;/root/.ansible/tmp/ansible-tmp-1588510756.79-14298-168554630180666/source&quot;</span>, </span><br><span class="line">     <span class="string">&quot;state&quot;</span>: <span class="string">&quot;file&quot;</span>,                                  //显示文件类型</span><br><span class="line">     <span class="string">&quot;uid&quot;</span>: <span class="number">0</span>        //显示复制否的uid信息</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>扩展用法</strong></p><blockquote><ol><li><p>在传输文件时修改文件的属主和属组信息</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.31 -m copy -a &quot;src=/file/rsync/rsync.password dest=/data/ owner=wuwei group=wuwei&quot;</span><br></pre></td></tr></table></figure></li><li><p>在传输文件时修改文件的权限信息</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.31 -m copy -a &quot;src=/file/rsync/rsync.password dest=/data/ owner=wuwei group=wuwei mode=1777&quot;</span><br></pre></td></tr></table></figure></li><li><p>在传输文件信息时对远程主机源文件进行备份</p><p>管理端</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.31 -m copy -a &quot;src=/file/rsync/rsync.password dest=/wuwei/ backup=yes&quot;</span><br></pre></td></tr></table></figure><p>被管理端</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ll /oldboy/</span><br><span class="line"> <span class="selector-tag">-rwxrwxrwt</span> 1 <span class="selector-tag">oldboy</span> <span class="selector-tag">oldboy</span> 7 <span class="selector-tag">May</span>  3 21<span class="selector-pseudo">:18</span> <span class="selector-tag">rsync</span><span class="selector-class">.password</span></span><br><span class="line"> -rwxrwxrwt 1 oldboy oldboy 0 May  3 21:16 rsync.password.10810.2020-05-03@21:18:19~</span><br></pre></td></tr></table></figure></li><li><p>创建一个文件并直接编辑文件的信息</p><p>管理端：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.31 -m copy -a &quot;content=&#x27;wuwei123&#x27; dest=/dat/wuwei01.txt&quot;    </span><br></pre></td></tr></table></figure><p>被管理端：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cat /data/wuwei.txt </span><br><span class="line"> <span class="selector-tag">wuwei123</span><span class="selector-attr">[root@nfs01 ~]</span>#     //这里已经成功,不过没有换行显示</span><br></pre></td></tr></table></figure></li><li><p>remote_src参数的用法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">remote_src</span> <span class="selector-tag">directory_mode</span> <span class="selector-tag">local_follow</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">If</span> <span class="selector-tag">no</span>, <span class="selector-tag">it</span> <span class="selector-tag">will</span> <span class="selector-tag">search</span> <span class="selector-tag">for</span> <span class="selector-tag">src</span> <span class="selector-tag">at</span> <span class="selector-tag">originating</span>/<span class="selector-tag">master</span> <span class="selector-tag">machine</span>.</span><br><span class="line">  <span class="selector-tag">src</span>参数指定文件信息,会在本地管理端服务进行查找</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">If</span> <span class="selector-tag">yes</span> <span class="selector-tag">it</span> <span class="selector-tag">will</span> <span class="selector-tag">go</span> <span class="selector-tag">to</span> <span class="selector-tag">the</span> <span class="selector-tag">remote</span>/<span class="selector-tag">target</span> <span class="selector-tag">machine</span> <span class="selector-tag">for</span> <span class="selector-tag">the</span> <span class="selector-tag">src</span>.</span><br><span class="line">  <span class="selector-tag">src</span>参数指定文件信息,会从远程主机上进行查找</span><br></pre></td></tr></table></figure><p>管理端：第一个no的情况：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ echo 123 &gt;/wuwei/wuwei01.txt     //no的情况会将管理端文件的内容信息进行传输</span><br><span class="line">$ cat /wuwei/wuwei01.txt </span><br><span class="line"> 123</span><br><span class="line">$ ansible 172.16.1.31 -m copy -a &quot;src=/wuwei/wuwei01.txt dest=/data&quot; </span><br></pre></td></tr></table></figure><p>被管理端：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd /data</span><br><span class="line">$ cat /oldgirl/oldboy01.txt </span><br><span class="line">123</span><br></pre></td></tr></table></figure><p>管理端：第二个yes的情况</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.31 -m copy -a &quot;src=/data/wuwei01.txt dest=/wuwei remote_src=yes&quot;   </span><br><span class="line">$ cat /wuwei/wuwei01.txt         //yes的情况会将被管理端文件的内容信息进行传输</span><br><span class="line">123 </span><br></pre></td></tr></table></figure><p>被管理端：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ echo 456 &gt; /data/wuwei01.txt </span><br><span class="line">$ cat /data/wuwei01.txt</span><br><span class="line">456</span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><p><strong>PS：ansible软件copy模块复制目录信息</strong><br> ansible 172.16.1.31 -m copy -a “src=/data dest=/“<br> //src后面目录没有/：将目录本身以及目录下面的内容都进行远程传输复制</p><p> ansible 172.16.1.31 -m copy -a “src=/data/ dest=/wuwei”<br> //src后面目录有/：将目录下面的内容都进行远程传输复制</p></blockquote><h3 id="file-文件类型模块"><a href="#file-文件类型模块" class="headerlink" title="file(文件类型模块)"></a>file(文件类型模块)</h3><p><strong>描述</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># file  Manage files and file properties  <span class="comment">//管理文件和文件属性、</span></span><br></pre></td></tr></table></figure><p><strong>简单用法</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改被动端的属主属组和读写执行权限</span></span><br><span class="line">$ ansible 172.16.1.31 -m file -a &quot;dest=/data/wuwei01.txt owner=wuwei group=wuwei mode=666&quot;</span><br></pre></td></tr></table></figure><p><strong>扩展用用法</strong></p><p>可以利用file模块创建数据信息（文件 目录 链接文件）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">state</span>  参数</span><br><span class="line"> <span class="selector-tag">a</span>. <span class="selector-tag">absent</span>      //缺席/删除数据信息</span><br><span class="line"> <span class="selector-tag">b</span>. <span class="selector-tag">directory</span>//创建一个目录信息</span><br><span class="line"> <span class="selector-tag">c</span>. <span class="selector-tag">file</span>        //检查创建的数据信息是否存在 绿色存在 红色不存在</span><br><span class="line"> <span class="selector-tag">d</span>. <span class="selector-tag">link</span>        //创建一个软链接文件</span><br><span class="line"> <span class="selector-tag">e</span>. <span class="selector-tag">hard</span>        //创建一个硬链接文件</span><br><span class="line"> <span class="selector-tag">f</span>. <span class="selector-tag">touch</span>       //创建一个文件信息</span><br></pre></td></tr></table></figure><blockquote><ol><li><p>创建目录信息：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.31 -m file -a &quot;dest=/wuwei/ state=directory&quot;</span><br><span class="line">$ ansible 172.16.1.31 -m file -a &quot;dest=/wuwei/wuwei1/wuwei2/ state=directory&quot;  </span><br></pre></td></tr></table></figure></li><li><p>创建文件信息：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.31 -m file -a &quot;dest=/wuwei/wuwei001.txt state=touch&quot;</span><br></pre></td></tr></table></figure></li><li><p>创建链接文件信息：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.31 -m file -a &quot;src=/wuwei/wuwei001.txt dest=/wuwei/wuwei001_hard.txt state=hard&quot;</span><br><span class="line">$ ansible 172.16.1.31 -m file -a &quot;src=/wuwei/wuwei001.txt dest=/wuwei/wuwei001_link.txt state=link&quot;</span><br></pre></td></tr></table></figure></li><li><p>递归修改文件属性 </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Recursively</span> <span class="selector-tag">set</span> <span class="selector-tag">the</span> <span class="selector-tag">specified</span> <span class="selector-tag">file</span> <span class="selector-tag">attributes</span> <span class="selector-tag">on</span> <span class="selector-tag">directory</span> <span class="selector-tag">contents</span>.</span><br><span class="line"><span class="selector-tag">This</span> <span class="selector-tag">applies</span> <span class="selector-tag">only</span> <span class="selector-tag">when</span> <span class="selector-tag">state</span> <span class="selector-tag">is</span> <span class="selector-tag">set</span> <span class="selector-tag">to</span> <span class="selector-tag">directory</span>.</span><br><span class="line">//递归地对目录内容设置指定的文件属性，仅在当前状态设置目录</span><br></pre></td></tr></table></figure><p>管理端：yes的情况：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.31 -m file -a &quot;dest=/wuwei/ owner=www group=www recurse=yes&quot;</span><br></pre></td></tr></table></figure><p>被管理端：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//没改变之前</span><br><span class="line">$ ll /wuwei/</span><br><span class="line"><span class="selector-tag">-rw-r--r--</span> 1 <span class="selector-tag">root</span> <span class="selector-tag">root</span> 0 <span class="selector-tag">May</span>  3 22<span class="selector-pseudo">:02</span> 01<span class="selector-class">.txt</span></span><br><span class="line"><span class="selector-tag">-rw-r--r--</span> 1 <span class="selector-tag">root</span> <span class="selector-tag">root</span> 0 <span class="selector-tag">May</span>  3 22<span class="selector-pseudo">:02</span> 02<span class="selector-class">.txt</span></span><br><span class="line"><span class="selector-tag">-rw-r--r--</span> 1 <span class="selector-tag">root</span> <span class="selector-tag">root</span> 0 <span class="selector-tag">May</span>  3 22<span class="selector-pseudo">:02</span> 03<span class="selector-class">.txt</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//改变之后</span><br><span class="line">$ ll /wuwei/ </span><br><span class="line"><span class="selector-tag">-rw-r--r--</span> 1 <span class="selector-tag">www</span> <span class="selector-tag">www</span> 0 <span class="selector-tag">May</span>  3 22<span class="selector-pseudo">:02</span> 01<span class="selector-class">.txt</span></span><br><span class="line"><span class="selector-tag">-rw-r--r--</span> 1 <span class="selector-tag">www</span> <span class="selector-tag">www</span> 0 <span class="selector-tag">May</span>  3 22<span class="selector-pseudo">:02</span> 02<span class="selector-class">.txt</span></span><br><span class="line"><span class="selector-tag">-rw-r--r--</span> 1 <span class="selector-tag">www</span> <span class="selector-tag">www</span> 0 <span class="selector-tag">May</span>  3 22<span class="selector-pseudo">:02</span> 03<span class="selector-class">.txt</span></span><br></pre></td></tr></table></figure></li></ol><p><strong>#PS：recurse参数对目录和文件进行递归的改变权限和属性</strong></p></blockquote><h3 id="fetch-文件内容模块"><a href="#fetch-文件内容模块" class="headerlink" title="fetch(文件内容模块)"></a>fetch(文件内容模块)</h3><p><strong>描述</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># Fetch files from remote nodes  <span class="comment">//从远程节点获取文件</span></span><br></pre></td></tr></table></figure><p><strong>简单用法</strong></p><blockquote><p>#PS：注意一点的是fetsh无法拉去目录到管理端</p></blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 10.0.0.211 -m fetch -a &quot;src=/data/1.txt dest=/aini/&quot;</span><br><span class="line"><span class="comment">//将被动端目录/data/1.txt拿去到管理端的/aini目录中，/aini目录不需要创建</span></span><br></pre></td></tr></table></figure><h3 id="yum模块"><a href="#yum模块" class="headerlink" title="yum模块"></a>yum模块</h3><p><strong>描述</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Manages packages with teh yum package mangager  <span class="comment">//管理yum仓库的安装</span></span><br><span class="line"></span><br><span class="line"># name <span class="comment">//指定安装软件名很</span></span><br><span class="line"># state <span class="comment">//指定是否安装软件（状态）</span></span><br><span class="line">         install <span class="comment">//安装软件</span></span><br><span class="line">         present <span class="comment">//确保软件安装</span></span><br><span class="line">         latest  <span class="comment">//更新最新安装包</span></span><br><span class="line">         absent  <span class="comment">//卸载软禁</span></span><br><span class="line">         remove  <span class="comment">//移除        </span></span><br></pre></td></tr></table></figure><p><strong>使用方法</strong></p><blockquote><p>#PS：iotop软件可以查看IO的消耗</p></blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 10.0.0.211 -m yum -a &quot;name=iotop state=installed&quot;</span><br><span class="line"></span><br><span class="line"><span class="comment">//被管理端查看</span></span><br><span class="line">$ rpm -qa|grep iotop</span><br><span class="line">iotop-0<span class="selector-class">.6-4</span><span class="selector-class">.el7</span><span class="selector-class">.noarch</span></span><br></pre></td></tr></table></figure><h3 id="service模块"><a href="#service模块" class="headerlink" title="service模块"></a>service模块</h3><p><strong>描述</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Manage services <span class="comment">//管理服务器的运行状态，停止，开启，重启</span></span><br><span class="line"></span><br><span class="line"># name   <span class="comment">//指定管理的服务名称</span></span><br><span class="line"># state  <span class="comment">//指定服务状态</span></span><br><span class="line">      started <span class="comment">//启动</span></span><br><span class="line">      stoped  <span class="comment">//停止</span></span><br><span class="line">      restarted <span class="comment">//重启</span></span><br><span class="line"># enabled <span class="comment">//指定服务开机是否重启</span></span><br></pre></td></tr></table></figure><p><strong>使用方法</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 10.0.0.211 -m service -a &quot;name=httpd state=started&quot;</span><br><span class="line"></span><br><span class="line"><span class="comment">//被动检查</span></span><br><span class="line">$ systemctl status httpd</span><br></pre></td></tr></table></figure><h3 id="cron模块"><a href="#cron模块" class="headerlink" title="cron模块"></a>cron模块</h3><p><strong>描述</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># Manage cron<span class="selector-class">.d</span> and crontab entries   <span class="comment">//管理定时任务</span></span><br><span class="line"></span><br><span class="line">minute：Minute when the job should run ( 0-59, *, */2, etc )</span><br><span class="line"><span class="comment">//设置分钟信息</span></span><br><span class="line"></span><br><span class="line">hour：Hour when the job should run ( 0-23, *, */2, etc )</span><br><span class="line"><span class="comment">//设置小时信息</span></span><br><span class="line"></span><br><span class="line">day：Day of the month the job should run ( 1-31, *, */2, etc )</span><br><span class="line"><span class="comment">//设置日期信息</span></span><br><span class="line"></span><br><span class="line">month：Month of the year the job should run ( 1-12, *, */2, etc )</span><br><span class="line"><span class="comment">//设置月份信息</span></span><br><span class="line"></span><br><span class="line">weekday：Day of the week that the job should run ( 0-6 for Sunday-Saturday, *, etc )</span><br><span class="line"><span class="comment">//设置星期信息</span></span><br><span class="line"> </span><br><span class="line">job ：The <span class="selector-tag">command</span> to execute or, if env is set, the value of environment variable.</span><br><span class="line">      The <span class="selector-tag">command</span> should not contain line breaks.</span><br><span class="line"><span class="comment">//用于定义定时任务需要干的事情</span></span><br></pre></td></tr></table></figure><p><strong>基本用法</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 10.0.0.211 -m cron -a &quot;minute=0 hour=2 job=&#x27;/usr/bin/netstat ntp1.aliyun.com  &amp;&gt;/dev/null&#x27;&quot;</span><br></pre></td></tr></table></figure><p><strong>扩展用法</strong></p><blockquote><ol><li><p>给定时任务设置注释信息</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 10.0.0.211 -m cron -a &quot;name=&#x27;sync tiem info&#x27; minute=0 hour=2 job=&#x27;/usr/bin/netstat ntp1.aliyun.com  &amp;&gt;/dev/null&#x27;&quot;</span><br></pre></td></tr></table></figure></li><li><p>如何删除指定定时任务</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 10.0.0.211 -m cron -a &quot;name=&#x27;sync tiem info&#x27; minute=0 hour=2 job=&#x27;/usr/bin/netstat ntp1.aliyun.com  &amp;&gt;/dev/null&#x27; state=absent&quot;</span><br></pre></td></tr></table></figure></li><li><p>如何批量注释定时任务</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.41 -m cron -a &quot;name=&#x27;sync tiem info&#x27; minute=0 hour=2 job=&#x27;/usr/bin/netstat nep1.aliyun.com  &amp;&gt;/dev/null&#x27; disabled=yes&quot;</span><br></pre></td></tr></table></figure></li></ol></blockquote><h3 id="mount模块"><a href="#mount模块" class="headerlink" title="mount模块"></a>mount模块</h3><p><strong>描述</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># Control active and configured mount points <span class="comment">//管理挂载节点</span></span><br><span class="line"></span><br><span class="line"># mount：   <span class="comment">//批量进行挂载操作</span></span><br><span class="line">     <span class="attribute">src</span>：  <span class="comment">//需要挂载的源设备或文件信息</span></span><br><span class="line"> path： <span class="comment">//指定目标挂载点目录</span></span><br><span class="line"> fstype：<span class="comment">//指定挂载时的文件系统类型</span></span><br><span class="line"> state：<span class="comment">//状态</span></span><br><span class="line"> present/mounted：//进行挂载</span><br><span class="line"> present：<span class="comment">//不会实现立即挂载,而是修改fstab文件,实现开机自动挂载</span></span><br><span class="line"> mounted：<span class="comment">//会实现立即挂载,并且会修改fstab文件,实现开机自动挂载*****</span></span><br><span class="line"> </span><br><span class="line"> absent/umounted：//进行挂载</span><br><span class="line"> absent：<span class="comment">//会实现立即挂载,并且会删除fstab文件信息,禁止开机自动挂载</span></span><br><span class="line"> unmounted：<span class="comment">//会实现立即卸载,但是不会删除fstab文件信息</span></span><br></pre></td></tr></table></figure><p><strong>基本用法</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.41 -m mount -a &quot;src=172.16.1.31:/data path=/mnt fstype=nfs state=present&quot; </span><br><span class="line"><span class="comment">//不会立即挂载,会在文件fstab开机自动挂载</span></span><br><span class="line"></span><br><span class="line">$ ansible 172.16.1.41 -m mount -a &quot;src=172.16.1.31:/data path=/mnt fstype=nfs state=absent&quot;</span><br><span class="line"><span class="comment">//立即卸载,文件fstab内容也会删除,禁止开机自动挂载</span></span><br><span class="line"></span><br><span class="line">$ ansible 172.16.1.41 -m mount -a &quot;src=172.16.1.31:/data path=/mnt fstype=nfs state=mounted&quot;</span><br><span class="line"><span class="comment">//立即挂载,并会在文件fstab实现开机自动挂载</span></span><br><span class="line"></span><br><span class="line">$ ansible 172.16.1.41 -m mount -a &quot;src=172.16.1.31:/data path=/mnt fstype=nfs state=unmounted&quot;</span><br><span class="line"><span class="comment">//卸载挂载,但不会删除文件fstab的开机自动挂载</span></span><br></pre></td></tr></table></figure><h3 id="user模块"><a href="#user模块" class="headerlink" title="user模块"></a>user模块</h3><p><strong>描述</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># Manage user acconts         <span class="comment">//用户管理</span></span><br></pre></td></tr></table></figure><p><strong>基本用法</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 10.0.0.211 -m user -a &quot;name=wuwei01&quot;</span><br></pre></td></tr></table></figure><p><strong>扩展用法</strong></p><blockquote><ol><li><p>指定用户uid信息</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.31  -m user -a &quot;name=wuwei02 uid=6666&quot;</span><br></pre></td></tr></table></figure></li><li><p>指定用户组信息</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.31 -m user -a &quot;name=wuwei02 group=wuwei01&quot;</span><br></pre></td></tr></table></figure></li><li><p>改变用户组信息</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.31 -m user -a &quot;name=wuwei02 groups=wuwei01&quot;</span><br></pre></td></tr></table></figure></li><li><p>创建虚拟用户</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.31 -m user -a &quot;name=rsync create_home=no shell=/sbin/nologin&quot;</span><br><span class="line">  <span class="selector-tag">create_home</span>  // 指定家目录<span class="selector-tag">yes</span>为有家目录,<span class="selector-tag">no</span>取消家目录</span><br><span class="line">  <span class="selector-tag">shell</span>        // 指定登录方式</span><br></pre></td></tr></table></figure></li><li><p>给指定用户创建密码(直接定义密码信息,只会显示明文的密码)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.31 -m user -a &quot;name=wuwei04 password=123456&quot;</span><br><span class="line">$ tail -1 /etc/shadow</span><br><span class="line"><span class="selector-tag">wuwei04</span><span class="selector-pseudo">:123456</span><span class="selector-pseudo">:18386</span><span class="selector-pseudo">:0</span><span class="selector-pseudo">:99999</span><span class="selector-pseudo">:7</span>:::</span><br></pre></td></tr></table></figure></li></ol></blockquote><p>利用ansible程序user模块设置用户密码信息,需要将密码明文信息转换成密文信息进行设置生成密文密码信息方法：</p><blockquote><ul><li><p>方法一：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ ansible all -i localhost, -m debug -a &quot;msg=&#123;&#123; &#x27;mypassword&#x27; | password_hash(&#x27;sha512&#x27;, &#x27;mysecretsalt&#x27;) &#125;&#125;&quot;</span><br><span class="line"></span><br><span class="line">$ ansible all -i localhost, -m debug -a &quot;msg=&#123;&#123; &#x27;123456&#x27; | password_hash(&#x27;sha512&#x27;, &#x27;mysecretsalt&#x27;) &#125;&#125;&quot;</span><br><span class="line">localhost | SUCCESS =&gt; &#123;</span><br><span class="line">    &quot;msg&quot;: &quot;$6$mysecretsalt$ZB9R8AirQYAXhtfhOo2qdJz52FyNI6v3L6Uc3KNRP.arBKIYpcuEyQewT5qBAHoyQFwHkW6Z551Ql.cZ53GeY0&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//参数说明</span><br><span class="line"> mypassword == 密码信息 == 123456 </span><br><span class="line"> sha512 == 加密的方式</span><br><span class="line"> mysecretsalt == 校验码信息（防止密码被反推）</span><br><span class="line"> &quot;msg&quot;：xxxx == 生成的密码 </span><br></pre></td></tr></table></figure></li><li><p>方法二：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y expect</span><br><span class="line">$ mkpasswd -l 20 -d 5 -s 3 -C 5</span><br><span class="line"><span class="keyword">@qIf7</span>&#x27;1&#x27;CioAsH38Q4ye</span><br></pre></td></tr></table></figure></li><li><p>方法三：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y python-pip</span><br><span class="line">$ pip install passlib</span><br><span class="line">$ python -c &quot;from passlib.hash import sha512_crypt; import getpass; print(sha512_crypt.using(rounds=5000).hash(getpass.getpass()))&quot;</span><br><span class="line"> <span class="selector-tag">Password</span>: </span><br><span class="line"> $6$iHeFVbjorAtftiCG$hFYJueDj61FN3HkTULjlI1uwegJ74RmJpHz7EfWrZWmhZHVX2Z3ir9j9i4IkeFtUMXjh5rQcCBn9w9G2sWzNE1</span><br></pre></td></tr></table></figure></li></ul></blockquote><p>添加用户，使用密文</p><blockquote><ul><li><p>错误传输方式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.31 -m user -a &quot;name=wuwei05 password=$6$iHeFVbjorAtftiCG$hFYJueDj61FN3HkTULjlI1uwegJ74RmJpHz7EfWrZWmhZHVX2Z3ir9j9i4IkeFtUMXjh5rQcCBn9w9G2sWzNE1&quot;</span><br><span class="line">$ tail -1 /etc/shadow</span><br><span class="line"><span class="selector-tag">wuwei05</span><span class="selector-pseudo">::18386</span><span class="selector-pseudo">:0</span><span class="selector-pseudo">:99999</span><span class="selector-pseudo">:7</span>:::</span><br></pre></td></tr></table></figure></li><li><p>正确的传输方式：需要使’’单引号括起来,不能使用””双引号（在shell命令行中,使用””里面有$符号，就转换成变量，执行时候是显示空）</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ansible 172.16.1.31 -m user -a &#x27;name=wuwei06 password=$6$iHeFVbjorAtftiCG$hFYJueDj61FN3HkTULjlI1uwegJ74RmJpHz7EfWrZWmhZHVX2Z3ir9j9i4IkeFtUMXjh5rQcCBn9w9G2sWzNE1&#x27;</span><br><span class="line"> $ tail -1 /etc/shadow</span><br><span class="line"> wuwei:$6$iHeFVbjorAtftiCG$hFYJueDj61FN3HkTULjlI1uwegJ74RmJpHz7EfWrZWmhZHVX2Z3ir9j9i4IkeFtUMXjh5rQcCBn9w9G2sWzNE1:18386:0:99999:7:::</span><br></pre></td></tr></table></figure></li><li><p>登录</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ su - wuwei</span><br><span class="line"> $ su - wuwei06</span><br><span class="line"> <span class="selector-tag">Password</span>: </span><br><span class="line"> [wuwei@nfs01 ~]$ </span><br></pre></td></tr></table></figure></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> ansible </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ansible </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix服务深入扩展</title>
      <link href="2021/01/26/zabbix%E6%9C%8D%E5%8A%A1%E6%B7%B1%E5%85%A5%E6%89%A9%E5%B1%95/"/>
      <url>2021/01/26/zabbix%E6%9C%8D%E5%8A%A1%E6%B7%B1%E5%85%A5%E6%89%A9%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<h1 id="zabbix服务深入扩展"><a href="#zabbix服务深入扩展" class="headerlink" title="zabbix服务深入扩展"></a>zabbix服务深入扩展</h1><h2 id="Grafana"><a href="#Grafana" class="headerlink" title="Grafana"></a>Grafana</h2><h3 id="Grafana介绍"><a href="#Grafana介绍" class="headerlink" title="Grafana介绍"></a>Grafana介绍</h3><p>Grafana是一个跨平台的开源的度量分析和可视化工具，可以通过将采集的数据查询然后可视化的展示，并及时通知。它主要有以下六大特点</p><blockquote><ol><li><p>展示方式：快速灵活的客户端图表，面板插件有许多不同方式的可视化指标和日志，官方库中具有丰富的仪表盘插件，比如热图、折线图、图表等多种展示方式；</p></li><li><p>数据源：Graphite，InfluxDB，OpenTSDB，Prometheus，Elasticsearch，CloudWatch和KairosDB等；</p></li><li><p>通知提醒：以可视方式定义最重要指标的警报规则，Grafana将不断计算并发送通知，在数据达到阈值时通过Slack、PagerDuty等获得通知；</p></li><li><p>混合展示：在同一图表中混合使用不同的数据源，可以基于每个查询指定数据源，甚至自定义数据源；</p></li><li><p>注释：使用来自不同数据源的丰富事件注释图表，将鼠标悬停在事件上会显示完整的事件元数据和标记；</p></li><li><p>过滤器：Ad-hoc过滤器允许动态创建新的键/值过滤器，这些过滤器会自动应用于使用该数据源的所有查询。</p></li></ol></blockquote><h3 id="安装Grafana"><a href="#安装Grafana" class="headerlink" title="安装Grafana"></a>安装Grafana</h3><blockquote><p>官方下载地址：<a href="https://grafana.com/grafana/download">https://grafana.com/grafana/download</a></p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://dl.grafana.com/oss/release/grafana-7.1.5-1.x86_64.rpm</span><br><span class="line">$ yum localinstall grafana-6.3.2-1.x86_64.rpm -y</span><br><span class="line">$ systemctl start grafana-server.service   </span><br><span class="line">$ systemctl enable grafana-server.service</span><br><span class="line">$ netstat -lntup|grep 3000</span><br><span class="line"><span class="selector-tag">tcp6</span>       0      0 :<span class="selector-pseudo">::3000</span>                 :::*                    <span class="selector-tag">LISTEN</span>      67196/<span class="selector-tag">grafana-serve</span></span><br></pre></td></tr></table></figure><p><strong>浏览访问gragana:http//10.0.0.61:3000，账号密码:admin admin</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181830.png"></p><h3 id="安装并激活zabbix插件"><a href="#安装并激活zabbix插件" class="headerlink" title="安装并激活zabbix插件"></a>安装并激活zabbix插件</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ grafana-cli plugins list-remote|grep zabbix</span><br><span class="line"><span class="selector-tag">id</span>: <span class="selector-tag">alexanderzobnin-zabbix-app</span> <span class="selector-tag">version</span>: 3.10.4</span><br><span class="line">$ grafana-cli plugins install alexanderzobnin-zabbix-app</span><br><span class="line"></span><br><span class="line">$ systemctl restart grafana-server.service</span><br></pre></td></tr></table></figure><p><strong>web操作-激活zabbix插件</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181831.png"></p><p><strong>web操作-添加zabbix数据源</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181832.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181833.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181834.png"></p><p><strong>web操作-导入模板</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181835.png"></p><h3 id="数据展示"><a href="#数据展示" class="headerlink" title="数据展示"></a>数据展示</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181836.png"></p><h2 id="percona导入mysql模板"><a href="#percona导入mysql模板" class="headerlink" title="percona导入mysql模板"></a>percona导入mysql模板</h2><h3 id="Percona介绍"><a href="#Percona介绍" class="headerlink" title="Percona介绍"></a>Percona介绍</h3><p>Percona Server由领先的MySQL咨询公司Percona发布。 Percona Server是一款独立的数据库产品，其可以完全与MySQL兼容，可以在不更改代码的情况了下将存储引擎更换成XtraDB</p><p>Percona团队的最终声明是“Percona Server是由Oracle发布的最接近官方MySQL Enterprise发行版的版本”，因此与其他更改了大量基本核心MySQL代码的分支有所区别。 Percona Server的一个缺点是他们自己管理代码，不接受外部开发人员的贡献，以这种方式确保他们对产品中所包含功能的控制</p><p>Percona提供了高性能XtraDB引擎，还提供PXC高可用解决方案，并且附带了perconatoolkit等DBA管理工具箱</p><h3 id="安装PHP环境"><a href="#安装PHP环境" class="headerlink" title="安装PHP环境"></a>安装PHP环境</h3><p><strong>Percona需要PHP环境</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install php php-mysql -y     //如果有安装则不需要此步骤</span><br></pre></td></tr></table></figure><h3 id="下载软件位置"><a href="#下载软件位置" class="headerlink" title="下载软件位置"></a>下载软件位置</h3><blockquote><p>官方下载地址：<a href="https://www.percona.com/downloads/percona-monitoring-plugins/">https://www.percona.com/downloads/percona-monitoring-plugins/</a></p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181837.png">    </p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181838.png"></p><blockquote><p><strong>注意：安装完成后会有提示模板的路径位置</strong></p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ cd /opt/soft/</span><br><span class="line">$ wget https://www.percona.com/downloads/percona-monitoring-plugins/percona-monitoring-plugins-1.1.8/binary/redhat/7/x86_64/percona-zabbix-templates-1.1.8-1.noarch.rpm</span><br><span class="line">$ rpm -ivh percona-zabbix-templates-1.1.8-1.noarch.rpm </span><br><span class="line">警告：<span class="selector-tag">percona-zabbix-templates-1</span>.1.8<span class="selector-tag">-1</span><span class="selector-class">.noarch</span><span class="selector-class">.rpm</span>: 头<span class="selector-tag">V4</span> <span class="selector-tag">DSA</span>/<span class="selector-tag">SHA1</span> <span class="selector-tag">Signature</span>, 密钥 <span class="selector-tag">ID</span> <span class="selector-tag">cd2efd2a</span>: <span class="selector-tag">NOKEY</span></span><br><span class="line">准备中...                          ################################# <span class="selector-attr">[100%]</span></span><br><span class="line">正在升级/安装...</span><br><span class="line">  1<span class="selector-pseudo">:percona-zabbix-templates-1.1.8-1</span> ################################# <span class="selector-attr">[100%]</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">Scripts</span> <span class="selector-tag">are</span> <span class="selector-tag">installed</span> <span class="selector-tag">to</span> /<span class="selector-tag">var</span>/<span class="selector-tag">lib</span>/<span class="selector-tag">zabbix</span>/<span class="selector-tag">percona</span>/<span class="selector-tag">scripts</span>                              //文件的脚本位置</span><br><span class="line"><span class="selector-tag">Templates</span> <span class="selector-tag">are</span> <span class="selector-tag">installed</span> <span class="selector-tag">to</span> /<span class="selector-tag">var</span>/<span class="selector-tag">lib</span>/<span class="selector-tag">zabbix</span>/<span class="selector-tag">percona</span>/<span class="selector-tag">templates</span>                          //文件的<span class="selector-tag">MySQL</span>模板位置</span><br></pre></td></tr></table></figure><h3 id="查看目录"><a href="#查看目录" class="headerlink" title="查看目录"></a>查看目录</h3><p><strong>进入安装目录会发现有2个目录，一个是脚本目录，一个是模板目录</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ cd /var/lib/zabbix/percona</span><br><span class="line">$ tree</span><br><span class="line">.</span><br><span class="line">├── <span class="selector-tag">scripts</span></span><br><span class="line">│   ├── <span class="selector-tag">get_mysql_stats_wrapper</span><span class="selector-class">.sh</span></span><br><span class="line">│   └── <span class="selector-tag">ss_get_mysql_stats</span><span class="selector-class">.php</span></span><br><span class="line">└── <span class="selector-tag">templates</span></span><br><span class="line">    ├── <span class="selector-tag">userparameter_percona_mysql</span><span class="selector-class">.conf</span></span><br><span class="line">    └── <span class="selector-tag">zabbix_agent_template_percona_mysql_server_ht_2</span>.0.9<span class="selector-tag">-sver1</span>.1.8<span class="selector-class">.xml</span></span><br></pre></td></tr></table></figure><p><strong>其中脚本目录里有2个脚本，用来获取数据信息</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd scripts/</span><br><span class="line">$ ls</span><br><span class="line">get_mysql_stats_wrapper<span class="selector-class">.sh</span>  ss_get_mysql_stats<span class="selector-class">.php</span></span><br></pre></td></tr></table></figure><h3 id="修改get-mysql-stats-warpper-sh文件"><a href="#修改get-mysql-stats-warpper-sh文件" class="headerlink" title="修改get_mysql_stats_warpper.sh文件"></a>修改get_mysql_stats_warpper.sh文件</h3><p><strong>编辑get_mysql_stats_warpper.sh增加用户和密码</strong></p><blockquote><p>mysql -e xxx  变成 mysql -uroot -p123456 -e xxx</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ grep &quot;RES&quot; get_mysql_stats_wrapper.sh </span><br><span class="line">    RES=`HOME=~zabbix mysql -uroot -p123456 -e &#x27;SHOW SLAVE STATUS\G&#x27; | egrep &#x27;(Slave_IO_Running|Slave_SQL_Running):&#x27; | awk -F: &#x27;&#123;print $2&#125;&#x27; | tr &#x27;\n&#x27; &#x27;,&#x27;`</span><br></pre></td></tr></table></figure><h3 id="编辑ss-get-mysql-stats-php"><a href="#编辑ss-get-mysql-stats-php" class="headerlink" title="编辑ss_get_mysql_stats.php"></a>编辑ss_get_mysql_stats.php</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ grep -E &quot;mysql_user|mysql_pass&quot; ss_get_mysql_stats.php </span><br><span class="line">  $mysql_user = &#x27;root&#x27;;</span><br><span class="line">  $mysql_pass = &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure><h3 id="复制自定义监控项配置文件到zabbix目录"><a href="#复制自定义监控项配置文件到zabbix目录" class="headerlink" title="复制自定义监控项配置文件到zabbix目录"></a>复制自定义监控项配置文件到zabbix目录</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ pwd</span><br><span class="line">/<span class="selector-tag">var</span>/<span class="selector-tag">lib</span>/<span class="selector-tag">zabbix</span>/<span class="selector-tag">percona</span>/<span class="selector-tag">templates</span></span><br><span class="line">$ cp -a userparameter_percona_mysql.conf /etc/zabbix/zabbix_agentd.d/</span><br></pre></td></tr></table></figure><p><strong>查看文件</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd /etc/zabbix/zabbix_agentd.d/</span><br><span class="line">$ ls</span><br><span class="line">userparameter_mysql<span class="selector-class">.conf</span>  userparameter_percona_mysql<span class="selector-class">.conf</span></span><br></pre></td></tr></table></figure><h3 id="重启zabbix-agent"><a href="#重启zabbix-agent" class="headerlink" title="重启zabbix-agent"></a>重启zabbix-agent</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl restart zabbix-agent</span><br></pre></td></tr></table></figure><h3 id="测试key"><a href="#测试key" class="headerlink" title="测试key"></a>测试key</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ zabbix_get -s 127.0.0.1 -k MySQL.rows-read</span><br><span class="line">18825</span><br><span class="line">$ zabbix_get -s 127.0.0.1 -k MySQL.lock-system-memory</span><br><span class="line">337760</span><br></pre></td></tr></table></figure><h3 id="导入模板"><a href="#导入模板" class="headerlink" title="导入模板"></a>导入模板</h3><blockquote><p><strong>官方自带的模板有点问题,需要先装在2.x版本然后导出来，只好使用网友修改好的模板:<a href="http://pan.baidu.com/s/1pL1wDYj">http://pan.baidu.com/s/1pL1wDYj</a></strong></p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181839.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181840.png" alt="    "></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181841.png"></p><h3 id="主机链接模板"><a href="#主机链接模板" class="headerlink" title="主机链接模板"></a>主机链接模板</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181842.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181843.png"></p><h3 id="报错解决"><a href="#报错解决" class="headerlink" title="报错解决"></a>报错解决</h3><p>查看监控发现没有数据，显示不支持类型，再查看zabbix-server发现因为tmp的文件没有权限，因为刚才手动执行了脚本，所以文件属性是root，将文件删除后由zabbix自己创建解决问题</p><p><strong>报错日志如下：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">2846<span class="selector-pseudo">:20190811</span><span class="selector-pseudo">:202708.785</span> <span class="selector-tag">item</span> &quot;<span class="selector-tag">Zabbix</span> <span class="selector-tag">server</span><span class="selector-pseudo">:MySQL.State-init&quot;</span> <span class="selector-tag">became</span> <span class="selector-tag">not</span> <span class="selector-tag">supported</span>: <span class="selector-tag">Value</span> &quot;<span class="selector-tag">rm</span>: 无法删除&quot;/<span class="selector-tag">tmp</span>/<span class="selector-tag">localhost-mysql_cacti_stats</span><span class="selector-class">.txt</span>&quot;: 不允许的操作</span><br><span class="line">0&quot; <span class="selector-tag">of</span> <span class="selector-tag">type</span> &quot;<span class="selector-tag">string</span>&quot; <span class="selector-tag">is</span> <span class="selector-tag">not</span> <span class="selector-tag">suitable</span> <span class="selector-tag">for</span> <span class="selector-tag">value</span> <span class="selector-tag">type</span> &quot;<span class="selector-tag">Numeric</span> (<span class="selector-tag">float</span>)&quot;</span><br><span class="line">2843<span class="selector-pseudo">:20190811</span><span class="selector-pseudo">:202709.787</span> <span class="selector-tag">item</span> &quot;<span class="selector-tag">Zabbix</span> <span class="selector-tag">server</span><span class="selector-pseudo">:MySQL.State-locked&quot;</span> <span class="selector-tag">became</span> <span class="selector-tag">not</span> <span class="selector-tag">supported</span>: <span class="selector-tag">Value</span> &quot;<span class="selector-tag">rm</span>: 无法删除&quot;/<span class="selector-tag">tmp</span>/<span class="selector-tag">localhost-mysql_cacti_stats</span><span class="selector-class">.txt</span>&quot;: 不允许的操作</span><br><span class="line">0&quot; <span class="selector-tag">of</span> <span class="selector-tag">type</span> &quot;<span class="selector-tag">string</span>&quot; <span class="selector-tag">is</span> <span class="selector-tag">not</span> <span class="selector-tag">suitable</span> <span class="selector-tag">for</span> <span class="selector-tag">value</span> <span class="selector-tag">type</span> &quot;<span class="selector-tag">Numeric</span> (<span class="selector-tag">float</span>)&quot;</span><br><span class="line">2844<span class="selector-pseudo">:20190811</span><span class="selector-pseudo">:202710.788</span> <span class="selector-tag">item</span> &quot;<span class="selector-tag">Zabbix</span> <span class="selector-tag">server</span><span class="selector-pseudo">:MySQL.State-login&quot;</span> <span class="selector-tag">became</span> <span class="selector-tag">not</span> <span class="selector-tag">supported</span>: <span class="selector-tag">Value</span> &quot;<span class="selector-tag">rm</span>: 无法删除&quot;/<span class="selector-tag">tmp</span>/<span class="selector-tag">localhost-mysql_cacti_stats</span><span class="selector-class">.txt</span>&quot;: 不允许的操作</span><br><span class="line">0&quot; <span class="selector-tag">of</span> <span class="selector-tag">type</span> &quot;<span class="selector-tag">string</span>&quot; <span class="selector-tag">is</span> <span class="selector-tag">not</span> <span class="selector-tag">suitable</span> <span class="selector-tag">for</span> <span class="selector-tag">value</span> <span class="selector-tag">type</span> &quot;<span class="selector-tag">Numeric</span> (<span class="selector-tag">float</span>)&quot;</span><br></pre></td></tr></table></figure><h2 id="自动发现和自动注册"><a href="#自动发现和自动注册" class="headerlink" title="自动发现和自动注册"></a>自动发现和自动注册</h2><h3 id="自动发现"><a href="#自动发现" class="headerlink" title="自动发现"></a>自动发现</h3><p><strong>web页面操作</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181844.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181845.png"></p><p><strong>动作中开启自动发现</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181846.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181847.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181848.png"></p><p><strong>配置web主机agent配置</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ cat &#x2F;etc&#x2F;zabbix&#x2F;zabbix_agentd.conf</span><br><span class="line">PidFile&#x3D;&#x2F;var&#x2F;run&#x2F;zabbix&#x2F;zabbix_agentd.pid</span><br><span class="line">LogFile&#x3D;&#x2F;var&#x2F;log&#x2F;zabbix&#x2F;zabbix_agentd.log</span><br><span class="line">LogFileSize&#x3D;0</span><br><span class="line">Server&#x3D;10.0.0.71</span><br><span class="line">ServerActive&#x3D;10.0.0.71</span><br><span class="line">Hostname&#x3D;web01</span><br><span class="line">Include&#x3D;&#x2F;etc&#x2F;zabbix&#x2F;zabbix_agentd.d&#x2F;*.conf</span><br></pre></td></tr></table></figure><p><strong>设置web主机的/etc/hosts文件,对IP地址进行解析</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/hosts</span><br><span class="line">10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.71</span>       zabbix</span><br><span class="line">10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.7</span>        web01</span><br><span class="line">10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.8</span>        web02</span><br><span class="line"></span><br><span class="line">$ vi /etc/hosts</span><br><span class="line">10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.71</span>       zabbix</span><br><span class="line">10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.7</span>        web01</span><br><span class="line">10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.8</span>        web02</span><br></pre></td></tr></table></figure><p><strong>最后刷新页面查看</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181849.png"></p><h3 id="自动注册"><a href="#自动注册" class="headerlink" title="自动注册"></a>自动注册</h3><p><strong>web页面操作</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181850.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181851.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181852.png"></p><p><strong>刷新页面看到的结果</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181853.png"></p><h2 id="主动模式和被动模式"><a href="#主动模式和被动模式" class="headerlink" title="主动模式和被动模式"></a>主动模式和被动模式</h2><blockquote><ol><li><p>默认为被动模式：100个监控项要100来回，客户端执行一个返回一个</p></li><li><p>主动模式：100个监控项1个回合，将所有需要的100个打包，然后一次发过去给客户端，客户端全部执行完再一次返回给服务端</p></li></ol></blockquote><h3 id="克隆模板"><a href="#克隆模板" class="headerlink" title="克隆模板"></a>克隆模板</h3><p><strong>完全克隆原来被动模式的模板为主动模式</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181854.png"></p><h3 id="修改克隆后的模板为主动模式"><a href="#修改克隆后的模板为主动模式" class="headerlink" title="修改克隆后的模板为主动模式"></a>修改克隆后的模板为主动模式</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181855.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181856.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181857.png"></p><h3 id="修改监控主机关联的模板为主动模式"><a href="#修改监控主机关联的模板为主动模式" class="headerlink" title="修改监控主机关联的模板为主动模式"></a>修改监控主机关联的模板为主动模式</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181858.png"></p><h3 id="查看最新数据"><a href="#查看最新数据" class="headerlink" title="查看最新数据"></a>查看最新数据</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181859.png"></p><h2 id="低级自动发现"><a href="#低级自动发现" class="headerlink" title="低级自动发现"></a>低级自动发现</h2><blockquote><p>应用于</p><ul><li>mysql多实例 3307 3308</li><li>磁盘多个分区  /  /swap</li><li>网卡 eth0  eth1 有几块网卡我就监控几块网卡的流量</li><li>端口 80 3306</li></ul></blockquote><h3 id="查看系统自带分区自动发现"><a href="#查看系统自带分区自动发现" class="headerlink" title="查看系统自带分区自动发现"></a>查看系统自带分区自动发现</h3><p><strong>1. 系统知道的自动发现会显示红字，比如自带的磁盘分区发现规则</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Free disk space on &#123;#FSNAME&#125;</span><br><span class="line"><span class="selector-tag">Mounted</span> <span class="selector-tag">filesystem</span> <span class="selector-tag">discovery</span>: <span class="selector-tag">Free</span> <span class="selector-tag">disk</span> <span class="selector-tag">space</span> <span class="selector-tag">on</span> /</span><br><span class="line"><span class="selector-tag">Mounted</span> <span class="selector-tag">filesystem</span> <span class="selector-tag">discovery</span>: <span class="selector-tag">Free</span> <span class="selector-tag">disk</span> <span class="selector-tag">space</span> <span class="selector-tag">on</span> /<span class="selector-tag">boot</span></span><br><span class="line"><span class="selector-tag">Mounted</span> <span class="selector-tag">filesystem</span> <span class="selector-tag">discovery</span>: <span class="selector-tag">Free</span> <span class="selector-tag">disk</span> <span class="selector-tag">space</span> <span class="selector-tag">on</span> /<span class="selector-tag">mount01</span></span><br><span class="line"><span class="selector-tag">Mounted</span> <span class="selector-tag">filesystem</span> <span class="selector-tag">discovery</span>: <span class="selector-tag">Free</span> <span class="selector-tag">disk</span> <span class="selector-tag">space</span> <span class="selector-tag">on</span> /<span class="selector-tag">mount02</span></span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181900.png"></p><p><strong>2. 点击红色字符</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181901.png"></p><p><strong>3. 查看文件系统的过滤器</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181902.png"></p><p><strong>4. 查看到zabbix使用正则表达式过滤的文件系统只有这些类型</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^(btrfs|ext2|ext3|ext4|reiser|xfs|ffs|usf|jfs|jfs2|vxfs|hfs|apfs|refs|ntfs|fat32|zfs)$</span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126182924.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181904.png"></p><p><strong>5. 查看系统mount命令下的所有挂载的文件系统</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">$ mount |awk &#x27;&#123;print $5,$3&#125;&#x27;</span><br><span class="line"><span class="selector-tag">sysfs</span> /<span class="selector-tag">sys</span></span><br><span class="line"><span class="selector-tag">proc</span> /<span class="selector-tag">proc</span></span><br><span class="line"><span class="selector-tag">devtmpfs</span> /<span class="selector-tag">dev</span></span><br><span class="line"><span class="selector-tag">securityfs</span> /<span class="selector-tag">sys</span>/<span class="selector-tag">kernel</span>/<span class="selector-tag">security</span></span><br><span class="line"><span class="selector-tag">tmpfs</span> /<span class="selector-tag">dev</span>/<span class="selector-tag">shm</span></span><br><span class="line"><span class="selector-tag">devpts</span> /<span class="selector-tag">dev</span>/<span class="selector-tag">pts</span></span><br><span class="line"><span class="selector-tag">tmpfs</span> /<span class="selector-tag">run</span></span><br><span class="line"><span class="selector-tag">tmpfs</span> /<span class="selector-tag">sys</span>/<span class="selector-tag">fs</span>/<span class="selector-tag">cgroup</span></span><br><span class="line"><span class="selector-tag">cgroup</span> /<span class="selector-tag">sys</span>/<span class="selector-tag">fs</span>/<span class="selector-tag">cgroup</span>/<span class="selector-tag">systemd</span></span><br><span class="line"><span class="selector-tag">pstore</span> /<span class="selector-tag">sys</span>/<span class="selector-tag">fs</span>/<span class="selector-tag">pstore</span></span><br><span class="line"><span class="selector-tag">cgroup</span> /<span class="selector-tag">sys</span>/<span class="selector-tag">fs</span>/<span class="selector-tag">cgroup</span>/<span class="selector-tag">blkio</span></span><br><span class="line"><span class="selector-tag">cgroup</span> /<span class="selector-tag">sys</span>/<span class="selector-tag">fs</span>/<span class="selector-tag">cgroup</span>/<span class="selector-tag">memory</span></span><br><span class="line"><span class="selector-tag">cgroup</span> /<span class="selector-tag">sys</span>/<span class="selector-tag">fs</span>/<span class="selector-tag">cgroup</span>/<span class="selector-tag">net_cls</span>,<span class="selector-tag">net_prio</span></span><br><span class="line"><span class="selector-tag">cgroup</span> /<span class="selector-tag">sys</span>/<span class="selector-tag">fs</span>/<span class="selector-tag">cgroup</span>/<span class="selector-tag">cpu</span>,<span class="selector-tag">cpuacct</span></span><br><span class="line"><span class="selector-tag">cgroup</span> /<span class="selector-tag">sys</span>/<span class="selector-tag">fs</span>/<span class="selector-tag">cgroup</span>/<span class="selector-tag">perf_event</span></span><br><span class="line"><span class="selector-tag">cgroup</span> /<span class="selector-tag">sys</span>/<span class="selector-tag">fs</span>/<span class="selector-tag">cgroup</span>/<span class="selector-tag">freezer</span></span><br><span class="line"><span class="selector-tag">cgroup</span> /<span class="selector-tag">sys</span>/<span class="selector-tag">fs</span>/<span class="selector-tag">cgroup</span>/<span class="selector-tag">devices</span></span><br><span class="line"><span class="selector-tag">cgroup</span> /<span class="selector-tag">sys</span>/<span class="selector-tag">fs</span>/<span class="selector-tag">cgroup</span>/<span class="selector-tag">cpuset</span></span><br><span class="line"><span class="selector-tag">cgroup</span> /<span class="selector-tag">sys</span>/<span class="selector-tag">fs</span>/<span class="selector-tag">cgroup</span>/<span class="selector-tag">pids</span></span><br><span class="line"><span class="selector-tag">cgroup</span> /<span class="selector-tag">sys</span>/<span class="selector-tag">fs</span>/<span class="selector-tag">cgroup</span>/<span class="selector-tag">hugetlb</span></span><br><span class="line"><span class="selector-tag">configfs</span> /<span class="selector-tag">sys</span>/<span class="selector-tag">kernel</span>/<span class="selector-tag">config</span></span><br><span class="line"><span class="selector-tag">xfs</span> /</span><br><span class="line"><span class="selector-tag">autofs</span> /<span class="selector-tag">proc</span>/<span class="selector-tag">sys</span>/<span class="selector-tag">fs</span>/<span class="selector-tag">binfmt_misc</span></span><br><span class="line"><span class="selector-tag">hugetlbfs</span> /<span class="selector-tag">dev</span>/<span class="selector-tag">hugepages</span></span><br><span class="line"><span class="selector-tag">mqueue</span> /<span class="selector-tag">dev</span>/<span class="selector-tag">mqueue</span></span><br><span class="line"><span class="selector-tag">debugfs</span> /<span class="selector-tag">sys</span>/<span class="selector-tag">kernel</span>/<span class="selector-tag">debug</span></span><br><span class="line"><span class="selector-tag">iso9660</span> /<span class="selector-tag">media</span>/<span class="selector-tag">cdrom</span></span><br><span class="line"><span class="selector-tag">xfs</span> /<span class="selector-tag">boot</span></span><br><span class="line"><span class="selector-tag">rpc_pipefs</span> /<span class="selector-tag">var</span>/<span class="selector-tag">lib</span>/<span class="selector-tag">nfs</span>/<span class="selector-tag">rpc_pipefs</span></span><br><span class="line"><span class="selector-tag">tmpfs</span> /<span class="selector-tag">run</span>/<span class="selector-tag">user</span>/0</span><br><span class="line"><span class="selector-tag">binfmt_misc</span> /<span class="selector-tag">proc</span>/<span class="selector-tag">sys</span>/<span class="selector-tag">fs</span>/<span class="selector-tag">binfmt_misc</span></span><br></pre></td></tr></table></figure><p><strong>6. 说明:在zabbix显示的并没有那么多，原因是使用正则表达式过滤了</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^(btrfs|ext2|ext3|ext4|reiser|xfs|ffs|usf|jfs|jfs2|vxfs|hfs|apfs|refs|ntfs|fat32|zfs)$</span><br></pre></td></tr></table></figure><p> <strong>7. zabbix低自动发现分区过程</strong></p><blockquote><ol><li>自动发现客户端上的所有分区</li><li>根据条件过滤掉不需要的分区类型</li><li>将剩下的符合条件的分区类型自动添加到监控项</li><li>使用宏变量替换不同的地址</li></ol></blockquote><p><strong>8. 查看zabbix所有的key过滤后展示</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ zabbix_agentd -p|grep vfs.fs.discovery</span><br><span class="line"><span class="selector-tag">vfs</span><span class="selector-class">.fs</span><span class="selector-class">.discovery</span>                              <span class="selector-attr">[s|&#123;<span class="string">&quot;data&quot;</span>:[&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;rootfs&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/sys&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;sysfs&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/proc&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;proc&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/dev&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;devtmpfs&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/sys/kernel/security&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;securityfs&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/dev/shm&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;tmpfs&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/dev/pts&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;devpts&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/run&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;tmpfs&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/sys/fs/cgroup&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;tmpfs&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/sys/fs/cgroup/systemd&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;cgroup&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/sys/fs/pstore&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;pstore&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/sys/fs/cgroup/blkio&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;cgroup&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/sys/fs/cgroup/memory&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;cgroup&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/sys/fs/cgroup/net_cls,net_prio&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;cgroup&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/sys/fs/cgroup/cpu,cpuacct&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;cgroup&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/sys/fs/cgroup/perf_event&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;cgroup&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/sys/fs/cgroup/freezer&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;cgroup&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/sys/fs/cgroup/devices&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;cgroup&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/sys/fs/cgroup/cpuset&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;cgroup&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/sys/fs/cgroup/pids&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;cgroup&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/sys/fs/cgroup/hugetlb&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;cgroup&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/sys/kernel/config&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;configfs&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;xfs&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/proc/sys/fs/binfmt_misc&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;autofs&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/dev/hugepages&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;hugetlbfs&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/dev/mqueue&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;mqueue&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/sys/kernel/debug&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;debugfs&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/media/cdrom&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;iso9660&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/boot&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;xfs&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/var/lib/nfs/rpc_pipefs&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;rpc_pipefs&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#FSNAME&#125;&quot;</span>:<span class="string">&quot;/run/user/0&quot;</span>,<span class="string">&quot;&#123;#FSTYPE&#125;&quot;</span>:<span class="string">&quot;tmpfs&quot;</span>&#125;]</span>&#125;]</span><br></pre></td></tr></table></figure><p><strong>9. 解析成json后的格式:<a href="https://www.sojson.com/">https://www.sojson.com/</a></strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;data&quot;: [&#123;</span><br><span class="line">&quot;&#123;#FSNAME&#125;&quot;: &quot;/&quot;,</span><br><span class="line">&quot;&#123;#FSTYPE&#125;&quot;: &quot;rootfs&quot;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">&quot;&#123;#FSNAME&#125;&quot;: &quot;/sys&quot;,</span><br><span class="line">&quot;&#123;#FSTYPE&#125;&quot;: &quot;sysfs&quot;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">&quot;&#123;#FSNAME&#125;&quot;: &quot;/proc&quot;,</span><br><span class="line">&quot;&#123;#FSTYPE&#125;&quot;: &quot;proc&quot;</span><br><span class="line">&#125;</span><br><span class="line">    .......................省略</span><br><span class="line">&#125;]</span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure><p><strong>10. 使用zabbix_get获取key</strong></p><p> 因为根据过滤规则，只发现了一个xfs的key，使用zabbix_get可以查看到这个key</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ zabbix_agentd -p|grep vfs.fs.size</span><br><span class="line"><span class="selector-tag">vfs</span><span class="selector-class">.fs</span><span class="selector-class">.size</span><span class="selector-attr">[/,free]</span>                           <span class="selector-attr">[u|3967389696]</span></span><br><span class="line">$ zabbix_get -s 10.0.0.8 -k vfs.fs.size[/,free]  </span><br><span class="line">3500814336</span><br></pre></td></tr></table></figure><h3 id="查看系统自带的网卡自动发现"><a href="#查看系统自带的网卡自动发现" class="headerlink" title="查看系统自带的网卡自动发现"></a>查看系统自带的网卡自动发现</h3><p><strong>1. 查看网络自动发现规则</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181905.png"></p><p><strong>2. 过滤规则</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181906.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181907.png"></p><p><strong>3. 命令行过滤</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ zabbix_agentd -p|grep net.if.discovery</span><br><span class="line"><span class="selector-tag">net</span><span class="selector-class">.if</span><span class="selector-class">.discovery</span>                              <span class="selector-attr">[s|&#123;<span class="string">&quot;data&quot;</span>:[&#123;<span class="string">&quot;&#123;#IFNAME&#125;&quot;</span>:<span class="string">&quot;eth0&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#IFNAME&#125;&quot;</span>:<span class="string">&quot;eth1&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#IFNAME&#125;&quot;</span>:<span class="string">&quot;lo&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#IFNAME&#125;&quot;</span>:<span class="string">&quot;virbr0-nic&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#IFNAME&#125;&quot;</span>:<span class="string">&quot;virbr0&quot;</span>&#125;]</span>&#125;]</span><br><span class="line">^Czabbix_agentd [56290]: Warning: Got signal [signal:2(SIGINT),sender_pid:0,sender_uid:0,reason:128</span><br></pre></td></tr></table></figure><p><strong>4. 查看自动添加的监控项</strong></p><blockquote><p>2个eth0<br>2个eth1</p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181908.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181909.png"></p><p><strong>5. 查看key的值</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ zabbix_get -s 10.0.0.8 -k net.if.in[eth0]</span><br><span class="line">5767491</span><br><span class="line">$ zabbix_get -s 10.0.0.8 -k net.if.in[eth1]</span><br><span class="line">3120</span><br></pre></td></tr></table></figure><h3 id="监控mysql多实例"><a href="#监控mysql多实例" class="headerlink" title="监控mysql多实例"></a>监控mysql多实例</h3><p><strong>1. 复制并修改数据库配置文件(3307 3308）</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ cp /etc/my.cnf /etc/my3307.cnf</span><br><span class="line">$ vim /etc/my3307.cnf</span><br><span class="line">$ cat /etc/my3307.cnf                                              //编写配置文件</span><br><span class="line"><span class="selector-attr">[mysqld]</span></span><br><span class="line">datadir=/data/3307/</span><br><span class="line">socket=/data/3307/mysql.sock</span><br><span class="line">port=3307</span><br><span class="line">user=mysql</span><br><span class="line">symbolic-links=0</span><br><span class="line"><span class="selector-attr">[mysqld_safe]</span></span><br><span class="line">log-error=/data/3307/mysqld.log</span><br><span class="line">pid-file=/data/3307/mysqld.pid</span><br><span class="line"></span><br><span class="line">$ cp /etc/my3307.cnf /etc/my3308.cnf </span><br><span class="line">$sed -i &#x27;s#3307#3308#g&#x27; /etc/my3308.cnf</span><br></pre></td></tr></table></figure><p><strong>2. 创建数据目录并初始化</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir /data/&#123;3307,3308&#125; -p</span><br><span class="line">$ chown -R mysql:mysql /data/330*                                   //修改权限</span><br><span class="line">$ mysql_install_db --user=mysql --defaults-file=/etc/my3307.cnf     //初始化，指定用户和默认配置文件位置</span><br><span class="line">$ mysql_install_db --user=mysql --defaults-file=/etc/my3308.cnf</span><br></pre></td></tr></table></figure><p><strong>3. 启动多实例</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mysqld_safe --defaults-file=/etc/my3307.cnf &amp;</span><br><span class="line">$ mysqld_safe --defaults-file=/etc/my3308.cnf &amp;</span><br></pre></td></tr></table></figure><p><strong>4. 检查端口</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ netstat -lntup|grep mysql</span><br><span class="line"><span class="selector-tag">tcp</span>        0      0 0.0.0.0<span class="selector-pseudo">:3306</span>            0.0.0.0:*               <span class="selector-tag">LISTEN</span>      69432/<span class="selector-tag">mysqld</span>        </span><br><span class="line"><span class="selector-tag">tcp</span>        0      0 0.0.0.0<span class="selector-pseudo">:3307</span>            0.0.0.0:*               <span class="selector-tag">LISTEN</span>      73414/<span class="selector-tag">mysqld</span>        </span><br><span class="line"><span class="selector-tag">tcp</span>        0      0 0.0.0.0<span class="selector-pseudo">:3308</span>            0.0.0.0:*               <span class="selector-tag">LISTEN</span>      73809/<span class="selector-tag">mysqld</span>  </span><br></pre></td></tr></table></figure><p><strong>5. 创建自动发现多实例脚本</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$ cat /server/scritps/mysql_discovery.sh </span><br><span class="line">#!/bin/bash </span><br><span class="line"><span class="selector-id">#mysql</span> low-level discovery </span><br><span class="line">res=$(netstat -lntp|awk -F &quot;[ :\t]+&quot; &#x27;/mysqld/&#123;print$5&#125;&#x27;)</span><br><span class="line">port=($res) </span><br><span class="line">printf &#x27;&#123;&#x27; </span><br><span class="line">printf &#x27;&quot;data&quot;:[&#x27; </span><br><span class="line">for key in $&#123;!port<span class="selector-attr">[@]</span>&#125; </span><br><span class="line">do </span><br><span class="line">        if <span class="selector-attr">[[ &quot;$&#123;#port[@]</span>&#125;&quot; -gt 1 &amp;&amp; &quot;$&#123;key&#125;&quot; -ne &quot;$(($&#123;<span class="selector-id">#port</span><span class="selector-attr">[@]</span>&#125;-1))&quot; ]];then </span><br><span class="line">                printf &#x27;&#123;&#x27; </span><br><span class="line">                printf &quot;\&quot;&#123;<span class="selector-id">#MYSQLPORT</span>&#125;\&quot;:\<span class="string">&quot;$&#123;port[$&#123;key&#125;]&#125;\&quot;&#125;,&quot;</span> </span><br><span class="line">        else [[ <span class="string">&quot;$&#123;key&#125;&quot;</span> -eq <span class="string">&quot;(($&#123;#port[@]&#125;-1))&quot;</span> ]] </span><br><span class="line">                printf <span class="string">&#x27;&#123;&#x27;</span> </span><br><span class="line">                printf <span class="string">&quot;\&quot;&#123;#MYSQLPORT&#125;\&quot;:\&quot;$&#123;port[$&#123;key&#125;]&#125;\&quot;&#125;&quot;</span> </span><br><span class="line">        fi </span><br><span class="line">done </span><br><span class="line">printf <span class="string">&#x27;]&#x27;</span> </span><br><span class="line">printf <span class="string">&#x27;&#125;\n&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>6. 创建自动发现配置文件</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/zabbix/zabbix_agentd.d/mysql_discovery.conf</span><br><span class="line">UserParameter=mysql.discovery,/bin/bash /server/scripts/mysql_discovery.sh</span><br></pre></td></tr></table></figure><p><strong>7. 测试自动发现脚本</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ bash /server/scritps/mysql_discovery.sh </span><br><span class="line">&#123;&quot;data&quot;:[&#123;&quot;&#123;#MYSQLPORT&#125;&quot;:&quot;3306&quot;&#125;,&#123;&quot;&#123;#MYSQLPORT&#125;&quot;:&quot;3307&quot;&#125;,&#123;&quot;&#123;#MYSQLPORT&#125;&quot;:&quot;3308&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure><p><strong>8. 重启zabbix-agent</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl restart zabbix-agent.service </span><br></pre></td></tr></table></figure><p><strong>9. zabbix_get测试取key</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ zabbix_get -s 127.0.0.1 -k mysql.discovery</span><br><span class="line">(<span class="selector-tag">Not</span> <span class="selector-tag">all</span> <span class="selector-tag">processes</span> <span class="selector-tag">could</span> <span class="selector-tag">be</span> <span class="selector-tag">identified</span>, <span class="selector-tag">non-owned</span> <span class="selector-tag">process</span> <span class="selector-tag">info</span></span><br><span class="line"><span class="selector-tag">will</span> <span class="selector-tag">not</span> <span class="selector-tag">be</span> <span class="selector-tag">shown</span>, <span class="selector-tag">you</span> <span class="selector-tag">would</span> <span class="selector-tag">have</span> <span class="selector-tag">to</span> <span class="selector-tag">be</span> <span class="selector-tag">root</span> <span class="selector-tag">to</span> <span class="selector-tag">see</span> <span class="selector-tag">it</span> <span class="selector-tag">all</span>.)</span><br><span class="line">&#123;&quot;data&quot;:[]&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li><p>发现问题:原因是zabbix用户不能使用netstat的-p参数</p></li><li><p>解决方法为给netstat命令添加权限</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ which netstat</span><br><span class="line">/usr/bin/netstat</span><br><span class="line">$ chmod u+s /usr/bin/netstat</span><br><span class="line">$ ll /usr/bin/netstat</span><br><span class="line">-rwsr-xr-x. 1 root root 155008 Aug  9  2019 /usr/bin/netstat</span><br></pre></td></tr></table></figure></li><li><p>重新测试</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ zabbix_get -s 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span> -k mysql<span class="selector-class">.discovery</span></span><br><span class="line">&#123;&quot;data&quot;:[&#123;<span class="string">&quot;&#123;#MYSQLPORT&#125;&quot;</span>:<span class="string">&quot;3306&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#MYSQLPORT&#125;&quot;</span>:<span class="string">&quot;3307&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#MYSQLPORT&#125;&quot;</span>:<span class="string">&quot;3308&quot;</span>&#125;]&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>10. web页面创建自动发现规则模板</strong></p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181910.png">    </p><p><strong>11. 创建自动发现</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181911.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181912.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181913.png"></p><p><strong>12. 创建正则表达式</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181914.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181915.png"></p><p><strong>13. 模仿zabbix自带的mysql监控配置修改监控项</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/zabbix/zabbix_agentd.d/userparameter_mysql.conf    </span><br><span class="line">UserParameter=mysql.status[*],echo &quot;show global status where Variable_name=&#x27;$1&#x27;;&quot; | HOME=/var/lib/zabbix mysql -uroot -p123456 -P $2 -N | awk &#x27;&#123;print $$2&#125;&#x27;</span><br><span class="line"></span><br><span class="line">$systemctl restart zabbix-agent.service</span><br></pre></td></tr></table></figure><p><strong>14. 测试访问监控项</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ zabbix_get -s 127.0.0.1 -k mysql.status[Uptime,3307]</span><br><span class="line">15180</span><br><span class="line">$ zabbix_get -s 127.0.0.1 -k mysql.status[Uptime,3308]</span><br><span class="line">15184</span><br><span class="line">$ zabbix_get -s 127.0.0.1 -k mysql.status[Uptime,3306]</span><br><span class="line">15189</span><br></pre></td></tr></table></figure><p><strong>15. web页面添加监控项原型</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181916.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181917.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181918.png"></p><p><strong>16. web页面设置主机关联模板</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181919.png"></p><p><strong>17. 查看是否已经自动添加成功</strong></p><blockquote><p>PS：注意自己搭建的数据库服务器的主机，不要添加错了</p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126181920.png"></p><p><strong>18. 整体步骤</strong></p><blockquote><ol><li>创建mysql多实例3307,3308，并启动</li><li>创建自动发现多实例脚本 </li><li>创建自动发现配置文件                                                 //这个配置文件是调用自动发现多实例脚本</li><li>测试自动发现脚本是否能够获取key                                //这个测试是测试上述创建的多实例脚本，使用bash执行</li><li>重启zabbix-agent</li><li>zabbix-get测试取key                                                 //这个是服务端测试客户端自动发现配置文件</li><li>web页面创建自动发现规则模板</li><li>web页面创建自动发现规则</li><li>将zabbix自带的mysql监控配置修改成监控项                    //这个主要是添加mysql的账户和密码，以及端口</li><li>服务端测试访问客户端监控项</li><li>web页面添加监控项原型                                              //不要添加监控项，而是添加监控项原型，因为是自动检测</li><li>web页面设置主机关联模板                                          //这个主机是创建mysql多实例，不要关联错主机，否则没有效果</li><li>web页面查看是否已经自动添加成功</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix故障处理</title>
      <link href="2021/01/26/zabbix%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86/"/>
      <url>2021/01/26/zabbix%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="zabbix故障处理"><a href="#zabbix故障处理" class="headerlink" title="zabbix故障处理"></a>zabbix故障处理</h1><h2 id="故障1：zabbix-server-is-not-running"><a href="#故障1：zabbix-server-is-not-running" class="headerlink" title="故障1：zabbix server is not running"></a>故障1：zabbix server is not running</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126170721.png"></p><h3 id="故障原因"><a href="#故障原因" class="headerlink" title="故障原因:"></a>故障原因:</h3><p>zabbix-server的配置文件里配有数据库密码，需要配置对密码</p><p><strong>查看报错的日志</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">54912:<span class="number">20190807</span>:<span class="number">202215.171</span> database is down: reconnecting in <span class="number">10</span> seconds</span><br><span class="line"><span class="number">54913</span>:<span class="number">20190807</span>:<span class="number">202225.172</span> [Z3001] connection to database <span class="string">&#x27;zabbix&#x27;</span> failed: [<span class="number">1045</span>] Access denied for user <span class="string">&#x27;zabbix&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> (using password: NO)</span><br></pre></td></tr></table></figure><h3 id="故障解决："><a href="#故障解决：" class="headerlink" title="故障解决："></a>故障解决：</h3><p><strong>添加正确的数据库账号密码信息</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ grep &quot;^DB&quot; /etc/zabbix/zabbix_server.conf     </span><br><span class="line">DBHost=localhost</span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=zabbix</span><br></pre></td></tr></table></figure><h2 id="故障2：no-module-named-requests"><a href="#故障2：no-module-named-requests" class="headerlink" title="故障2：no module named requests"></a>故障2：no module named requests</h2><p><strong>故障现象：微信报警失败</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Original problem ID: <span class="number">51</span></span><br><span class="line"><span class="string">&#x27;&quot;: Traceback (most recent call last):</span></span><br><span class="line"><span class="string">File &quot;/usr/lib/zabbix/alertscripts/weixin.py&quot;, line 7, in &lt;module&gt;</span></span><br><span class="line"><span class="string">    import requests</span></span><br><span class="line"><span class="string">ImportError: No module named requests</span></span><br></pre></td></tr></table></figure><h3 id="故障原因-1"><a href="#故障原因-1" class="headerlink" title="故障原因"></a>故障原因</h3><p>缺少模块 requests</p><h3 id="故障解决"><a href="#故障解决" class="headerlink" title="故障解决"></a>故障解决</h3><p><strong>安装缺失的依赖包</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ yum install python-pip</span><br><span class="line">$ pip install --upgrade pip</span><br><span class="line">$ pip install requests</span><br></pre></td></tr></table></figure><h2 id="故障3：zabbix-get测试提示警告：No-route-to-host"><a href="#故障3：zabbix-get测试提示警告：No-route-to-host" class="headerlink" title="故障3：zabbix_get测试提示警告：No route to host"></a>故障3：zabbix_get测试提示警告：No route to host</h2><p><strong>故障现象：在server端使用zabbix_get命令测试键值命令时提示警告</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ zabbix_get -s 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.8</span> -k ESTABLISHED</span><br><span class="line">zabbix_get <span class="selector-attr">[65069]</span>: Get value error: cannot connect to [[<span class="number">10.0</span>.<span class="number">0.8</span>]:<span class="number">10050</span>]: [<span class="number">113</span>] No route to host</span><br></pre></td></tr></table></figure><h3 id="故障原因-2"><a href="#故障原因-2" class="headerlink" title="故障原因"></a>故障原因</h3><p>主机开启了防火墙或者是SELinux</p><h3 id="故障解决-1"><a href="#故障解决-1" class="headerlink" title="故障解决"></a>故障解决</h3><p>关闭防火墙和SELinux</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl stop firewalld</span><br><span class="line">$ grep &#x27;disabled&#x27; /etc/selinux/config</span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><h2 id="故障4：zabbix-get测试提示警告：Not-all-processes-could-be-identified"><a href="#故障4：zabbix-get测试提示警告：Not-all-processes-could-be-identified" class="headerlink" title="故障4：zabbix_get测试提示警告：Not all processes could be identified"></a>故障4：zabbix_get测试提示警告：Not all processes could be identified</h2><p><strong>故障现象：在server端使用zabbix_get命令测试键值命令时提示警告</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ zabbix_get -s 10.0.0.7 -k ESTABLISHED  </span><br><span class="line">(<span class="selector-tag">Not</span> <span class="selector-tag">all</span> <span class="selector-tag">processes</span> <span class="selector-tag">could</span> <span class="selector-tag">be</span> <span class="selector-tag">identified</span>, <span class="selector-tag">non-owned</span> <span class="selector-tag">process</span> <span class="selector-tag">info</span></span><br><span class="line"><span class="selector-tag">will</span> <span class="selector-tag">not</span> <span class="selector-tag">be</span> <span class="selector-tag">shown</span>, <span class="selector-tag">you</span> <span class="selector-tag">would</span> <span class="selector-tag">have</span> <span class="selector-tag">to</span> <span class="selector-tag">be</span> <span class="selector-tag">root</span> <span class="selector-tag">to</span> <span class="selector-tag">see</span> <span class="selector-tag">it</span> <span class="selector-tag">all</span>.)</span><br><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="故障原因-3"><a href="#故障原因-3" class="headerlink" title="故障原因"></a>故障原因</h3><p>zabbix_agent是以普通用户zabbix运行的，而普通用户执行netstat -antp时会有警告，网上查找发现只要不是用p参数就可以普通用户运行</p><h3 id="故障解决-2"><a href="#故障解决-2" class="headerlink" title="故障解决"></a>故障解决</h3><p>监控脚本里的命令修改为netstat -ant</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix监控服务基础</title>
      <link href="2021/01/26/zabbix%E7%9B%91%E6%8E%A7%E6%9C%8D%E5%8A%A1%E5%9F%BA%E7%A1%80/"/>
      <url>2021/01/26/zabbix%E7%9B%91%E6%8E%A7%E6%9C%8D%E5%8A%A1%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="zabbix监控服务"><a href="#zabbix监控服务" class="headerlink" title="zabbix监控服务"></a>zabbix监控服务</h1><h2 id="部署准备"><a href="#部署准备" class="headerlink" title="部署准备"></a>部署准备</h2><table><thead><tr><th>主机名</th><th>外网IP</th><th>内网IP</th><th>服务器</th><th>服务安装</th></tr></thead><tbody><tr><td>zabbix</td><td>10.0.0.71</td><td>172.16.1.71</td><td>zabbix服务</td><td>zabbix-server-mysql、zabbix-web-mysql、mariadb-server</td></tr><tr><td>web01</td><td>10.0.0.7</td><td>172.16.1.7</td><td>nginx服务</td><td>zabbix-agent</td></tr></tbody></table><h2 id="zabbix监控基础架构"><a href="#zabbix监控基础架构" class="headerlink" title="zabbix监控基础架构"></a>zabbix监控基础架构</h2><p><strong>zabbix-agent(数据采集) –&gt; zabbix-server(数据分析|报警) –&gt; 数据库(数据存储) &lt;–zabbix-web(数据显示)</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160150.png"></p><h2 id="监控概述"><a href="#监控概述" class="headerlink" title="监控概述"></a>监控概述</h2><h3 id="Zabbix介绍"><a href="#Zabbix介绍" class="headerlink" title="Zabbix介绍"></a>Zabbix介绍</h3><blockquote><ol><li>zabbix是一个企业级分布式开源监控解决方案。能够监控众多网络参数和服务器的健康度、完整性。</li><li>zabbix使用灵活的告警机制，允许用户为几乎任何事件配置基于邮件的告警、可以快速响应服务器问题。</li><li>zabbix基于存储的数据提供出色的报表和数据可视化功能</li><li>zabbix server可以通过SNMP，zabbix agent，ping，端口监视等方法提供对远程服务器/网络状态的监视，数据收集等功能，它可以运行在Linux，Solaris，HP-UX，AIX，Free BSD，Open BSD，OS X等平台上</li></ol></blockquote><h3 id="为什么要使用监控"><a href="#为什么要使用监控" class="headerlink" title="为什么要使用监控"></a>为什么要使用监控</h3><blockquote><ol><li>对系统不断的进行实时监控</li><li>实时反馈系统当前状态</li><li>保证服务可靠性安全性</li><li>保证业务持续稳定运行</li></ol></blockquote><h3 id="监控服务常用的命令"><a href="#监控服务常用的命令" class="headerlink" title="监控服务常用的命令"></a>监控服务常用的命令</h3><p><strong>1. CPU：top、htop、glances(万能命令)</strong></p><blockquote><p>监控什么：</p><ul><li>us: user state         — 用户态信息 40%</li><li>sy: system state     — 内核态信息 40%</li><li>id: idle                  — 空闲状态 20%</li></ul></blockquote><p><strong>2. 内存：top、htop、free</strong></p><blockquote><p>监控什么：</p><ul><li>内存可用率</li><li>swap空间使用情况</li></ul></blockquote><p><strong>3. 磁盘：df、iotop(检查磁盘Io消耗)、glances</strong></p><blockquote><p>监控什么：</p><ul><li>磁盘的使用情况</li><li>磁盘的io消耗</li><li>可用使用命令测试：dd if=/dev/zero of=/tmp/1G bs=100M count=10</li></ul></blockquote><p><strong>4. 网络：iftop、glances</strong></p><blockquote><p>监控什么：</p><ul><li>网络带宽使用情况</li></ul></blockquote><p><strong>5. 进程：top、htop、ps、glances</strong></p><blockquote><p>监控什么：</p><ul><li>占用内存情况 Tomcat（Java）— 内存占满（内存可能会溢出）— 服务就会出现僵死（重启服务）</li><li>占用CPU情况：mysql服务较占用CPU资源 </li></ul></blockquote><p><strong>6. 负载：w、top、uptime、glances</strong></p><blockquote><p>监控什么：</p><ul><li>10分钟负载&lt;CPU内核数</li><li>15分钟负载</li></ul></blockquote><h3 id="如何入手监控"><a href="#如何入手监控" class="headerlink" title="如何入手监控"></a>如何入手监控</h3><blockquote><ol><li>硬件监控：路由器，交换机，防火墙</li><li>系统监控:CPU，内容，磁盘，网络，进程，TCP</li><li>服务监控：nginx、php、tomcat、Redis、memcache、MySQL</li><li>web监控：请求时间，响应时间，加载时间</li><li>日志监控：ELK（收集、存储、分析、展示）日志易</li><li>安全监控：Friewalld、WAF(nginx+lua)、安全宝、牛盾云、安全狗</li><li>网络监控：smokeping多机房</li><li>业务监控：活动引入多少流量，产生多少注册量，带来多大价值</li></ol></blockquote><h3 id="如何使用shell来实现服务器的监控"><a href="#如何使用shell来实现服务器的监控" class="headerlink" title="如何使用shell来实现服务器的监控"></a>如何使用shell来实现服务器的监控</h3><p><strong>1. 如何监控内存使用情况：</strong></p><blockquote><p>正常使用情况：内存使用率高于80%<br>异常使用情况：内存使用率低于20%，则发送报警<br>使用命令测试：free -m |awk ‘NR==2{print int($NF/$2*100)”%”}’</p></blockquote><p><strong>2. 编写脚本:</strong></p><blockquote><p>编写脚本之前需要配置邮件服务，路径：/etc/mail.rc；配置以下参数，smtp需要自行去qq邮箱中开启 </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/mail.rc           </span><br><span class="line">set from=qq邮箱 smtp=smtp.qq.com    </span><br><span class="line">set smtp-auth-user=qq邮箱 smtp-auth-password=授权码（不是密码） smtp-auth=login</span><br></pre></td></tr></table></figure><p>配置脚本文件：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cat check_memory<span class="selector-class">.sh</span></span><br><span class="line">#!/bin/bash</span><br><span class="line">num=`free -m |awk &#x27;NR==2&#123;print int($NF/$2*100)&quot;%&quot;&#125;&#x27;`</span><br><span class="line">if <span class="selector-attr">[ &quot;$num -lt 20%&quot; ]</span>;then</span><br><span class="line">   echo &quot;memory error&quot;|mail -s memory-appear-abnormal qq邮箱</span><br><span class="line">fi </span><br></pre></td></tr></table></figure></blockquote><p><strong>3. 收到的报警邮箱如图</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126152833.png"></p><h2 id="zabbix部署"><a href="#zabbix部署" class="headerlink" title="zabbix部署"></a>zabbix部署</h2><h3 id="配置zabbix-yum-仓库"><a href="#配置zabbix-yum-仓库" class="headerlink" title="配置zabbix(yum)仓库"></a>配置zabbix(yum)仓库</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -ivh https://mirror.tuna.tsinghua.edu.cn/zabbix/zabbix/4.0/rhel/7/x86_64/zabbix-agent-4.0.11-1.el7.x86_64.rpm            //清华源</span><br><span class="line">$ sed -i &#x27;s#repo.zabbix.com#mirrors.tuna.tsinghua.edu.cn/zabbix#g&#x27; /etc/yum.repos.d/zabbix.repo</span><br></pre></td></tr></table></figure><h3 id="安装zabbix-服务端-、Msyql、zabbix-agent-客户端"><a href="#安装zabbix-服务端-、Msyql、zabbix-agent-客户端" class="headerlink" title="安装zabbix(服务端)、Msyql、zabbix-agent(客户端)"></a>安装zabbix(服务端)、Msyql、zabbix-agent(客户端)</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y zabbix-server-mysql zabbix-web-mysql zabbix-agent mariadb-server</span><br><span class="line">$ systemctl start mariadb.service &amp;&amp; systemctl enable mariadb.service</span><br></pre></td></tr></table></figure><h3 id="创建zabbix数据库以及用户"><a href="#创建zabbix数据库以及用户" class="headerlink" title="创建zabbix数据库以及用户"></a>创建zabbix数据库以及用户</h3><p><strong>创建用户密码</strong></p><blockquote><ol><li>第一种选择，初始化设置：mysql_secure_installation (初始化可以设置密码，也可以去除MySQL多余的用户和库)</li><li>第二种选择，直接设置密码：mysqladmin password 123456</li></ol></blockquote><p><strong>创建mysql中的库和用户</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -uroot -p123456</span><br><span class="line">MariaDB <span class="selector-attr">[(none)]</span>&gt; create database zabbix character set utf8 collate utf8_bin;                    <span class="comment">//创建zabbix库</span></span><br><span class="line">MariaDB <span class="selector-attr">[(none)]</span>&gt; grant all privileges on zabbix.* to zabbix<span class="keyword">@localhost</span> identified by <span class="string">&#x27;zabbix&#x27;</span>;   <span class="comment">//创建用户</span></span><br><span class="line">MariaDB <span class="selector-attr">[(none)]</span>&gt; flush privileges;                                                              <span class="comment">//刷新</span></span><br></pre></td></tr></table></figure><h3 id="导入数据值到数据库中"><a href="#导入数据值到数据库中" class="headerlink" title="导入数据值到数据库中"></a>导入数据值到数据库中</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ zcat /usr/share/doc/zabbix-server-mysql-4.0.24/create.sql.gz | mysql -uzabbix -pzabbix zabbix</span><br></pre></td></tr></table></figure><h3 id="编辑-etc-zabbix-zabbix-server-conf文件，修改数据库配置"><a href="#编辑-etc-zabbix-zabbix-server-conf文件，修改数据库配置" class="headerlink" title="编辑/etc/zabbix/zabbix-server.conf文件，修改数据库配置"></a>编辑/etc/zabbix/zabbix-server.conf文件，修改数据库配置</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ grep &quot;^DB&quot; /etc/zabbix/zabbix_server.conf </span><br><span class="line">DBHost=localhost</span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=zabbix</span><br></pre></td></tr></table></figure><h3 id="启动zabbix服务进程，并加入开机自动"><a href="#启动zabbix服务进程，并加入开机自动" class="headerlink" title="启动zabbix服务进程，并加入开机自动"></a>启动zabbix服务进程，并加入开机自动</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl start zabbix-server.service </span><br><span class="line">$ systemctl enable zabbix-server.service</span><br></pre></td></tr></table></figure><h3 id="配置Apache的配置文件-etc-httpd-conf-d-zabbix-conf，修改时区并重启Apache"><a href="#配置Apache的配置文件-etc-httpd-conf-d-zabbix-conf，修改时区并重启Apache" class="headerlink" title="配置Apache的配置文件/etc/httpd/conf.d/zabbix.conf，修改时区并重启Apache"></a>配置Apache的配置文件/etc/httpd/conf.d/zabbix.conf，修改时区并重启Apache</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ grep &quot;Shanghai&quot; /etc/httpd/conf.d/zabbix.conf </span><br><span class="line"><span class="selector-tag">php_value</span> <span class="selector-tag">date</span><span class="selector-class">.timezone</span> <span class="selector-tag">Asia</span>/<span class="selector-tag">Shanghai</span>             //修改的位置</span><br><span class="line"></span><br><span class="line">$ systemctl start httpd &amp;&amp; systemctl enable httpd</span><br></pre></td></tr></table></figure><h2 id="WEB安装步骤"><a href="#WEB安装步骤" class="headerlink" title="WEB安装步骤"></a>WEB安装步骤</h2><h3 id="浏览器打开地址：10-0-0-71-zabbix-setup-php"><a href="#浏览器打开地址：10-0-0-71-zabbix-setup-php" class="headerlink" title="浏览器打开地址：10.0.0.71/zabbix/setup.php"></a>浏览器打开地址：10.0.0.71/zabbix/setup.php</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126154515.png"></p><h3 id="检查依赖项是否存在异常"><a href="#检查依赖项是否存在异常" class="headerlink" title="检查依赖项是否存在异常"></a>检查依赖项是否存在异常</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126154533.png"></p><h3 id="配置zabbix连接数据库"><a href="#配置zabbix连接数据库" class="headerlink" title="配置zabbix连接数据库"></a>配置zabbix连接数据库</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126154549.png"></p><h3 id="配置zabbix-server服务器的信息，并确认检查"><a href="#配置zabbix-server服务器的信息，并确认检查" class="headerlink" title="配置zabbix-server服务器的信息，并确认检查"></a>配置zabbix-server服务器的信息，并确认检查</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126154606.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160124.png"></p><h3 id="安装成功"><a href="#安装成功" class="headerlink" title="安装成功"></a>安装成功</h3><p><strong>提示已经安装了zabbix。配置文件/etc/zabbix/web/zabbix.conf.php已被创建</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160129.png"></p><h3 id="登录zabbix"><a href="#登录zabbix" class="headerlink" title="登录zabbix"></a>登录zabbix</h3><p><strong>默认登录zabbix-web的用户名Admin，密码zabbix</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160132.png"></p><h3 id="调整字符集为中文"><a href="#调整字符集为中文" class="headerlink" title="调整字符集为中文"></a>调整字符集为中文</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160135.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160146.png"></p><h3 id="修复中文乱码"><a href="#修复中文乱码" class="headerlink" title="修复中文乱码"></a>修复中文乱码</h3><p><strong>打开图形之后发现语言为乱码，原因是缺少了字体</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160147.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160148.png"></p><p><strong>解决方法，安装字体并替换现有字体</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ yum install wqy-microhei-fonts -y      <span class="comment">//默认情况下Centos7是安装的</span></span><br><span class="line">$ cp /usr/share/fonts/wqy-microhei/wqy-microhei.ttc /usr/share/zabbix/assets/fonts/graphfont.ttf</span><br></pre></td></tr></table></figure><p><strong>刷新之后，就会变成中文了</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160149.png"></p><h2 id="zabbix快速监控主机"><a href="#zabbix快速监控主机" class="headerlink" title="zabbix快速监控主机"></a>zabbix快速监控主机</h2><h3 id="安装zabbix-agent"><a href="#安装zabbix-agent" class="headerlink" title="安装zabbix-agent"></a>安装zabbix-agent</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -ivh https://mirror.tuna.tsinghua.edu.cn/zabbix/zabbix/4.0/rhel/7/x86_64/zabbix-agent-4.0.11-1.el7.x86_64.rpm</span><br><span class="line">$ yum install -y zabbix-agent</span><br></pre></td></tr></table></figure><h3 id="编写zabbix-agent配置文件"><a href="#编写zabbix-agent配置文件" class="headerlink" title="编写zabbix-agent配置文件"></a>编写zabbix-agent配置文件</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">PidFile=/var/run/zabbix/zabbix_agentd.pid</span><br><span class="line">LogFile=/var/log/zabbix/zabbix_agentd.log</span><br><span class="line">LogFileSize=0</span><br><span class="line">Server=10.0.0.71</span><br><span class="line">ServerActive=10.0.0.71</span><br><span class="line">Hostname=web01</span><br><span class="line">Include=/etc/zabbix/zabbix_agentd.d/*.conf</span><br></pre></td></tr></table></figure><h3 id="启动zabbix-agent并检查"><a href="#启动zabbix-agent并检查" class="headerlink" title="启动zabbix-agent并检查"></a>启动zabbix-agent并检查</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl start zabbix-agent.service </span><br><span class="line">$ systemctl enable zabbix-agent.service</span><br><span class="line">$ netstat -lntup|grep 10050</span><br><span class="line"><span class="selector-tag">tcp</span>        0      0 0.0.0.0<span class="selector-pseudo">:10050</span>           0.0.0.0:*               <span class="selector-tag">LISTEN</span>      5468/<span class="selector-tag">zabbix_agentd</span>  </span><br><span class="line"><span class="selector-tag">tcp6</span>       0      0 :<span class="selector-pseudo">::10050</span>                :::*                    <span class="selector-tag">LISTEN</span>      5468/<span class="selector-tag">zabbix_agentd</span> </span><br></pre></td></tr></table></figure><h2 id="zabbix-web界面，添加主机"><a href="#zabbix-web界面，添加主机" class="headerlink" title="zabbix-web界面，添加主机"></a>zabbix-web界面，添加主机</h2><p><strong>创建主机</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160151.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160152.png"></p><p><strong>添加默认的模板，Template OS Linux</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160153.png"></p><p><strong>检查是否正常启动</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160154.png"></p><h2 id="自定义监控主机"><a href="#自定义监控主机" class="headerlink" title="自定义监控主机"></a>自定义监控主机</h2><h3 id="监控TCP11种状态集"><a href="#监控TCP11种状态集" class="headerlink" title="监控TCP11种状态集"></a>监控TCP11种状态集</h3><p><strong>命令行实现</strong></p><blockquote><ul><li><p>第一种方法：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ netstat -ant|grep -c LISTEN</span><br><span class="line">  21</span><br><span class="line">$ netstat -ant|grep -c  ESTABLISHED</span><br><span class="line">  2</span><br><span class="line">$ netstat -ant|grep -c TIME_WAIT</span><br><span class="line">  0</span><br></pre></td></tr></table></figure></li><li><p>第二种方法：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ netstat -ant|awk &#x27;NR&gt;2&#123;print $6&#125;&#x27;|grep &quot;ESTABLISHED&quot;|wc -l</span><br><span class="line">$ netstat -ant|awk &#x27;NR&gt;2&#123;print $6&#125;&#x27;|grep &quot;LISTEN&quot;|wc -l</span><br><span class="line">$ netstat -ant|awk &#x27;NR&gt;2&#123;print $6&#125;&#x27;|grep &quot;TIME_WAIT&quot;|wc -l</span><br></pre></td></tr></table></figure></li></ul></blockquote><h3 id="编写zabbix监控文件（传参形式）"><a href="#编写zabbix监控文件（传参形式）" class="headerlink" title="编写zabbix监控文件（传参形式）"></a>编写zabbix监控文件（传参形式）</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/zabbix/zabbix_agentd.d/tcp.status.conf                                     //自己创建</span><br><span class="line">UserParameter=ESTABLISHED,netstat -ant|awk &#x27;NR&gt;2&#123;print $6&#125;&#x27;|grep &quot;ESTABLISHED&quot;|wc -l</span><br><span class="line">UserParameter=LISTEN,netstat -ant|awk &#x27;NR&gt;2&#123;print $6&#125;&#x27;|grep &quot;LISTEN&quot;|wc -l</span><br><span class="line">UserParameter=TIME_WAIT,netstat -ant|awk &#x27;NR&gt;2&#123;print $6&#125;&#x27;|grep &quot;TIME_WAIT&quot;|wc -l</span><br></pre></td></tr></table></figure><h3 id="zabbix-server端命令行进行测试"><a href="#zabbix-server端命令行进行测试" class="headerlink" title="zabbix-server端命令行进行测试"></a>zabbix-server端命令行进行测试</h3><blockquote><p><strong>PS：如果在server端使用zabbix-get测试成功了，那么在web页面也就可以成功</strong></p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ yum install zabbix-get.x86_64 -y </span><br><span class="line">$ zabbix_get -s 10.0.0.7 -k LISTEN</span><br><span class="line">21</span><br><span class="line">$ zabbix_get -s 10.0.0.7 -k ESTABLISHED</span><br><span class="line">3</span><br><span class="line">$ zabbix_get -s 10.0.0.7 -k TIME_WAIT</span><br><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="web01主机中各个选项说明"><a href="#web01主机中各个选项说明" class="headerlink" title="web01主机中各个选项说明"></a>web01主机中各个选项说明</h3><blockquote><ul><li>应用集：模板中的标签</li><li>监控项：你要监控的内容（项目1，项目2）</li><li>触发器：设定某个监控项报警的阈值条件</li><li>图形：方便查看</li><li>聚集图形：把多个图形放在一起展示</li><li>模板：将一类的监控项汇总在一起，单独保存成一个集合，可以直接被其他主机调用</li></ul></blockquote><h3 id="web界面添加，创建新监控项ESTABLISHED、LISTEN、TIME-WAIT"><a href="#web界面添加，创建新监控项ESTABLISHED、LISTEN、TIME-WAIT" class="headerlink" title="web界面添加，创建新监控项ESTABLISHED、LISTEN、TIME_WAIT"></a>web界面添加，创建新监控项ESTABLISHED、LISTEN、TIME_WAIT</h3><p><strong>创建ESTABLISHED监控项，其余可以使用克隆监控项</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160155.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160156.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160157.png"></p><h3 id="克隆监控项"><a href="#克隆监控项" class="headerlink" title="克隆监控项"></a>克隆监控项</h3><p><strong>由于TCP有多种状态，需要添加多个监控项，所以我们可以选择使用克隆快速创建</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160158.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160159.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160200.png"></p><blockquote><p><strong>PS：其他状态监控项依次添加即可</strong></p></blockquote><h3 id="创建图形"><a href="#创建图形" class="headerlink" title="创建图形"></a>创建图形</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160201.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160202.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160203.png"></p><p><strong>查看图形</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160204.png"></p><h3 id="设置触发器"><a href="#设置触发器" class="headerlink" title="设置触发器"></a>设置触发器</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160205.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160206.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160207.png"></p><p><strong>刷新多几次，报警就会出现了</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160208.png"></p><h3 id="聚合图形"><a href="#聚合图形" class="headerlink" title="聚合图形"></a>聚合图形</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160209.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160210.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160211.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160212.png"></p><h2 id="邮件报警"><a href="#邮件报警" class="headerlink" title="邮件报警"></a>邮件报警</h2><h3 id="定义发件人"><a href="#定义发件人" class="headerlink" title="定义发件人"></a>定义发件人</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160213.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160214.png"></p><h3 id="定义收件人"><a href="#定义收件人" class="headerlink" title="定义收件人"></a>定义收件人</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160215.png"></p><p><strong>配置只需要开启动作即可</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160216.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160217.png"></p><p><strong>收到邮件</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160218.png"></p><h3 id="自定义报警内容"><a href="#自定义报警内容" class="headerlink" title="自定义报警内容"></a>自定义报警内容</h3><p><strong>定制报警内容：报警邮件标题可以使用默认信息，也可使用如何中文报警内容</strong></p><blockquote><p>zabbix官网：<a href="https://www.zabbix.com/documentation/4.0/zh/manual/appendix/macros/supported_by_location">https://www.zabbix.com/documentation/4.0/zh/manual/appendix/macros/supported_by_location</a></p></blockquote><p><strong>发送警告：</strong></p><blockquote><p>名称：Action-Email<br>默认标题：故障{TRIGGER.STATUS},服务器:{HOSTNAME1}发生: {TRIGGER.NAME}故障!<br>告警主机:{HOSTNAME1}<br>告警时间:{EVENT.DATE} {EVENT.TIME}<br>告警等级:{TRIGGER.SEVERITY}<br>告警信息: {TRIGGER.NAME}<br>告警项目:{TRIGGER.KEY1}<br>问题详情:{ITEM.NAME}:{ITEM.VALUE}<br>当前状态:{TRIGGER.STATUS}:{ITEM.VALUE1}<br>事件ID:{EVENT.ID}　</p></blockquote><p><strong>恢复警告：</strong></p><blockquote><p>恢复标题：恢复{TRIGGER.STATUS}, 服务器:{HOSTNAME1}: {TRIGGER.NAME}已恢复!<br>恢复信息：<br>告警主机:{HOSTNAME1}<br>告警时间:{EVENT.DATE} {EVENT.TIME}<br>告警等级:{TRIGGER.SEVERITY}<br>告警信息: {TRIGGER.NAME}<br>告警项目:{TRIGGER.KEY1}<br>问题详情:{ITEM.NAME}:{ITEM.VALUE}<br>当前状态:{TRIGGER.STATUS}:{ITEM.VALUE1}<br>事件ID:{EVENT.ID}</p></blockquote><p><strong>收到的内容</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160219.png"></p><h2 id="微信报警"><a href="#微信报警" class="headerlink" title="微信报警"></a>微信报警</h2><h3 id="查看配置文件里的脚本目录路径"><a href="#查看配置文件里的脚本目录路径" class="headerlink" title="查看配置文件里的脚本目录路径"></a>查看配置文件里的脚本目录路径</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ grep &quot;^AlertScriptsPath&quot; /etc/zabbix/zabbix_server.conf </span><br><span class="line">AlertScriptsPath=/usr/lib/zabbix/alertscripts</span><br></pre></td></tr></table></figure><p><strong>将wenxin.py放在zabbix特定目录</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ chmod u+x weixin<span class="selector-class">.py</span> </span><br><span class="line">$ ll weixin<span class="selector-class">.py</span></span><br><span class="line">-rwxr--r-- 1 root root 1114 Aug 28 10:<span class="number">37</span> weixin.py</span><br></pre></td></tr></table></figure><p><strong>脚本内容</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">$ cat weixin.py </span><br><span class="line">#!/<span class="selector-tag">usr</span>/<span class="selector-tag">bin</span>/<span class="selector-tag">env</span> <span class="selector-tag">python</span></span><br><span class="line"><span class="selector-id">#-</span>*<span class="selector-tag">-</span> <span class="selector-tag">coding</span>: <span class="selector-tag">utf-8</span> <span class="selector-tag">-</span>*<span class="selector-tag">-</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">requests</span></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">sys</span></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">os</span></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">json</span></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">logging</span></span><br><span class="line"> </span><br><span class="line">logging.basicConfig(level = logging.DEBUG, format = &#x27;%(asctime)s, %(filename)s, %(levelname)s, %(message)s&#x27;,</span><br><span class="line">       datefmt = &#x27;%a, %d %b %Y %H:%M:%S&#x27;,</span><br><span class="line">       filename = os.path.join(&#x27;/tmp&#x27;,&#x27;weixin.log&#x27;),</span><br><span class="line">       filemode = &#x27;a&#x27;)</span><br><span class="line"></span><br><span class="line">corpid=&#x27;微信企业号corpid&#x27;</span><br><span class="line">appsecret=&#x27;应用的Secret&#x27;</span><br><span class="line">agentid=应用的id</span><br><span class="line"></span><br><span class="line">#获取<span class="selector-tag">accesstoken</span></span><br><span class="line">token_url=&#x27;https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid=&#x27; + corpid + &#x27;&amp;corpsecret=&#x27; + appsecret</span><br><span class="line">req=requests.get(token_url)</span><br><span class="line">accesstoken=req.json()[&#x27;access_token&#x27;]</span><br><span class="line"></span><br><span class="line">#发送消息</span><br><span class="line">msgsend_url=&#x27;https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=&#x27; + accesstoken</span><br><span class="line"></span><br><span class="line">touser=sys.argv[1]</span><br><span class="line">subject=sys.argv[2]</span><br><span class="line">#toparty=&#x27;3|4|5|6&#x27;</span><br><span class="line">message=sys.argv[2] + &quot;\n\n&quot; +sys.argv[3]</span><br><span class="line"></span><br><span class="line">params=&#123;</span><br><span class="line">    &quot;<span class="selector-tag">touser</span>&quot;: <span class="selector-tag">touser</span>,</span><br><span class="line">    #&quot;<span class="selector-tag">toparty</span>&quot;: <span class="selector-tag">toparty</span>,</span><br><span class="line">    &quot;<span class="selector-tag">msgtype</span>&quot;: &quot;<span class="selector-tag">text</span>&quot;,</span><br><span class="line">    &quot;<span class="selector-tag">agentid</span>&quot;: <span class="selector-tag">agentid</span>,</span><br><span class="line">    &quot;<span class="selector-tag">text</span>&quot;: &#123;</span><br><span class="line">         &quot;content&quot;: message</span><br><span class="line">     &#125;,</span><br><span class="line">    &quot;<span class="selector-tag">safe</span>&quot;<span class="selector-pseudo">:0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">req=requests.post(msgsend_url, data=json.dumps(params))</span><br><span class="line"></span><br><span class="line">logging.info(&#x27;sendto:&#x27; + touser + &#x27;;;subject:&#x27; + subject + &#x27;;;message:&#x27; + message)</span><br></pre></td></tr></table></figure><h3 id="配置发信人"><a href="#配置发信人" class="headerlink" title="配置发信人"></a>配置发信人</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160220.png">    </p><p><strong>脚本参数</strong></p><blockquote><p>  {ALERT.SENDTO}<br>  {ALERT.SUBJECT}<br>  {ALERT.MESSAGE}</p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160221.png"></p><h3 id="登录企业微信公众号添加账号"><a href="#登录企业微信公众号添加账号" class="headerlink" title="登录企业微信公众号添加账号"></a>登录企业微信公众号添加账号</h3><p><strong>1. 注册账号</strong></p><blockquote><p>路径：<a href="https://work.weixin.qq.com/wework_admin/loginpage_wx">https://work.weixin.qq.com/wework_admin/loginpage_wx</a></p></blockquote><p><strong>2. 登录后在应用管理创建新应用</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160222.png"></p><p><strong>3. 上传logo，填写应用名称，应用介绍等</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160223.png"></p><p><strong>4. 查看启动应用</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160224.png"></p><p><strong>4. 接口调用测试</strong></p><blockquote><p>路径：<a href="http://work.weixin.qq.com/api/devtools/devtool.php">http://work.weixin.qq.com/api/devtools/devtool.php</a><br>corpid：填写的是企业ID，位置–&gt;我的企业–&gt;企业信息–&gt;往下拉到最后就可看到<br>corpsecret：填写之前创建应用得到的Secret值</p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160225.png"></p><h3 id="添加成员"><a href="#添加成员" class="headerlink" title="添加成员"></a>添加成员</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160226.png"></p><h3 id="查看自己的账号"><a href="#查看自己的账号" class="headerlink" title="查看自己的账号"></a>查看自己的账号</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160227.png"></p><h3 id="修改脚本里的信息"><a href="#修改脚本里的信息" class="headerlink" title="修改脚本里的信息"></a>修改脚本里的信息</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cat weixin.py </span><br><span class="line">corpid=&#x27;微信企业号corpid&#x27;</span><br><span class="line">appsecret=&#x27;应用的Secret&#x27;</span><br><span class="line">agentid=应用的id</span><br></pre></td></tr></table></figure><h3 id="发信息测试"><a href="#发信息测试" class="headerlink" title="发信息测试"></a>发信息测试</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ pwd</span><br><span class="line">/<span class="selector-tag">usr</span>/<span class="selector-tag">lib</span>/<span class="selector-tag">zabbix</span>/<span class="selector-tag">alertscripts</span></span><br><span class="line">$ python weixin.py 你的账号 &#x27;发信测试&#x27;  ‘微信测试消息’</span><br></pre></td></tr></table></figure><p><strong>如果出现以下报错，则需要安装python-pip，接着安装request模块</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126163319.png"></p> <figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ yum install python-pip -y</span><br><span class="line">$ pip install requests</span><br></pre></td></tr></table></figure><h3 id="微信号查看"><a href="#微信号查看" class="headerlink" title="微信号查看"></a>微信号查看</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160229.png"></p><h3 id="发送到整个微信组"><a href="#发送到整个微信组" class="headerlink" title="发送到整个微信组"></a>发送到整个微信组</h3><p><strong>1. 导出通讯录</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160230.png"></p><p><strong>2. 将导出Excel表格中的的账号，写入文件中</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ pwd</span><br><span class="line">/usr/lib/zabbix/alertscripts</span><br><span class="line">$ cat test<span class="selector-class">.txt</span></span><br><span class="line">FanW</span><br><span class="line">FanXig</span><br></pre></td></tr></table></figure><p><strong>3. 编写for.sh脚本</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cat for<span class="selector-class">.sh</span> </span><br><span class="line">#!/bin/bash</span><br><span class="line">for <span class="selector-tag">i</span> in $(cat test<span class="selector-class">.txt</span>)</span><br><span class="line">do</span><br><span class="line">   ./weixin.py $&#123;i&#125; $1 $2 </span><br><span class="line">done</span><br></pre></td></tr></table></figure><p><strong>4. 查看微信信息</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160231.png"></p><h3 id="zabbix-web配置收信人"><a href="#zabbix-web配置收信人" class="headerlink" title="zabbix-web配置收信人"></a>zabbix-web配置收信人</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160232.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160233.png"></p><p><strong>查看微信信息</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160234.png"></p><h2 id="自定义模板"><a href="#自定义模板" class="headerlink" title="自定义模板"></a>自定义模板</h2><h3 id="创建模板"><a href="#创建模板" class="headerlink" title="创建模板"></a>创建模板</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160235.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160236.png"></p><h3 id="创建各个选项"><a href="#创建各个选项" class="headerlink" title="创建各个选项"></a>创建各个选项</h3><p><strong>创建应用集,监控项,触发器,图形都跟上面讲解的一样,只是现在定义模板来给其他主机使用,这样可以方便许多</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160237.png"></p><h3 id="应用模板"><a href="#应用模板" class="headerlink" title="应用模板"></a>应用模板</h3><blockquote><ol><li><p>创建另一台web主机，命名为web02，地址10.0.0.8</p></li><li><p>设置yum源: rpm -ivh <a href="https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/4.0/rhel/5/x86_64/zabbix-release-4.0-1.el5.noarch.rpm">https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/4.0/rhel/5/x86_64/zabbix-release-4.0-1.el5.noarch.rpm</a></p></li><li><p>下载客户端: yum install -y zabbix-agent</p></li><li><p>创建监控项</p> <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cat tcp<span class="selector-class">.status</span><span class="selector-class">.conf</span> </span><br><span class="line">UserParameter=ESTABLISHED,netstat -ant|awk &#x27;NR&gt;2&#123;print $6&#125;&#x27;|grep &quot;ESTABLISHED&quot;|wc -l</span><br><span class="line">UserParameter=LISTEN,netstat -ant|awk &#x27;NR&gt;2&#123;print $6&#125;&#x27;|grep &quot;LISTEN&quot;|wc -l</span><br><span class="line">UserParameter=TIME_WAIT,netstat -ant|awk &#x27;NR&gt;2&#123;print $6&#125;&#x27;|grep &quot;TIME_WAIT&quot;|wc -l</span><br></pre></td></tr></table></figure></li></ol></blockquote><h3 id="创建新的主机导入模板"><a href="#创建新的主机导入模板" class="headerlink" title="创建新的主机导入模板"></a>创建新的主机导入模板</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160238.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160239.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160240.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160241.png"></p><h2 id="声音报警"><a href="#声音报警" class="headerlink" title="声音报警"></a>声音报警</h2><h3 id="web页面提示声音报警"><a href="#web页面提示声音报警" class="headerlink" title="web页面提示声音报警"></a>web页面提示声音报警</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210126160242.png"></p><h3 id="修改报警铃声"><a href="#修改报警铃声" class="headerlink" title="修改报警铃声"></a>修改报警铃声</h3><blockquote><ol><li>找到文件所在目录</li></ol><ul><li><p>首先在页面按F12—用箭头–选中模式Elements(元素)–再点击页面中的alarm_disaster.mp3</p></li><li><p>使用find命令</p>   <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ find / -type f -name &#x27;alarm_average.mp3&#x27;</span><br><span class="line">/<span class="selector-tag">usr</span>/<span class="selector-tag">share</span>/<span class="selector-tag">zabbix</span>/<span class="selector-tag">audio</span>/<span class="selector-tag">alarm_average</span><span class="selector-class">.mp3</span></span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li><p>将原有声音文件做替换</p>  <figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv yingyue<span class="selector-class">.mp3</span> alarm_disaster<span class="selector-class">.mp3</span></span><br></pre></td></tr></table></figure></li><li><p>需要清除浏览器缓存，再进行测试</p></li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo搭建静态博客</title>
      <link href="2021/01/25/hexo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
      <url>2021/01/25/hexo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo使用melody主题搭建博客"><a href="#Hexo使用melody主题搭建博客" class="headerlink" title="Hexo使用melody主题搭建博客"></a>Hexo使用melody主题搭建博客</h1><h2 id="Hexo介绍"><a href="#Hexo介绍" class="headerlink" title="Hexo介绍"></a>Hexo介绍</h2><p>Hexo是一个快速、简洁且高效的博客框架，可以通过Markdown解析语法，生成对应的html，安装Hexo只需要几分钟时间，如果只是单单写自己的文章，很推荐使用Hexo</p><p>Hexo基础很容易搭建，只需要几个步骤，但后续的其他（评论设置、搜索设置以及搬迁到自己的个人域名等…）还是需要花一些时间去操作，并没有想象的简单。</p><p>melody是简洁美观的主题，而且支持很多功能，只需要套用即可，当然Hexo也有好多<a href="https://hexo.io/themes/">主题</a>，操作步骤跟melody主题也是相差不多。</p><blockquote><p>hexo-theme-melody主题下载：<a href="https://github.com/Molunerfinn/hexo-theme-melody">https://github.com/Molunerfinn/hexo-theme-melody</a></p><p>hexo-thmem-melody主题文档：<a href="https://molunerfinn.com/hexo-theme-melody-doc/theme-pages.html">https://molunerfinn.com/hexo-theme-melody-doc/theme-pages.html</a></p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124150916.png"></p><h2 id="下载-git和node"><a href="#下载-git和node" class="headerlink" title="下载 git和node"></a>下载 git和node</h2><p>Hexo是基于与node.js和git来搭建，所以需要安装这些应用程序（下述基于Linux搭建，Windows和Mac都差不多）</p><p><strong>下载git</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y git</span><br></pre></td></tr></table></figure><p><strong>下载node</strong></p><blockquote><p>下载官方地址：<a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a></p></blockquote><p><img src="https://i.loli.net/2021/01/12/hIud9SVUMOB3tRf.png"></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://npm.taobao.org/mirrors/node/v14.<span class="number">15.4</span>/node-v14.<span class="number">15.4</span>-linux-x64.tar.xz</span><br><span class="line">$ tar xf node-v14.<span class="number">15.4</span>-linux-x64.tar.xz           //下载之后解压</span><br><span class="line">$ mv node-v14.<span class="number">15.4</span>-linux-x64 /usr/local           //将解药的包移动到/usr/local</span><br><span class="line">$ cd /usr/local</span><br><span class="line">$ ln -s node-v14.<span class="number">15.4</span>-linux-x64 node              //建立软链接</span><br></pre></td></tr></table></figure><p><strong>Linux会默认有安装node，将旧版本的删除，安装最新的</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ rm -rf /usr/bin/node &amp;&amp; rm -rf /usr/bin/npm</span><br><span class="line">$ ln -s /usr/local/node/bin/node /usr/bin/node</span><br><span class="line">$ ln -s /usr/local/node/bin/npm /usr/bin/npm</span><br></pre></td></tr></table></figure><p><strong>设置淘宝的cnpm加速源，通过cnpm下载hexo会更加快速</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line">$ ln -s /usr/local/node/bin/cnpm /usr/bin/cnpm</span><br></pre></td></tr></table></figure><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p><strong>安装hexo并初始化目录</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install -g hexo-cli</span><br><span class="line">$ ln -s /usr/local/node/bin/hexo /usr/bin/hexo</span><br><span class="line"></span><br><span class="line">$ mkdir /blog</span><br><span class="line">$ hexo init /blog      //初始化文件夹</span><br></pre></td></tr></table></figure><p><strong>初始化目录下的文件如下，文件下的内容可以参考中文官网的解释<a href="https://hexo.io/zh-cn/docs/setup">Setup</a></strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">├── _config<span class="selector-class">.yml</span></span><br><span class="line">├── package<span class="selector-class">.json</span></span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><blockquote><p>_config.yml：网站的配置信息，大部分配置都会在这个文件</p><p>package.json：应用程序信息，可以移除自己安装的一些插件</p><p>scaffolads：模板目录，可通过模板改变你每次生成的文章内容</p><p>source：用户资源存放的地址，如（文档、分类、标签）</p><p>themes：主题目录，根据不同的主题来生成静态页面</p></blockquote><p><strong>生成一个页面，并发布到本地</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &quot;新的页面&quot;             <span class="comment">//新建一个页面，会放入到source/_posts/下</span></span><br><span class="line">$ hexo g                        <span class="comment">//构建静态文件</span></span><br><span class="line">$ hexo s                        <span class="comment">//启动服务，默认情况下，访问地址为：http://localhost:4000/</span></span><br></pre></td></tr></table></figure><p><strong>浏览器输入http:localhost:4000，搭建成功</strong></p><blockquote><p>我使用的是购买服务器地址来访问，不是在本地localhost，但操作都是一样的</p><p>注意：记得在安全组放通4000端口即可</p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124164935.png"></p><h3 id="hexo的命令说明"><a href="#hexo的命令说明" class="headerlink" title="hexo的命令说明"></a>hexo的命令说明</h3><p><strong>这里只列出了一些常用的指令，如果想更详细的说明，可到中文官网查看<a href="https://hexo.io/zh-cn/docs/commands">Commands</a></strong></p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>hexo init [folder]</td><td>初始化一个网站目录，如果没有指明目录，则在当前目录下生成</td></tr><tr><td>hexo new [layout]</td><td>新建一篇文章</td></tr><tr><td>hexo g或generate</td><td>生成静态文件</td></tr><tr><td>hexo s或server</td><td>启动服务，通过浏览器访问地址</td></tr><tr><td>hexo d或deploy</td><td>部署网站，可以部署到GitHub或Coding上</td></tr><tr><td>hexo clean</td><td>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)</td></tr><tr><td>hexo publish [layout] <filename></td><td>发表草稿</td></tr><tr><td>hexo list</td><td>列出网站资料</td></tr><tr><td>hexo version</td><td>显示hexo版本</td></tr></tbody></table><h2 id="使用melody主题"><a href="#使用melody主题" class="headerlink" title="使用melody主题"></a>使用melody主题</h2><p><strong>下载melody主题和渲染插件</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git clone -<span class="selector-tag">b</span> master https://github.com/Longlongyu/hexo-theme-Cxo themes/Cxo</span><br><span class="line">$ cnpm install hexo-renderer-pug hexo-renderer-stylus</span><br><span class="line"></span><br><span class="line">$ vim /blog/_config.xml     //hexo初始的目录修改配置文件</span><br><span class="line">theme: melody               //改成melody</span><br></pre></td></tr></table></figure><p><strong>主题有两个hexo版本，对应你的版本进行下载和生成对应的文件</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124170458.png"></p><blockquote><p>如果是跟着笔者操作部署的，那么版本应该是4.2.0版本</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo version</span><br><span class="line">hexo-cli: <span class="number">4.2</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure><p>按照文档的配置说明，Hexo低于5.0的，推荐将**<code>./node_modules/hexo-theme-melody/_config.yml</code><strong>复制到hexo工作目录下</strong><code>source/_data/melody.yml</code><strong>，如果不存在</strong><code>source/_data</code>**目录，则自己创建一个</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd /blog/source/</span><br><span class="line">$ mkdir _data</span><br><span class="line">$ cp ./node_modules/hexo-theme-melody/_config.yml /blog/source/_data/melody.yml</span><br></pre></td></tr></table></figure><h3 id="主题页面和主题功能配置"><a href="#主题页面和主题功能配置" class="headerlink" title="主题页面和主题功能配置"></a>主题页面和主题功能配置</h3><p>melody主题设置标签页、分类页、幻听片Slides页面、相册、404页面配置，可以通过作者<a href="https://molunerfinn.com/hexo-theme-melody-doc/theme-pages.html">主题文档</a>来一步步操作，添加自己需要的页面，过程很简单只需要跟着操作就行</p><p>主题功能配置有语言、社交图标、导航菜单、文章版权、友链、鼠标点击特效等，需要自己花时间去操作添加，因为每个人的需求都不一样，所以这里就不再操作演示</p><h2 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h2><p><strong>创建一个仓库，名称为：用户名+github.io，这样github才知道你是要部署静态页面</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124170624.png"></p><p><strong>编辑初始目录下的_config.yml文件</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ vim _config<span class="selector-class">.yml</span></span><br><span class="line">deploy:</span><br><span class="line">  type: git                                                        </span><br><span class="line">  repo: https://github.com/zsjmal2316/zsjmal2316.github.io.git      </span><br><span class="line">  branch: master                                                 </span><br></pre></td></tr></table></figure><blockquote><p>type：部署的类型为git</p><p>repo：仓库地址</p><p>branch：分支默认为master即可</p></blockquote><p><strong>通过命令部署上github</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d          <span class="comment">//因为设置了_config.yml文件，所以会自动部署到github</span></span><br></pre></td></tr></table></figure><blockquote><ol><li><p>如果出现部署错误，可能是没有定义用户邮箱和用户名（邮箱不是随意的，而是绑定你的github，可以充当账号登录的邮箱）</p><ul><li><p>git config –global user.email “用户邮箱”</p></li><li><p>git config –global user.name “用户名”</p></li></ul></li><li><p>如果已经设置，此时会让你输入账号和密码，输入之后即部署上你的仓库中</p></li></ol></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124231724.png"></p><h2 id="通过SSH免密钥部署Github"><a href="#通过SSH免密钥部署Github" class="headerlink" title="通过SSH免密钥部署Github"></a>通过SSH免密钥部署Github</h2><p><strong>生成非对称密钥rsa</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-<span class="selector-tag">keygen</span> -t rsa -D &quot;随意写&quot;        <span class="comment">//接下来的全部回车即可</span></span><br></pre></td></tr></table></figure><p><strong>查看密钥生成的公钥</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124171727.png"></p><p><strong>复制公钥到仓库中</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124171930.png"></p><blockquote><p>Title：可以自己随意起</p><p>Allow write access：需要勾选</p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124172039.png"></p><p><strong>编辑初始目录下的_config.yml文件</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ vim _config<span class="selector-class">.yml</span></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:zsjmal2316/zsjmal2316.github.io.git    //改成ssh地址即可</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><blockquote><p><strong>PS：后续的部署就不需要再输入用户名和密码了</strong></p></blockquote><h2 id="个人域名托管至GitHub"><a href="#个人域名托管至GitHub" class="headerlink" title="个人域名托管至GitHub"></a>个人域名托管至GitHub</h2><p>个人域名可以托管到GitHub中，然后就可以通过自己的购买的域名进行访问，当然不使用自己的域名，用GitHub上的（用户名.github.io）访问也没有问题，如果有自己域名的还是推荐使用自己的域名，方便记忆</p><p>笔者的域名是在腾讯云买的，所以下述的域名解析是腾讯云的，当然其他平台购买的域名也都是这么操作</p><p><strong>域名解析，通过CNAME记录将github默认的域名指向自己的域名</strong></p><blockquote><p>注意：添加解析之后，需要一段时间才能访问自己的网站，可能要10个小时或更久，如果你网页显示的是503错误（表示：服务器当前忙，暂时无法响应服务器），代表是服务解析的还没成功，需要等待！</p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124204240.png"></p><p><strong>在初始目录下source目录中添加CNAME文件</strong></p><blockquote><p>CNAME：内容是自己的域名</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cd source/</span><br><span class="line">$ ls</span><br><span class="line">404  categories  CNAME  _posts  tags</span><br><span class="line"></span><br><span class="line">$ cat CNAME </span><br><span class="line">myboke<span class="selector-class">.ink</span></span><br></pre></td></tr></table></figure></blockquote><p><strong>部署上github</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p><strong>查看是否部署成功，仓库–&gt;settings</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124205127.png"></p><h2 id="分享系统"><a href="#分享系统" class="headerlink" title="分享系统"></a>分享系统</h2><p>通过Share.js进行分享链接，可参考文档<a href="https://github.com/overtrue/share.js/">Share.js</a></p><p><strong>安装Share.js</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install social-share<span class="selector-class">.js</span></span><br></pre></td></tr></table></figure><p><strong>在source/_data/melody.yml下开启sharejs</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ vim melody<span class="selector-class">.yml</span></span><br><span class="line">sharejs:</span><br><span class="line">  enable: true</span><br><span class="line">  disabled_sites:   //过滤不分享的站点</span><br></pre></td></tr></table></figure><p><strong>浏览结果</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124230345.png"></p><h2 id="评论系统Gitalk"><a href="#评论系统Gitalk" class="headerlink" title="评论系统Gitalk"></a>评论系统Gitalk</h2><p>melody主题（第三方）支持很多评论系统，我选择的是<a href="https://github.com/gitalk/gitalk">Gitalk</a>系统，也是部署在GitHub上，通过github Oauth应用的client id和secret值进行连接.</p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124205524.png"></p><p><strong>进入个人设置，选择Developer settings–&gt;OAuth Apps–&gt;New OAuth APP</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124210228.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124210432.png"></p><blockquote><p>Application name：可以自己随意起名</p><p>Homepage URL：填写github默认的域名</p><p>Application description：应用描述，可以自己随意</p><p>Authorization callback URL：回调的网址，就写自己的个人域名</p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124210538.png"></p><p><strong>在source/_data/melody.yml下开启Gitalk</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ cd /blog/source/_data</span><br><span class="line">$ vim melody<span class="selector-class">.yml</span></span><br><span class="line">gitalk:</span><br><span class="line">  enable: true</span><br><span class="line">  client_id: <span class="string">&#x27;创建的client_id&#x27;</span></span><br><span class="line">  client_secret: <span class="string">&#x27;创建的client_secret&#x27;</span></span><br><span class="line">  repo: <span class="string">&#x27;你的网站仓库名&#x27;</span></span><br><span class="line">  owner: <span class="string">&#x27;用户名&#x27;</span></span><br><span class="line">  admin: [ <span class="string">&#x27;用户名&#x27;</span> ]</span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124211239.png"></p><p><strong>浏览自己的网站进行测试，登录成功之后，没有报错则成功部署Gitalk</strong></p><blockquote><p>如果出现Not found或其他问题，请确认自己域名设置和仓库名以及用户名有没有填写错误</p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124211501.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124211845.png"></p><h2 id="搜索功能Algolia与local-search"><a href="#搜索功能Algolia与local-search" class="headerlink" title="搜索功能Algolia与local search "></a>搜索功能Algolia与local search </h2><p>melody主题提供了两种搜索功能，一个是Algolia，一个是local search。这里推荐使用local search，一是方便且也快速，二是相对简单。Algolia虽也快，但毕竟是国外的，搜索过程中需要初始化一些时间。</p><h3 id="algolia设置"><a href="#algolia设置" class="headerlink" title="algolia设置"></a>algolia设置</h3><p>algolia是一家为网站与移动应用提供托管式搜索API的初创企业，网站或移动应用只需嵌入简单代码数分钟就可以实现搜索功能</p><p>algolia有两种安装，即<a href="https://github.com/oncletom/hexo-algolia">hexo-algolia</a>和<a href="https://github.com/LouisBarranqueiro/hexo-algoliasearch">hexo-algoliasearch</a>，我使用的是后者，其实两者都相差不多</p><p><strong>登录<a href="https://www.algolia.com/users/sign_in%EF%BC%8C%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87github%E5%92%8CGoogle%E8%B4%A6%E5%8F%B7%E7%99%BB%E5%BD%95">https://www.algolia.com/users/sign_in，可以通过github和Google账号登录</a></strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124220640.png"></p><p><strong>登录后，创建一个index，可以随意起名</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124221025.png"></p><p><strong>选择侧边栏的API Keys</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124221121.png"></p><p><strong>选择All API Keys，然后新建一个API Key</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124221701.png"></p><p><strong>安装hexo-algoliasearch</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install hexo-algoliasearch --save</span><br></pre></td></tr></table></figure><p><strong>在初始目录下的_config.yml添加hexo-algoliasearch插件</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ vim _config<span class="selector-class">.yml</span></span><br><span class="line">plugins:</span><br><span class="line">  - hexo-algoliasearch</span><br></pre></td></tr></table></figure><p><strong>在初始目录下的_config.yml添加algolia配置</strong></p><blockquote><p>在你的Your API Keys中，都有以下的参数，其余配置说明可以到<a href="https://github.com/LouisBarranqueiro/hexo-algoliasearch">hexo-algoliasearch</a>查看</p></blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ vim _config<span class="selector-class">.yml</span></span><br><span class="line">algolia:</span><br><span class="line">  appId: <span class="string">&quot;Application ID&quot;</span></span><br><span class="line">  apiKey: <span class="string">&quot;选择你创建的API Key&quot;</span></span><br><span class="line">  adminApiKey: <span class="string">&quot;Admin API Key&quot;</span></span><br><span class="line">  chunkSize: <span class="number">5000</span></span><br><span class="line">  indexName: <span class="string">&quot;创建的index名称&quot;</span></span><br><span class="line">  fields:</span><br><span class="line">    - content:strip</span><br><span class="line">    - slug</span><br><span class="line">    - tags</span><br><span class="line">    - title</span><br><span class="line">    - path</span><br></pre></td></tr></table></figure><p><strong>在source/_data/melody.yml下开启algolia</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ vim melody<span class="selector-class">.yml</span></span><br><span class="line">algolia_search:</span><br><span class="line">  enable: true                                //开启algolia搜索</span><br><span class="line">  hits:                                       //每次搜索显示的页面</span><br><span class="line">    per_page: <span class="number">10</span></span><br><span class="line">  labels:</span><br><span class="line">    input_placeholder: Search for Posts      </span><br><span class="line">    hits_empty: <span class="string">&quot;We didn&#x27;t find any results for the search: $&#123;query&#125;&quot;</span> # if there are no result</span><br><span class="line">    hits_stats: <span class="string">&quot;$&#123;hits&#125; results found in $&#123;time&#125; ms&quot;</span></span><br></pre></td></tr></table></figure><p><strong>部署上algolia，需要将文件的索引上传到algolia，这样才能搜索的到文章标题</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g </span><br><span class="line">$ hexo algolia</span><br><span class="line">INFO <span class="selector-attr">[hexo-algolia]</span> Testing HEXO_ALGOLIA_INDEXING_KEY permissions.</span><br><span class="line">INFO start processing</span><br><span class="line">INFO <span class="selector-attr">[hexo-algolia]</span> 30 records to index (post, page).</span><br><span class="line">INFO <span class="selector-attr">[hexo-algolia]</span> Indexing chunk 1 of 1 (29 records).</span><br><span class="line">............</span><br><span class="line">INFO <span class="selector-attr">[hexo-algolia]</span> Indexing done.</span><br></pre></td></tr></table></figure><blockquote><p>如果出现报错，则添加HEXO_ALGOLIA_INDEXING_KEY=API Key（你创建的Key）</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ export HEXO_ALGOLIA_INDEXING_KEY=API Key</span><br><span class="line">$ hexo algolia</span><br></pre></td></tr></table></figure><p><strong>浏览algolia，查看是否成功</strong></p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124223447.png"></p><h3 id="local-search设置"><a href="#local-search设置" class="headerlink" title="local search设置"></a>local search设置</h3><p>local search在本地，所以搜索站点上的标题内容会更加快速</p><p><strong>安装hexo-generator-search</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p><strong>在初始目录下的_config.yml添加hexo-generator-search参数</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ vim _config<span class="selector-class">.yml</span></span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: <span class="number">10000</span></span><br><span class="line">  content: true</span><br></pre></td></tr></table></figure><p><strong>在source/_data/melody.yml下开启local search</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ vim melody<span class="selector-class">.yml</span></span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  labels:</span><br><span class="line">    input_placeholder: Search for Posts</span><br><span class="line">    hits_empty: <span class="string">&quot;We didn&#x27;t find any results for the search: $&#123;query&#125;&quot;</span></span><br></pre></td></tr></table></figure><p><strong>部署上网站</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p><strong>查看搜索结果</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210124225045.png"></p><h2 id="解决图片多余的描述名称"><a href="#解决图片多余的描述名称" class="headerlink" title="解决图片多余的描述名称"></a>解决图片多余的描述名称</h2><p>我是通过在本地Typora工具写文章，然后通过PicGo图床工具上传到阿里云OSS，接着写完整了之后才部署上网站，每次复制图片都会有描述的名称</p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210125193508.png"></p><p>上传到网站之后也是有图片的描述名称，看别人博客的文章是直接删除括号里内容[image-xxx]，但是这样太繁琐了，所以自己通过vim的替换方法替换全部的内容（如：还有其他简单的方法，可以在留言告知我，谢谢！）</p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210125193050.png"></p><p><strong>替换的方法，vim编辑一个文章，然后复制下面的替换方法，就可以批量替换成[]</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vim xxx</span><br><span class="line">:%s#\[image.*\](#[](#g</span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210125193945.png"></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora+PicGo+图床</title>
      <link href="2021/01/23/Typora-PicGo-%E5%9B%BE%E5%BA%8A/"/>
      <url>2021/01/23/Typora-PicGo-%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="Typora-PicGo-图床"><a href="#Typora-PicGo-图床" class="headerlink" title="Typora+PicGo+图床"></a>Typora+PicGo+图床</h1><h2 id="Typora介绍"><a href="#Typora介绍" class="headerlink" title="Typora介绍"></a>Typora介绍</h2><p>对于Typora的介绍，首先你得知道什么是Markdown？</p><blockquote><p>Markdown是一种轻量标记语言，通过简单的语法，使用普通文本的得到一定的格式，可以很容易就上手写笔记，比如通过#号代表的是一级标题，通过##号代表的是二级标记，现今很多的文章都基于Markdown来写，统一的格式，不管在哪里写文章，都可以完美的呈现出来</p><p>学习Markdown：<a href="https://www.runoob.com/markdown/md-tutorial.html">Markdown教程</a></p><p>学习Typora：<a href="https://www.typora.io/">官网</a></p><p>Typora下载地址：<a href="https://www.typora.io/#windows%EF%BC%88%E6%A0%B9%E6%8D%AE%E8%87%AA%E5%B7%B1%E7%9A%84%E7%B3%BB%E7%BB%9F%E4%B8%8B%E8%BD%BD%EF%BC%8C%E5%AE%89%E8%A3%85%E9%83%BD%E6%98%AF%E4%B8%8B%E4%B8%80%E6%AD%A5%E5%8D%B3%E5%8F%AF%EF%BC%89">https://www.typora.io/#windows（根据自己的系统下载，安装都是下一步即可）</a></p></blockquote><p>Typora是一款简洁的Markdown编辑器，它提供了实时预览功能，可以帮助你在写文档的时候专注于内容的本身，支持<a href="https://support.typora.io/Auto-Numbering/">标题自动编号</a>，支持<a href="https://support.typora.io/Resize-Image/">图片缩放</a>，<strong>还有该文章要说明的图床功能，typora都支持</strong>，当然包括你想要的写法，typora几乎都有，这里就不一一介绍了</p><p>除了这些，typora也有许多绚丽的<a href="https://theme.typora.io/">主题</a>，可以实时时刻的渲染。不过我觉得不好的一点是，创建图表功能，内面的内容不能回车写，希望后续能出现这个功能</p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123173250.png"></p><h2 id="PicGo介绍"><a href="#PicGo介绍" class="headerlink" title="PicGo介绍"></a>PicGo介绍</h2><p>PicGo是一款图床工具，就是可以把本地图片转换成URL链接上传到图床中，它是一款用Electron-vue开发的软件，支持七牛云、腾讯云COS、GitHub、Gitee、SM.MS、阿里云OSS等图床，简洁又易用，功能也十分强大。</p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123174143.png"></p><blockquote><p>PicGo下载地址：<a href="https://github.com/Molunerfinn/PicGo/releases%EF%BC%88%E6%A0%B9%E6%8D%AE%E7%9A%84%E8%87%AA%E5%B7%B1%E7%9A%84%E7%B3%BB%E7%BB%9F%E4%B8%8B%E8%BD%BD%EF%BC%89">https://github.com/Molunerfinn/PicGo/releases（根据的自己的系统下载）</a></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123175343.png"></p><p><strong>注意：安装的第二步，选择位置不要选择默认的位置，否则可能会导致权限的问题</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123175938.png"></p></blockquote><h2 id="配置SM-MS、GitHub与阿里云OSS图床"><a href="#配置SM-MS、GitHub与阿里云OSS图床" class="headerlink" title="配置SM.MS、GitHub与阿里云OSS图床"></a>配置SM.MS、GitHub与阿里云OSS图床</h2><h3 id="SM-MS图床配置"><a href="#SM-MS图床配置" class="headerlink" title="SM.MS图床配置"></a>SM.MS图床配置</h3><p>PicGo默认的图床，在我看来，SM.MS是最简单的图床，只需要配置一个Token（令牌）就可以了，也是一个免费的图床，上传的速度也还可以，图床也有5G存储空间，一般的图片也才几十KB或者几百KB，所以图片存储一般足够用了（注意：每张图片大小有5M的限制，每次最多上传10张图片）。</p><p>当然有一个弊端，就是它是国外图床，访问图片需要基于你的网络才能看到（如果网络不好可能会导致看不到图片），当然要看你是写的文章是在本地，还是在你购买的服务器上，如果你购买的服务器能够访问得到SM.MS，那么观看文章图片应该是没有问题的</p><p><strong>SM.MS注册</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123182052.png"></p><p><strong>进入视图，获取Token</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123182202.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123182230.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123182251.png"></p><p><strong>打开PicGo图床工具，将复制的Token粘贴到设定的Token</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123182438.png"></p><p><strong>配置Typora</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123182931.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123183401.png"></p><p><strong>点击图片右键上传即可上传到SM.MS图床，当然如果想要全部上传则选择格式–&gt;图像–&gt;上传本地所有图片</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123211805.png"></p><h3 id="GitHub图床"><a href="#GitHub图床" class="headerlink" title="GitHub图床"></a>GitHub图床</h3><p>GitHub也可以当做图床使用，同样是一个免费的，配置比SM.MS麻烦些，相信大家在想使用GitHub图床时折腾不少时间（包括我自己），主要是要在PicGo配置正确，简单是简单，但是出现问题可能就需要花一些时间了</p><p>GitHub也有一个弊端，因为也是在国外的，不使用它的原因就是因为它很慢，当然可能也有加速的方法，只是我不知道罢了</p><p><strong>创建一个创库</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123200935.png"></p><p><strong>点击自己的头像，选择Settings</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123201247.png"></p><p><strong>选择Developer settings，点击Personal Access tokens，然后创建token</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123201457.png"></p><p><strong>创建token，名字可以随机起，但是一定要勾选repo可访问的范围</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123201610.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123201654.png"></p><p><strong>打开PicGo图床工具，将复制的Token粘贴到设定的Token</strong></p><blockquote><p><strong>设定的仓库名：</strong>用户名/仓库名（一定要知道你的用户名是哪个，别填写错误了，你可以点击自己的头像，就可以看到自己的用户名）</p><p><strong>设定分支名：</strong>默认master就好（当然你也可以自己再创建其他分支，然后填写即可）</p><p><strong>设定的Token：</strong>就是上述创建的token（只有一次显示机会）</p><p><strong>指定存储路径：</strong>可填可不填（如果不填所有图片存储在当前目录/，如果填写img/，PicGo会自动帮你在GitHub上创建img文件夹，并存储在img/下）</p><p><strong>设定自定义域名：</strong><a href="https://cdn.jsdelivr.net/gh/%E7%94%A8%E6%88%B7%E5%90%8D/%E4%BB%93%E5%BA%93%E5%90%8D">https://cdn.jsdelivr.net/gh/用户名/仓库名</a></p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123202148.png"></p><p><strong>Typora设置与上述SM.MS设置是一样的</strong></p><h3 id="阿里云OSS"><a href="#阿里云OSS" class="headerlink" title="阿里云OSS"></a>阿里云OSS</h3><p>阿里云的对象存储是收费的，不过价格并不是很贵，价格的计算包括存储费用、流量费用和请求费用，如果不差钱的朋友，对于上述两个图床来说<strong>建议选择OSS</strong>，按套餐来可以选择一年40G也才9快钱，当然也有按量计费，看自己的需求选择</p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123204119.png"></p><p><strong>购买OSS</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123204439.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123204605.png"></p><p><strong>支付成功后，移动到自己的头像，选择访问控制</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123204709.png"></p><p><strong>创建一个用户，输入登录名称和显示名称，点击确认，要求手机验证</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123204856.png"></p><p><strong>选择权限管理，点击授权–&gt;新增授权</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123204947.png"></p><p><strong>选择认证管理，创建AccessKey，会生成AccessKeyID和AccessKeySecret，AccessKeySecret是无法找回的，一定要保存好，后续还要用来配置PicGo</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123205052.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123205111.png"></p><p><strong>进入到OSS控制台<a href="https://oss.console.aliyun.com/overview%EF%BC%8C%E5%88%9B%E5%BB%BABucket">https://oss.console.aliyun.com/overview，创建Bucket</a></strong></p><blockquote><ol><li>Bucket名称要全局唯一</li><li>区域最好选择离自己近的</li><li>权限选择公有图，图片才能让其他人访问的到</li></ol><p>上传的文件链接格式为：https://[Bucket].[地区].aliyuncs.com/文件目录及名称</p><p>比如我的：<a href="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123205535.png">https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123205535.png</a></p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123205535.png"></p><p><strong>打开PicGo图床工具，将AccessKey复制到阿里云图床中</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123210746.png"></p><h2 id="其他图床"><a href="#其他图床" class="headerlink" title="其他图床"></a>其他图床</h2><p>七牛云存储也是挺好，新用户可以有一个月的体验，提供100年免费10G空间，不过一个月后需要绑定自己的域名，而且是要备案过的，有兴趣的朋友可以去试试</p><p>Gitee和GitHub差不多，不过需要安装一个gitee插件，其余的配置跟GitHub差不多</p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210123213003.png"></p>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>firewalld应用操作</title>
      <link href="2021/01/21/firewalld%E5%BA%94%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
      <url>2021/01/21/firewalld%E5%BA%94%E7%94%A8%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="Firewalld防火墙"><a href="#Firewalld防火墙" class="headerlink" title="Firewalld防火墙"></a>Firewalld防火墙</h1><h2 id="Firewalld基本概述"><a href="#Firewalld基本概述" class="headerlink" title="Firewalld基本概述"></a>Firewalld基本概述</h2><p>RHEL/CentOS系统中继承了多款防火墙管理工具，其中Firewalld（Dynamic Firewall Manager of Linux systems, Linux系统的动态防护墙管理器）服务是默认的防火墙配置管理工具，它拥有基于CLI（命令行界面）和基于GUI（图形界面）的两种管理方式</p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210121155052.png"></p><h2 id="Firewalld与Iptables的不同点"><a href="#Firewalld与Iptables的不同点" class="headerlink" title="Firewalld与Iptables的不同点"></a>Firewalld与Iptables的不同点</h2><blockquote><ol><li>Firewalld可以动态修改单挑规则，而不需要想iptables那样，在修改了规则必须得全部刷新才可以生效</li><li>Firewalld在使用上要比iptables人性化很多，即使不明白“四表五链”，且对TCP/IP协议不理解的也可以实现大部分功能</li><li>Firewalld跟iptables比起来，每个服务器都需要去设置才能放行，因为默认是拒绝，而iptables里默认是每个服务是允许，需要拒绝的才去限制</li><li>Firewalld加入了区域（zone）的概念</li></ol></blockquote><h2 id="Firewalld区域概述"><a href="#Firewalld区域概述" class="headerlink" title="Firewalld区域概述"></a>Firewalld区域概述</h2><p>简单说，区域就是Firewalld预先准备了几套防火墙策略集合（策略模板），用户可以根据生产场景不同而选择适合的策略集合，从而实现防火墙策略之间的快速切换</p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210121155707.png"></p><p><strong>区域默认规则策略表</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210121164357.png"></p><blockquote><p><strong>注意</strong></p><ul><li>一个zone区域仅能绑定一个网卡，设定不同的匹配规则</li><li>一个zone区域又可以针对不同的源地址设定不同的规则</li></ul></blockquote><h2 id="Firewalld的命令参数"><a href="#Firewalld的命令参数" class="headerlink" title="Firewalld的命令参数"></a>Firewalld的命令参数</h2><p><strong>1. 查看firewalld的有哪些配置文件</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -qc firewalld</span><br><span class="line">/etc/dbus-1/system.d/FirewallD.conf</span><br><span class="line">/etc/firewalld/firewalld.conf</span><br><span class="line">/etc/firewalld/lockdown-whitelist.xml</span><br><span class="line">/etc/sysconfig/firewalld</span><br></pre></td></tr></table></figure><p><strong>2. firewalld区域模板文件</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cd /usr/lib/firewalld/zones/</span><br><span class="line">$ ls</span><br><span class="line">block<span class="selector-class">.xml</span>  drop<span class="selector-class">.xml</span>      home<span class="selector-class">.xml</span>      public<span class="selector-class">.xml</span>   work<span class="selector-class">.xml</span></span><br><span class="line">dmz<span class="selector-class">.xml</span>    external<span class="selector-class">.xml</span>  internal<span class="selector-class">.xml</span>  trusted<span class="selector-class">.xml</span></span><br></pre></td></tr></table></figure><p><strong>3. firewalld的规则分两种状态</strong></p><blockquote><ol><li>runtime（运行是）：修改规则马上生效，但是临时生效（不建议）</li><li>permanent（持久配置）：修改后需要reload重载才会生效（推荐）</li></ol></blockquote><h3 id="Firewalld-cmd命令分类"><a href="#Firewalld-cmd命令分类" class="headerlink" title="Firewalld-cmd命令分类"></a>Firewalld-cmd命令分类</h3><p><strong>zone区域相关指令</strong></p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>–get-default-zone</td><td>查询默认的区域名称</td></tr><tr><td>–set-default-zone=&lt;区域名称&gt;</td><td>设置默认的区域，使其永久生效</td></tr><tr><td>–get-active-zones</td><td>显示当前正在使用的区域与网卡名称</td></tr><tr><td>–get-zones</td><td>显示总共可用的区域</td></tr><tr><td>–new-zone=&lt;区域名称&gt;</td><td>新增区域</td></tr></tbody></table><p><strong>services服务相关指令</strong></p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>–get-services</td><td>显示预先定义的服务</td></tr><tr><td>–add-service=&lt;服务名&gt;</td><td>设置默认区域允许该服务的流量</td></tr><tr><td>–remove-service=&lt;服务名&gt;</td><td>设置默认区域不在允许该服务的流量</td></tr></tbody></table><p><strong>POST端口相关命令</strong></p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>–add-port=&lt;端口号/协议&gt;</td><td>设置默认区域允许端口的流量</td></tr><tr><td>–remove-port=&lt;端口/协议&gt;</td><td>设置默认区域不再允许端口的流量</td></tr></tbody></table><p><strong>Interface网卡相关指令</strong></p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>–add-interface=&lt;网卡名称&gt;</td><td>将源自该网卡的所有流量都导向某个指定区域</td></tr><tr><td>–change-interface=&lt;网卡名称&gt;</td><td>将某个网卡与区域进行关联</td></tr></tbody></table><p><strong>其他相关指令</strong></p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>–list-all</td><td>显示当前区域的网卡配置参数，资源，端口以及服务</td></tr><tr><td>–reload</td><td>让”持久生效”的配置规则立即生效，并覆盖当前的配置规则</td></tr></tbody></table><h2 id="防火墙区域配置策略"><a href="#防火墙区域配置策略" class="headerlink" title="防火墙区域配置策略"></a>防火墙区域配置策略</h2><p>为了能正常使用Firewalld服务和相关工具去管理防护墙，必须启动Firewalld服务，同时关闭以前旧防火墙相关服务</p><p><strong>1. 禁止传统防火墙服务</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl <span class="attribute">mask</span> iptables                  <span class="comment">//禁止iptables</span></span><br><span class="line">Created symlink from /etc/systemd/system/iptables.service to /dev/null.</span><br><span class="line">$ systemctl <span class="attribute">mask</span> ip6tables                 <span class="comment">//禁止ip6tables</span></span><br><span class="line">Created symlink from /etc/systemd/system/ip6tables.service to /dev/null.</span><br><span class="line">$ systemctl <span class="attribute">mask</span> ebtables                  <span class="comment">//禁止ebtables</span></span><br><span class="line">Created symlink from /etc/systemd/system/ebtables.service to /dev/null.</span><br></pre></td></tr></table></figure><p><strong>2. 启动Firewalld防火墙，并加入开机自启动服务</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl start firewalld</span><br><span class="line">$ systemctl enable firewalld</span><br></pre></td></tr></table></figure><p><strong>3. 备份Firewalld相关配置文件（重要）</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cp -a /etc/firewalld/ /etc/firewalld_backup</span><br></pre></td></tr></table></figure><h3 id="zone区域配置"><a href="#zone区域配置" class="headerlink" title="zone区域配置"></a>zone区域配置</h3><p><strong>1. 查看当前默认区域</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --get-default-zone</span><br><span class="line">public</span><br></pre></td></tr></table></figure><p><strong>2. 查看当前活跃的区域</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --get-active-zone</span><br><span class="line">public</span><br><span class="line">  interfaces: eth0 eth1</span><br></pre></td></tr></table></figure><h3 id="配置默认区域并设置白名单"><a href="#配置默认区域并设置白名单" class="headerlink" title="配置默认区域并设置白名单"></a>配置默认区域并设置白名单</h3><blockquote><ol><li>设定默认区域为drop（拒绝所有）</li><li>设置白名单IP访问，将源10.0.0.0/24网段加入trusted区域</li></ol></blockquote><p><strong>1. 将当前默认区域修改drop</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --set-default-zone=drop </span><br><span class="line">$ firewall-cmd –reload</span><br><span class="line"><span class="comment">//设置默认区域不需要加--permanent参数，重载之后就可以永久生效</span></span><br></pre></td></tr></table></figure><p><strong>2. 将网络接口关联至drop区域</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注意：不指定区域，则默认会加入到public区域</span></span><br><span class="line">$ firewall-cmd --add-interface=eth0 --add-interface=eth1 --zone=drop  --permanent</span><br><span class="line"></span><br><span class="line"><span class="comment">//当然如果指定错误，可以使用--change-interface参数指定回其他区域</span></span><br><span class="line">$ firewall-cmd --change-interface=eth0 --zone=drop  --permanent</span><br><span class="line"></span><br><span class="line"><span class="comment">//重新加载才能永久生效</span></span><br><span class="line">$ firewall-cmd --reload</span><br></pre></td></tr></table></figure><p><strong>3. 将10.0.0.0/24网段加入trusted白名单</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --add-source=10.0.0.0/24 --zone=trusted  --permanent</span><br><span class="line">$ firewall-cmd --reload</span><br></pre></td></tr></table></figure><p><strong>4. 查看当前处于活动的区域</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --get-active-zone</span><br><span class="line">drop</span><br><span class="line">  interfaces: eth0 eth1</span><br><span class="line">trusted</span><br><span class="line">  sources: <span class="number">10.0</span>.<span class="number">0.0</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure><h3 id="允许IP地址访问http、ssh服务"><a href="#允许IP地址访问http、ssh服务" class="headerlink" title="允许IP地址访问http、ssh服务"></a>允许IP地址访问http、ssh服务</h3><blockquote><ol><li>设定来源IP，172.16.1.0/24网段允许访问http</li><li>设定来源IP，10.0.0.0/24仅允许访问ssh服务</li><li>其他网段走默认区域</li></ol></blockquote><p><strong>1. 允许10.0.0.0/24的IP地址访问ssh</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --add-source=10.0.0.0/24 --permanent --zone=public</span><br><span class="line">$ firewall-cmd --reload</span><br></pre></td></tr></table></figure><p><strong>2. 将172.16.1.0/24网段加入白名单</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --add-source=172.16.1.0/24 --permanent --zone=trusted</span><br><span class="line">$ firewall-cmd --reload</span><br></pre></td></tr></table></figure><p><strong>3. 查看活动的区域</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --get-active-zone</span><br><span class="line">public</span><br><span class="line">  sources: <span class="number">10.0</span>.<span class="number">0.1</span>/<span class="number">24</span></span><br><span class="line">trusted</span><br><span class="line">  sources: <span class="number">172.16</span>.<span class="number">1.0</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure><p><strong><code>PS：设置到了trusted区域是可以访问HTTP的，但是trusted区域还能访问所有的服务，所以设定在trusted区域是可以解决问题，但是安全性却不高了</code></strong></p><blockquote><p>如何实现172.16.1.0/24网段只能访问HTTP</p><ul><li><p>方法一：新建区域（不建议）</p></li><li><p>方法二：使用富规则（推荐，下述章节有讲解）</p></li></ul></blockquote><h3 id="防火墙端口访问策略"><a href="#防火墙端口访问策略" class="headerlink" title="防火墙端口访问策略"></a>防火墙端口访问策略</h3><p><strong>1. 配置防火墙，访问80/tcp(http)，并立即生效</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --add-port=80/tcp --zone=public --permanent</span><br><span class="line">$ firewall-cmd --reload</span><br></pre></td></tr></table></figure><p><strong>2. 访问80/tcp(http)，161/upd(snmp)端口的流量策略，并立即生效</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --add-port=80/tcp --add-port=161/udp --permanent</span><br><span class="line">$ firewall-cmd --reload</span><br><span class="line">$ firewall-cmd --list-ports       <span class="comment">//查看端口</span></span><br><span class="line">80/tcp 161/udp</span><br><span class="line"></span><br><span class="line">$ firewall-cmd --list-all         <span class="comment">//查看默认区域的全部配置</span></span><br><span class="line">public (active)</span><br><span class="line">  target: default</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: </span><br><span class="line">  sources: <span class="number">10.0</span>.<span class="number">0.0</span>/<span class="number">24</span></span><br><span class="line">  services: ssh dhcpv6-client</span><br><span class="line">  ports: <span class="number">80</span>/tcp <span class="number">161</span>/udp</span><br><span class="line">  protocols: </span><br><span class="line">  masquerade: no</span><br><span class="line">  forward-ports: </span><br><span class="line">  source-ports: </span><br><span class="line">  icmp-blocks: </span><br><span class="line">  rich rules:</span><br></pre></td></tr></table></figure><p><strong>3. 允许请求HTTP与 HTTPS协议的流量设置为永久允许，并立即生效</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --permanent --add-service=http --add-service=https –zone=public</span><br><span class="line">$ firewall-cmd --reload</span><br><span class="line">$ firewall-cmd --list-services      <span class="comment">//查看服务</span></span><br><span class="line">ssh dhcpv6-client http https</span><br></pre></td></tr></table></figure><p><strong>4. 允许请求php-fpm服务的流量设置为永久允许，并立即生效</strong></p><blockquote><p>方法一：添加端口就可以并重载</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --add-port=9000/tcp --zone=public --permanent</span><br><span class="line">$ firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>方法二：复制一个service目录的模板，修改名字跟协议</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ pwd</span><br><span class="line">/usr/lib/firewalld/services </span><br><span class="line"></span><br><span class="line">$ cp http<span class="selector-class">.xml</span> php-fpm<span class="selector-class">.xml</span></span><br><span class="line">$ cat php-fpm<span class="selector-class">.xml</span>                        <span class="comment">//查看修改后的结果</span></span><br><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;service&gt;</span><br><span class="line">  &lt;short&gt;php-fpm&lt;/short&gt;</span><br><span class="line">  &lt;description&gt;php-fpm is the protocol used to serve Web pages. If you plan to make your Web server publicly available, enable this option. This option is not required for viewing pages locally or developing Web pages.&lt;/description&gt;</span><br><span class="line">  &lt;port protocol=&quot;tcp&quot; port=&quot;9000&quot;/&gt;</span><br><span class="line">&lt;/service&gt;</span><br><span class="line"></span><br><span class="line">$ firewall-cmd --add-service=php-fpm --zone=public --permanent   //设定服务php-fpm</span><br><span class="line">$ firewall-cmd --reload</span><br><span class="line">$ firewall-cmd --list-all                                       <span class="comment">//查看</span></span><br><span class="line">public (active)</span><br><span class="line">  target: default</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: </span><br><span class="line">  sources: <span class="number">10.0</span>.<span class="number">0.0</span>/<span class="number">24</span></span><br><span class="line">  services: ssh dhcpv6-client http https php-fpm</span><br><span class="line">  ports: <span class="number">80</span>/tcp <span class="number">161</span>/udp <span class="number">9000</span>/tcp</span><br></pre></td></tr></table></figure></blockquote><h2 id="Firewalld端口转发策略"><a href="#Firewalld端口转发策略" class="headerlink" title="Firewalld端口转发策略"></a>Firewalld端口转发策略</h2><p>端口转发是指传统的目标地址映射，实现外网访问内网资源</p><p><strong>转发命令格式为</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd -pernanent -zone=&lt;区域&gt; --add-forward-port=port=&lt;源端口&gt;:proto=&lt;协议&gt;:toport=&lt;目标端口号&gt;:toadd=&lt;目标ip地址&gt;</span><br></pre></td></tr></table></figure><p><strong>1. 转发本机555/tcp端口的流量至22/tcp端口，要求当前和长期有效</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --add-forward-port=555:proto=tcp:toport=22:toaddr=10.0.0.7 --zone=public --permanent</span><br><span class="line">$ firewall-cmd --reload</span><br></pre></td></tr></table></figure><p><strong>2. 移除本机转发的555/tcp端口策略，要求当前和长期有效</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --remove-forward-port=555:proto=tcp:toport=22:toaddr=10.0.0.7 --zone=public --permanent</span><br><span class="line">$ firewall-cmd --reload</span><br></pre></td></tr></table></figure><p><strong>3. 如果需要将本地的10.0.0.7:6666端口转发至后端10.0.0.8:22端口</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需要开启IP伪装</span></span><br><span class="line">$ firewall-cmd --add-masquerade --permanent</span><br><span class="line"></span><br><span class="line">$ firewall-cmd --add-forward-port=port=6666:proto=tcp:toport=22:toaddr=10.0.0.8 --permanent</span><br><span class="line">$ firewall-cmd --reload</span><br></pre></td></tr></table></figure><h2 id="Firewalld富规则策略"><a href="#Firewalld富规则策略" class="headerlink" title="Firewalld富规则策略"></a>Firewalld富规则策略</h2><p>Firewalld中的富规则可以设置的更细致、更详细的策略配置，它可以针对系统服务、端口号、源地址和目标地址等诸多信息进行更优针对性的策略配置</p><p><strong>1. 富规则手册</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//富规则通用结构</span></span><br><span class="line">$ man firewalld<span class="selector-class">.richlanguage</span></span><br><span class="line">rule</span><br><span class="line">    <span class="selector-attr">[source]</span></span><br><span class="line">    <span class="selector-attr">[destination]</span></span><br><span class="line">    service|port|protocol|icmp-block|icmp-type|masquerade|forward-port|source-port</span><br><span class="line">    <span class="selector-attr">[log]</span></span><br><span class="line">    <span class="selector-attr">[audit]</span></span><br><span class="line">    <span class="selector-attr">[accept|reject|drop|mark]</span></span><br><span class="line"></span><br><span class="line">rule <span class="selector-attr">[family=&quot;ipv4|ipv6&quot;]</span></span><br><span class="line">source [not] address=&quot;address[/mask]&quot;|mac=&quot;mac-address&quot;|ipset=&quot;ipset&quot;</span><br><span class="line">destination [not] address=&quot;address[/mask]&quot;</span><br><span class="line">service name=&quot;service name&quot;</span><br><span class="line">protocol value=&quot;protocol value&quot;</span><br><span class="line">icmp-block name=&quot;icmptype name&quot;</span><br><span class="line">forward-port port=&quot;port value&quot; protocol=&quot;tcp|udp&quot; to-port=&quot;port value&quot; to-addr=&quot;address&quot;</span><br><span class="line">log <span class="selector-attr">[prefix=&quot;prefix text&quot;]</span> <span class="selector-attr">[level=&quot;log level&quot;]</span> <span class="selector-attr">[limit value=&quot;rate/duration&quot;]</span></span><br></pre></td></tr></table></figure><p><strong>2. 富规则则按先后顺序配置，按先匹配到的规则生效</strong></p><table><thead><tr><th align="left">参数</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">–add-rich-rule=’<RULE>‘</td><td align="left">在指定的区添加一条富规则</td></tr><tr><td align="left">–remove-rich-rule=’<RULE>‘</td><td align="left">在指定的区删除一条富规则</td></tr><tr><td align="left">–list-rich-rules</td><td align="left">列出指定去里的所有富规则</td></tr><tr><td align="left">–list-all 和 –list-all-zone</td><td align="left">也能列出存在的富规则</td></tr></tbody></table><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p><strong>1. 允许10.0.0.0/24网段中10.0.0.1主机访问http服务，其他网络无法访问，当前和永久生效</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//10.0.0.0/24所有主机至public区域</span></span><br><span class="line">$ firewall-cmd --permanent --add-source=10.0.0.0/24 --zone=public</span><br><span class="line"><span class="comment">//仅允许public中的10.0.0.1主机访问http</span></span><br><span class="line">$ firewall-cmd --permanent --zone=public --add-rich-rule=&#x27;rule family=ipv4 source address=10.0.0.1/32 port port=80 protocol=tcp accept&#x27;</span><br><span class="line">$ firewall-cmd --reload</span><br></pre></td></tr></table></figure><p><strong>2. 拒绝10.0.0.0/24网段中的10.0.0.8主机发起的ssh请求，当前和永久生效</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --permanent --add-rich-rule=&#x27;rule family=ipv4 source address=10.0.0.8 port port=22 protocol=tcp drop&#x27;</span><br><span class="line">$ firewall-cmd --reload</span><br></pre></td></tr></table></figure><p><strong>3. 将远程10.0.0.1主机请求firewalld的5555端口，转发至firewalld防火墙的22端口</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --permanent --add-rich-rule=&#x27;rule family=ipv4 source address=10.0.0.1/32 forward-port port=5555 protocol=tcp to-port=22&#x27;</span><br><span class="line">$ firewall-cmd --reload</span><br></pre></td></tr></table></figure><p><strong>4. 将远程10.0.0.1主机请求firewalld的6666端口，转发至后端主机10.0.0.9的22端口</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --permanent --add-rich-rule=&#x27;rule family=ipv4 source address=10.0.0.1/32 forward-port port=6666 protocol=tcp to-port=22 to-addr=10.0.0.9&#x27;</span><br><span class="line">$ firewall-cmd --reload</span><br></pre></td></tr></table></figure><h2 id="Firewalld实现共享上网"><a href="#Firewalld实现共享上网" class="headerlink" title="Firewalld实现共享上网"></a>Firewalld实现共享上网</h2><p>指定带有公网IP的实例上操作，启动NAT网关的SNAT源地址转换功能</p><p><strong>Firewalld防火墙开启IP伪装，实现地址转换</strong></p><blockquote><ol><li><p>网卡默认是在public的zones内，也是默认zones，永久添加源地址转换功能</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ firewall-cmd --permanent --add-masquerade</span><br><span class="line">$ firewall-cmd --reload</span><br></pre></td></tr></table></figure></li><li><p>客户端配置共享上网</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在配置之前，需要配置DNS，否则无法找到IP地址</span></span><br><span class="line">$ vim /etc/sysconfig/network-scripts/ifcfg-eth1</span><br><span class="line">DNS1=223.5.5.5</span><br><span class="line"></span><br><span class="line"><span class="comment">//然后配置网关</span></span><br><span class="line">route add default gw 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.7</span>                  <span class="comment">//临时配置</span></span><br><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-eth1   //永久配置</span><br><span class="line">  GETEWAY=172.16.1.7</span><br><span class="line"></span><br><span class="line"><span class="comment">//重启网卡</span></span><br><span class="line">$ nmcli connection reload</span><br><span class="line">$ nmcli connection down eth1 &amp;&amp; nmcli connection up eth1</span><br></pre></td></tr></table></figure></li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 防火墙 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> firewalld </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iptables应用操作</title>
      <link href="2021/01/21/iptables%E5%BA%94%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
      <url>2021/01/21/iptables%E5%BA%94%E7%94%A8%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h1><h2 id="iptables防火墙简介"><a href="#iptables防火墙简介" class="headerlink" title="iptables防火墙简介"></a>iptables防火墙简介</h2><p>Netfilter/iptables（以下简称iptables）是UNIX/Linux自带的一款优秀且开放源代码、完全自由是<strong>基于包过滤的防火墙</strong>工具，功能十分强大，且可以灵活应用，对流入/出服务器的数据报进行精细的控制</p><p>iptables是Linux2.4及2.6内核中继承的服务，主要工作在OSI七层中的二三四层，如果重新编译内核，iptables也可以支持7层控制（squid+iptables）</p><h2 id="iptables应用场景"><a href="#iptables应用场景" class="headerlink" title="iptables应用场景"></a>iptables应用场景</h2><p><strong>iptables（生产中看情况，内网关闭，外网打开）</strong></p><blockquote><p>大并发的情况，不能开iptables，会影响性能，使用硬件防火墙</p></blockquote><p><strong>iptables使用场景</strong></p><blockquote><ol><li>主机防火墙（filter表的INPUT链）</li><li>局域网共享上网（nat表的POSTROUTING链），NAT功能</li><li>端口/IP映射（nat表的PREROUTING链）</li><li>IP 一对一映射</li><li>IP 一对多映射</li></ol></blockquote><h2 id="iptables工作流程"><a href="#iptables工作流程" class="headerlink" title="iptables工作流程"></a>iptables工作流程</h2><p><strong>iptables是采用数据包过滤机制工作的，所以它会对请求的数据包的包头进行分析，并根据预先设定的规则进行匹配来决定是否可以被允许进入主机</strong></p><blockquote><ol><li>防护墙是一层层过滤的，实际匹配是从上到下进行过滤</li><li>如果匹配了规则，不管是阻止还是通过，数据包则不会继续往下匹配新的规则</li><li>如果所有规则中没有明确是阻止或通过，则匹配默认规则accept（iptables的默认规则）</li><li>对于防火墙的默认规则，是所有的对应链的规则执行完之后才会执行（是最后执行的规则）</li></ol></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210120141141.png"></p><h2 id="iptables四表五链"><a href="#iptables四表五链" class="headerlink" title="iptables四表五链"></a>iptables四表五链</h2><blockquote><ol><li>什么是表（tables）？<ul><li>表（tables）是链的容器，即所有的链（chains）都属于其对应的表</li></ul></li><li>什么是链（chains）？<ul><li>链（chains）是规则（policy）的容器</li></ul></li><li>什么是规则（policy）？<ul><li>规则（policy）就是iptables一系列过滤信息的规范和具体方法条款</li></ul></li></ol></blockquote><p><strong>iptables包含4张表和五个链，但使用最多两张表示filter和nat表</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210120182209.png"></p><h3 id="FILTER表"><a href="#FILTER表" class="headerlink" title="FILTER表"></a>FILTER表</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210120183921.png"></p><table><thead><tr><th>filter表</th><th>真正负责主机防火墙功能（过滤流入/出主机的数据包）</th></tr></thead><tbody><tr><td>INPUT链</td><td>负责过滤所有目标进入主机的数据包</td></tr><tr><td>FORWRAD链</td><td>负责转发流经主机的数据包，起转发的左右(net.ipv4.ip_forward=0)</td></tr><tr><td>OUTPUT链</td><td>负责处理从主机发出去的数据包</td></tr></tbody></table><h3 id="NAT表"><a href="#NAT表" class="headerlink" title="NAT表"></a>NAT表</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210120183916.png"></p><table><thead><tr><th>NAT表</th><th>负责网络地址转换，即源/目ip地址和端口转换；和主机本身无关，用于局域网共享上网或者特殊的端口转换服务器相关</th></tr></thead><tbody><tr><td>OUTPUT</td><td>和主机放出去的数据包有关，改变主机发出数据包的目的地址</td></tr><tr><td>PREROUTING</td><td>在数据包到达防火墙时，判断路由之前执行的规则，作用是改变数据包的目的地址、目的端口</td></tr><tr><td>POSTROUTING</td><td>在数据包离开防火墙时，判断路由之后执行的规则，作用是改变数据包的源地址，源端口</td></tr></tbody></table><h2 id="iptables表和链工作流程图"><a href="#iptables表和链工作流程图" class="headerlink" title="iptables表和链工作流程图"></a>iptables表和链工作流程图</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210120184054.png"></p><h2 id="iptables环境准备"><a href="#iptables环境准备" class="headerlink" title="iptables环境准备"></a>iptables环境准备</h2><p><strong>查看是否安装iptables</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -qa|grep iptables</span><br><span class="line">iptables-1<span class="selector-class">.4</span><span class="selector-class">.7-19</span><span class="selector-class">.el6</span><span class="selector-class">.x86_64</span></span><br></pre></td></tr></table></figure><p><strong>如没有，则使用yum进行安装</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install –y iptables-services</span><br></pre></td></tr></table></figure><h2 id="加载防火墙的内核模块"><a href="#加载防火墙的内核模块" class="headerlink" title="加载防火墙的内核模块"></a>加载防火墙的内核模块</h2><p><strong>默认情况下iptables模块是很少的，应该只有四个</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ lsmod |egrep &#x27;filter|net|ipt&#x27;</span><br><span class="line">iptable_filter          2793  0 </span><br><span class="line">ip_tables              17895  1 iptable_filter</span><br><span class="line">ip6table_filter         2889  1 </span><br><span class="line">ip6_tables             18828  1 ip6table_filter</span><br></pre></td></tr></table></figure><p><strong>加载模块</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ modprobe ip_tables</span><br><span class="line">$ modprobe iptable_filter</span><br><span class="line">$ modprobe iptable_nat</span><br><span class="line">$ modprobe ip_conntrack</span><br><span class="line">$ modprobe ip_conntrack_ftp</span><br><span class="line">$ modprobe ip_nat_ftp</span><br><span class="line">$ modprobe ipt_state</span><br></pre></td></tr></table></figure><p><strong>重新查看</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ lsmod |egrep &#x27;filter|net|ipt&#x27;</span><br><span class="line">iptable_nat             5923  0 </span><br><span class="line">nf_nat                 22708  2 nf_nat_ftp,iptable_nat</span><br><span class="line">nf_conntrack_ipv4       9218  3 iptable_nat,nf_nat</span><br><span class="line">iptable_filter          2793  0 </span><br><span class="line">ip_tables              17895  2 iptable_nat,iptable_filter</span><br><span class="line">nf_conntrack           79601  7 nf_nat_ftp,nf_conntrack_ftp,iptable_nat,nf_nat,nf_conntrack_ipv4,nf_conntrack_ipv6,xt_state</span><br><span class="line">ip6table_filter         2889  1 </span><br><span class="line">ip6_tables             18828  1 ip6table_filter</span><br></pre></td></tr></table></figure><h2 id="iptable实战"><a href="#iptable实战" class="headerlink" title="iptable实战"></a>iptable实战</h2><p><strong>1. 开启防火墙</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ /etc/init.d/iptables start</span><br><span class="line">$ chkconfig iptables on </span><br><span class="line">$ chkconfig --list|grep iptables</span><br></pre></td></tr></table></figure><p><strong>2. 查看防火墙规则</strong></p><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-n，–numeric</td><td>地址和端口以数字显示</td></tr><tr><td>-L，–list</td><td>列表显示表和链</td></tr></tbody></table><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -nL</span><br><span class="line">Chain <span class="selector-tag">INPUT</span> (policy ACCEPT)</span><br><span class="line">target     prot opt source               destination         </span><br><span class="line">ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           state RELATED,ESTABLISHED </span><br><span class="line">ACCEPT     icmp --  0.0.0.0/0            0.0.0.0/0           </span><br><span class="line">ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           </span><br><span class="line">ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0           state NEW tcp dpt:22 </span><br><span class="line">REJECT     all  --  0.0.0.0/0            0.0.0.0/0           reject-with icmp-host-prohibited </span><br><span class="line"></span><br><span class="line">Chain FORWARD (policy ACCEPT)</span><br><span class="line">target     prot opt source               destination         </span><br><span class="line">REJECT     all  --  0.0.0.0/0            0.0.0.0/0           reject-with icmp-host-prohibited </span><br><span class="line"></span><br><span class="line">Chain <span class="selector-tag">OUTPUT</span> (policy ACCEPT)</span><br><span class="line">target     prot opt source               destination   </span><br></pre></td></tr></table></figure><p><strong>3. 清除防火墙规则</strong></p><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-F，–flush</td><td>清楚所有规则，不会处理默认规则</td></tr><tr><td>-X，–delete-chain</td><td>删除用户自定义的链</td></tr><tr><td>-Z，–zero</td><td>链的计数器清零（数据包计数器与数据包字节计数器）</td></tr></tbody></table><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -F</span><br><span class="line">$ iptables -X</span><br><span class="line">$ iptables -Z</span><br></pre></td></tr></table></figure><h3 id="创建IP与端口规则"><a href="#创建IP与端口规则" class="headerlink" title="创建IP与端口规则"></a>创建IP与端口规则</h3><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-t，–table</td><td>指定表名（默认为：filter）</td></tr><tr><td>-A，–append</td><td>将规则添加到指定的链上，默认添加到最后一样</td></tr><tr><td>-I，–insert</td><td>插入规则，默认插入到第一行</td></tr><tr><td>-j，–jump</td><td>对规则的具体处理动作（ACCEPT为接受，DROP为丢弃，REJECT为拒绝）</td></tr><tr><td>-p，-proto</td><td>指定的协议</td></tr><tr><td>-i，–in-interface</td><td>指定进入的网络接口</td></tr><tr><td>-o，–out-interface</td><td>指定出去的网络接口</td></tr><tr><td>-s，–source</td><td>指定源地址或网段</td></tr><tr><td>-d，destination</td><td>指定目的地址</td></tr><tr><td>!</td><td>取反（允许10.0.0.0/24网段进入，其他IP地址则丢弃）</td></tr></tbody></table><p><strong>1. 禁止某个端口访问</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -t <span class="attribute">filter</span> -<span class="selector-tag">I</span> <span class="selector-tag">INPUT</span> -<span class="selector-tag">p</span> tcp --dport 22 -j DROP（测试用）</span><br><span class="line">$ iptables -<span class="selector-tag">I</span> <span class="selector-tag">INPUT</span> -<span class="selector-tag">p</span> tcp --dport 80 -j DROP </span><br></pre></td></tr></table></figure><blockquote><p><strong>如何恢复刚才断开的SSH连接</strong></p><ul><li>机房重启系统或者登录服务器删除刚才的禁止规则</li><li>让机房人员重启服务器或者让机房人员拿用户密码登录进去</li><li>通过服务器的远程管理卡（推荐）</li><li>写一个定时任务，每5分钟就停止防火墙</li><li>登录虚拟机终端页面删除掉刚才的规则</li></ul></blockquote><p><strong>2. 禁止某个IP访问</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -<span class="selector-tag">I</span> <span class="selector-tag">INPUT</span> -s 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.20</span> -<span class="selector-tag">i</span> eth0 -j DROP</span><br><span class="line">$ iptables –<span class="selector-tag">I</span> <span class="selector-tag">INPUT</span> ! -s 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.30</span> –<span class="selector-tag">i</span> eth0 –j DROP</span><br><span class="line">$ iptables –I INPUT ! –s 10.0.0.0/24 –i eth0 –j DROP</span><br><span class="line">$ iptables –<span class="selector-tag">I</span> <span class="selector-tag">INPUT</span> –s 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.20</span> –d 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.10</span> –j DROP</span><br></pre></td></tr></table></figure><h3 id="创建端口范围的与ICMP规则"><a href="#创建端口范围的与ICMP规则" class="headerlink" title="创建端口范围的与ICMP规则"></a>创建端口范围的与ICMP规则</h3><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-P，–policy</td><td>指定默认规则</td></tr><tr><td>–m multiport</td><td>指定多个端口</td></tr><tr><td>–to-source</td><td>需要转换的源地址</td></tr><tr><td>–to-destination</td><td>需要转换的目的地址</td></tr><tr><td>–dport</td><td>指定目标端口（用户请求的端口）</td></tr><tr><td>–sport</td><td>指定的源端口</td></tr><tr><td>–icmp-type 8</td><td>指定icmp的ping包</td></tr></tbody></table><p><strong>1. 匹配端口范围</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -<span class="selector-tag">I</span> <span class="selector-tag">INPUT</span> -<span class="selector-tag">p</span> tcp --dport 50:<span class="number">100</span> -j DROP（推荐）</span><br><span class="line">$ iptable –I INPUT –p tcp –dport <span class="number">3306</span>:<span class="number">8809</span> –j ACCEPT</span><br><span class="line">$ iptables –I INPUT –p tcp –m multiport –dport <span class="number">21</span>,<span class="number">22</span>,<span class="number">23</span>,<span class="number">24</span> –j DROP</span><br></pre></td></tr></table></figure><p><strong>2. 匹配ICMP类型</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -<span class="selector-tag">A</span> <span class="selector-tag">INPUT</span> -<span class="selector-tag">p</span> icmp --icmp-type 8 -j DROP</span><br><span class="line">iptables -<span class="selector-tag">A</span> <span class="selector-tag">INPUT</span> -<span class="selector-tag">p</span> icmp -m icmp --icmp-type 8 -j DROP</span><br><span class="line">iptables -A FORWARD -s 192.168.1.0/24 -p icmp -m icmp --icmp-type any -j ACCEPT</span><br></pre></td></tr></table></figure><h3 id="配置连接状态的规则"><a href="#配置连接状态的规则" class="headerlink" title="配置连接状态的规则"></a>配置连接状态的规则</h3><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-m state，–state</td><td>匹配网络状态</td></tr><tr><td>NEW</td><td>已经或将启动新的连接</td></tr><tr><td>ESTABLISHED</td><td>已建立的连接</td></tr><tr><td>RELATED</td><td>正在启动的新连接</td></tr><tr><td>INVALID</td><td>非法或无法识别的</td></tr></tbody></table><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ iptables –<span class="selector-tag">A</span> <span class="selector-tag">INPUT</span> –m state –-state ESTABLISHED,RELATED –j ACCEPT</span><br><span class="line">$ iptables –<span class="selector-tag">A</span> <span class="selector-tag">OUTPUT</span> –m state –-state ESTABLISHED,RELATED –j ACCEPT </span><br></pre></td></tr></table></figure><h3 id="限制指定时间包的允许通过数量及并发数"><a href="#限制指定时间包的允许通过数量及并发数" class="headerlink" title="限制指定时间包的允许通过数量及并发数"></a>限制指定时间包的允许通过数量及并发数</h3><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-m limit，–limit</td><td>限制指定时间包的允许通过数和并发数</td></tr><tr><td>–limit-burst [n]</td><td>在同一时间内允许通过的请求“n”为数字，不指定默认为5</td></tr></tbody></table><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ iptables –I INPUT –s 10.0.0.0/24 –p icmp –icmp-type 8 –m limit –limit 5/min –limit-burst 2 –j ACCEPT</span><br></pre></td></tr></table></figure><h3 id="删除规则"><a href="#删除规则" class="headerlink" title="删除规则"></a>删除规则</h3><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>–line-numbers</td><td>查看规则的数列</td></tr><tr><td>-D，delete</td><td>删除链或规则</td></tr></tbody></table><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -nL --line-numbers   <span class="comment">//查看规则的序号</span></span><br><span class="line">$ iptables -D <span class="selector-tag">INPUT</span> 2           <span class="comment">//删除那个链的规则（这里是删除INPUT链的序号规则2）</span></span><br></pre></td></tr></table></figure><h2 id="iptables保存规则"><a href="#iptables保存规则" class="headerlink" title="iptables保存规则"></a>iptables保存规则</h2><p>上述的配置都是临时的，如果永久保存，就需要写入配置文件</p><p><strong>第一种方法（推荐使用）</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ /etc/init.d/iptables save </span><br><span class="line">iptables: Saving firewall rules to /etc/sysconfig/iptables:[  OK  ]</span><br></pre></td></tr></table></figure><p><strong>第二种方法</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ iptables-save &gt; /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure><p><strong>查看</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/sysconfig/iptables</span><br><span class="line">-<span class="selector-tag">A</span> <span class="selector-tag">INPUT</span> -<span class="selector-tag">p</span> tcp -m tcp --dport 22 -j ACCEPT </span><br><span class="line">-<span class="selector-tag">A</span> <span class="selector-tag">INPUT</span> -<span class="selector-tag">i</span> lo -j ACCEPT </span><br><span class="line">-A INPUT -s 10.0.0.0/24 -j ACCEPT </span><br><span class="line">-A INPUT -s 172.16.1.0/24 -j ACCEPT </span><br><span class="line">-<span class="selector-tag">A</span> <span class="selector-tag">INPUT</span> -<span class="selector-tag">p</span> tcp -m multiport --dports 80,443 -j ACCEPT </span><br><span class="line">-<span class="selector-tag">A</span> <span class="selector-tag">OUTPUT</span> -o lo -j ACCEPT </span><br></pre></td></tr></table></figure><h2 id="iptables实战案列"><a href="#iptables实战案列" class="headerlink" title="iptables实战案列"></a>iptables实战案列</h2><p>两种思想，针对默认规则而言</p><p><strong>1. 默认规则默认是允许的状态</strong></p><blockquote><p>逛公园：黑名单（默认随便进出，对非法的分支进行拒绝）</p><p>应用：配置上网关路由</p></blockquote><p><strong>2. 默认规则默认是拒绝的状态（更安全）</strong></p><blockquote><p>看电影：白名单（默认没票不能进入，需要花钱买票才能进入</p><p>应用：服务器主机防火墙</p></blockquote><p><strong>实时部署</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">iptables –F  </span><br><span class="line">iptables –X</span><br><span class="line">iptables –Z</span><br><span class="line">iptables -<span class="selector-tag">A</span> <span class="selector-tag">INPUT</span> -<span class="selector-tag">p</span> tcp -m multiport --dport 80,443 -j ACCEPT       <span class="comment">//允许80,433端口</span></span><br><span class="line">iptables -<span class="selector-tag">A</span> <span class="selector-tag">INPUT</span> -<span class="selector-tag">p</span> tcp --dport 22 -j ACCEPT                        <span class="comment">//允许22端口</span></span><br><span class="line">iptables -A INPUT -s 10.0.0.0/24 -p all -j ACCEPT                    //允许外网网段</span><br><span class="line">iptables -A INPUT -s 172.16.1.0/24 -p all -j ACCEPT                  //允许内网网段</span><br><span class="line">iptables -<span class="selector-tag">A</span> <span class="selector-tag">INPUT</span> -<span class="selector-tag">i</span> lo -j ACCEPT                                    <span class="comment">//允许回环接口进（127.0.0.1）</span></span><br><span class="line">iptables -<span class="selector-tag">A</span> <span class="selector-tag">OUTPUT</span> -o lo -j ACCEPT                                   <span class="comment">//允许回环接口出（127.0.0.1）</span></span><br><span class="line">iptables -<span class="selector-tag">P</span> <span class="selector-tag">INPUT</span> DROP                                               <span class="comment">//设置默认INPUT链为DROP（丢弃）</span></span><br><span class="line">iptables -<span class="selector-tag">P</span> FORWARD DROP                                             <span class="comment">//设置默认FORWARD链DROP（丢弃）</span></span><br><span class="line">iptables -<span class="selector-tag">P</span> <span class="selector-tag">OUTPUT</span> ACCEPT                                            <span class="comment">//设置默认OUTPUT链为ACCEPT（接收）</span></span><br></pre></td></tr></table></figure><p><strong>如果遭到10.0.0.10攻击web服务器，则直接封掉IP</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ iptables –<span class="selector-tag">I</span> <span class="selector-tag">INPUT</span> –s 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.10</span> –j DROP                     <span class="comment">//范围大，外部攻击者</span></span><br><span class="line">$ iptables –<span class="selector-tag">I</span> <span class="selector-tag">INPUT</span> -<span class="selector-tag">p</span> tcp –s 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.10</span> --dport 80 -j DROP   <span class="comment">//细，范围小</span></span><br></pre></td></tr></table></figure><p><strong>自动封掉IP，监控IP短时间内PV数（下述脚本PV数是5），如果到达则使用防火墙命令进行封掉，并在第二天情况前一天的的数据</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cat web_drop_ip3.sh</span></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">. /etc/init.d/functions</span><br><span class="line"></span><br><span class="line">Count=5                                //PV，访问次数的缺值，超过5次就禁止条这个ip地址</span><br><span class="line">Path=/server/scripts/access.log        //日志的路径</span><br><span class="line">function ipt()&#123;                        //定义ipt函数，用于iptables的设置</span><br><span class="line">  awk &#x27;&#123;print $1&#125;&#x27; $Path|sort|uniq -c|sort -rn &gt;/tmp/tmp.log  //使用AWK取出IP地址列，进行排序统计</span><br><span class="line">  max_line=$(cat /tmp/tmp.log|wc -l)                          //使用wc统计ip有多少行</span><br><span class="line">  for ((i=1;i&lt;=$max_line;i++)) </span><br><span class="line">    do</span><br><span class="line">        ip=$(awk &#x27;NR==&#x27;&quot;$i&quot;&#x27;&#123;print $2&#125;&#x27; /tmp/tmp.log)         //取出tmp.log中的ip地址</span><br><span class="line">        ip_num=$(awk &#x27;NR==&#x27;&quot;$i&quot;&#x27;&#123;print $1&#125;&#x27; /tmp/tmp.log)     //取出每个ip地址统计了多少个</span><br><span class="line">        iptables_ip_num=$(iptables -nL|grep &quot;$ip&quot;|wc -l)      //过滤iptables表中的IP地址，然后进行统计</span><br><span class="line">        if [ $ip_num -ge $Count -a $iptables_ip_num -lt 1 ]</span><br><span class="line">        then</span><br><span class="line">            iptables -I INPUT -s $ip -j DROP                  //禁掉ip地址</span><br><span class="line">            RETVAL=$?                                         //定义一个返回值</span><br><span class="line">            if [ $RETVAL -eq 0 ]                              //等于0表示执行成功</span><br><span class="line">            then</span><br><span class="line">                action &quot;$ip -j DROP&quot; /bin/true</span><br><span class="line">                echo &quot;$ip&quot; &gt;&gt;/tmp/ip_$(date +%F).log          //把这个ip写进一个ip地址黑名单</span><br><span class="line">            else</span><br><span class="line">                action &quot;$ip -j DROP&quot; /bin/false</span><br><span class="line">            fi</span><br><span class="line">        fi</span><br><span class="line">done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function del()&#123;</span><br><span class="line">IP_log=/tmp/ip_$(date +%F -d &#x27;-1 day&#x27;).log </span><br><span class="line">if [ -f $IP_log ];then</span><br><span class="line">cat $IP_log|awk &#x27;&#123;print &quot;iptables -D INPUT -s &quot;$1&quot; -j DROP&quot;&#125;&#x27;|bash  //使用AWK的方法取出地址列，然后通过iptables删除，情况iptables表</span><br><span class="line">else</span><br><span class="line">    echo &quot;log is not exist&quot;</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function main()&#123;</span><br><span class="line">flag=0                                                       //计数器</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">sleep 600                                                    //每10分钟运行以下面命令</span><br><span class="line">((flag++))                                                   //每执行一次，计数器自动加上1</span><br><span class="line">    ipt</span><br><span class="line">[ $flag -eq 144 ] &amp;&amp; del &amp;&amp; flag=0                           //超过一天的时候，就把黑名单的ip给释放，并且清空计数器</span><br><span class="line">done</span><br><span class="line">&#125;</span><br><span class="line">main</span><br></pre></td></tr></table></figure><h2 id="配置服务iptables为网关"><a href="#配置服务iptables为网关" class="headerlink" title="配置服务iptables为网关"></a>配置服务iptables为网关</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210121102710.png"></p><h3 id="实验环境配置需求前期准备"><a href="#实验环境配置需求前期准备" class="headerlink" title="实验环境配置需求前期准备"></a>实验环境配置需求前期准备</h3><p><strong>1. 服务器网关（B设备）具备如下条件</strong></p><blockquote><ol><li><p>物理条件是具备双网卡，建议eth0外网地址（10.0.0.10，gw:10.0.0.2）,eth1内网地址（这里是172.16.1.10，内网卡不配GW）</p></li><li><p>确保服务器网关（B设备）可以上网（B设备才能代理别的服务器上网），可以通过ping外网baidu.com测试</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ping www<span class="selector-class">.baidu</span><span class="selector-class">.com</span></span><br><span class="line">PING www<span class="selector-class">.a</span><span class="selector-class">.shifen</span><span class="selector-class">.com</span> (183<span class="selector-class">.232</span><span class="selector-class">.231</span><span class="selector-class">.172</span>) 56(84) bytes of data.</span><br><span class="line">64 bytes from 183<span class="selector-class">.232</span><span class="selector-class">.231</span><span class="selector-class">.172</span>: icmp_seq=<span class="number">1</span> ttl=<span class="number">128</span> time=<span class="number">29.0</span> ms</span><br></pre></td></tr></table></figure></li><li><p>内核文件/etc/sysctl.conf修改为net.ipv4.ip_forward=1，然后执行sysctl -p使用修改生效</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/sysctl.conf</span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line"></span><br><span class="line">$ sysctl -<span class="selector-tag">p</span></span><br><span class="line">net.ipv4.ip_forward = 1</span><br></pre></td></tr></table></figure></li><li><p>查看iptables的filter表，允许FORWARD链转发</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -nL</span><br><span class="line">Chain FORWARD (policy ACCEPT)</span><br><span class="line">target     prot opt source               destination   </span><br></pre></td></tr></table></figure></li><li><p>不需要filter防火墙功能，共享上网最好暂时停掉防火墙测试</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/iptables stop</span><br></pre></td></tr></table></figure></li><li><p>加载iptables内核模块，配置网关需要iptables的nat表，PREROUTING，POSTROUTING载入iptables内核模块</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">modprobe ip_tables</span><br><span class="line">modprobe iptable_filter</span><br><span class="line">modprobe iptable_nat</span><br><span class="line">modprobe ip_conntrack</span><br><span class="line">modprobe ip_conntrack_ftp</span><br><span class="line">modprobe ip_nat_ftp</span><br><span class="line">modprobe ipt_state</span><br></pre></td></tr></table></figure></li></ol><p><strong>2. 内网服务器（C设备）配置网关</strong></p></blockquote><blockquote><p>服务器（C设备）主要1张网卡eth0网卡（地址：172.16.1.20）</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ ifdown eth1                         <span class="comment">//如果有多的网卡，可以占时关闭</span></span><br><span class="line"></span><br><span class="line">$ route add default gw 172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.10</span>    <span class="comment">//临时配置网关路由</span></span><br><span class="line">$ route -n</span><br><span class="line">Kernel IP routing <span class="selector-tag">table</span></span><br><span class="line">Destination   Gateway     Genmask     Flags Metric Ref  Use Iface</span><br><span class="line">0<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.0</span>     172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.10</span>   0<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.0</span>     UG  0   0    0 eth0</span><br><span class="line"></span><br><span class="line">$ vim /etc/sysconfig/network-scripts/ifcfg-eth0   //永久配置网关路由</span><br><span class="line">GATEWAY 172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.20</span></span><br></pre></td></tr></table></figure><p>还需要设置DNS，否则无法查找到主机地址</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/resolv.conf</span><br><span class="line">nameserver 223<span class="selector-class">.5</span><span class="selector-class">.5</span><span class="selector-class">.5</span></span><br></pre></td></tr></table></figure></blockquote><h3 id="实现共享上网"><a href="#实现共享上网" class="headerlink" title="实现共享上网"></a>实现共享上网</h3><p><strong>实现服务器（B设备）通过网关（A设备）上网</strong></p><blockquote><ol><li><p>设置局域网共享网络的NAT命令</p><ul><li>局域网共享的两条命令方法：</li></ul><p>方法1：适合于有固定外网地址的</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -t nat -A POSTROUTING -s 172.16.1.0/24 -o eth0 -j SNAT --to-source 10.0.0.20</span><br></pre></td></tr></table></figure><p>方法2：适合变化外网地址（ADSL）</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -t nat -A POSTROUTING -s 172.16.1.0/24 -o eth0 -j MASQUERADE</span><br></pre></td></tr></table></figure></li><li><p>进行C设备测试</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ping www<span class="selector-class">.baidu</span><span class="selector-class">.com</span></span><br><span class="line">PING www<span class="selector-class">.a</span><span class="selector-class">.shifen</span><span class="selector-class">.com</span> (183<span class="selector-class">.232</span><span class="selector-class">.231</span><span class="selector-class">.172</span>) 56(84) bytes of data.</span><br><span class="line">64 bytes from 183<span class="selector-class">.232</span><span class="selector-class">.231</span><span class="selector-class">.172</span>: icmp_seq=<span class="number">1</span> ttl=<span class="number">128</span> time=<span class="number">69.9</span> ms</span><br></pre></td></tr></table></figure></li></ol></blockquote><h2 id="iptables实现端口转换"><a href="#iptables实现端口转换" class="headerlink" title="iptables实现端口转换"></a>iptables实现端口转换</h2><p><strong>外部IP地址及端口映射到内部服务器地址及端口（和共享上网环境一样）</strong></p><blockquote><p>通过访问网关（B设备）10.0.0.10:9000，即可以访问到（C设备）172.16.1.20:80，来自9000的端口的请求会通过iptables转发到后端的服务器</p><ol><li><p>在服务器（C设备）开启web服务，这里演示为Apache</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -qa httpd              <span class="comment">//检查是否有httpd包</span></span><br><span class="line">httpd-2<span class="selector-class">.2</span><span class="selector-class">.15-69</span><span class="selector-class">.el6</span><span class="selector-class">.centos</span><span class="selector-class">.x86_64</span></span><br><span class="line"></span><br><span class="line">$ /etc/init.d/httpd start    </span><br></pre></td></tr></table></figure></li><li><p>在服务器（B设备）具体转换命令</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -t nat -<span class="selector-tag">A</span> PREROUTING -d 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.20</span> -<span class="selector-tag">p</span> tcp --dport 9000 -j DNAT --to-destination 172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.10</span>:<span class="number">80</span></span><br><span class="line"></span><br><span class="line">$ iptables -nL -t nat       //查看iptables的nat表</span><br><span class="line">Chain PREROUTING (policy ACCEPT)</span><br><span class="line">target     prot opt source               destination         </span><br><span class="line">DNAT       tcp  --  <span class="number">0.0</span>.<span class="number">0.0</span>/<span class="number">0</span>            <span class="number">10.0</span>.<span class="number">0.20</span>           tcp dpt:<span class="number">9000</span> to:<span class="number">172.16</span>.<span class="number">1.10</span>:<span class="number">80</span> </span><br></pre></td></tr></table></figure></li><li><p>在宿主机上测试</p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210121142117.png"></p></li></ol></blockquote><h2 id="总结：iptables常用案列"><a href="#总结：iptables常用案列" class="headerlink" title="总结：iptables常用案列"></a>总结：iptables常用案列</h2><p><strong>1. Linux主机防火墙（表：filter，链：INPUT）</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -<span class="selector-tag">A</span> <span class="selector-tag">INPUT</span> -<span class="selector-tag">p</span> tcp -m multiport --dport 80,443 -j ACCEPT       <span class="comment">//允许80,433端口</span></span><br><span class="line">$ iptables -<span class="selector-tag">A</span> <span class="selector-tag">INPUT</span> -<span class="selector-tag">p</span> tcp --dport 22 -j ACCEPT                        <span class="comment">//允许22端口</span></span><br><span class="line">$ iptables -A INPUT -s 10.0.0.0/24 -p all -j ACCEPT </span><br></pre></td></tr></table></figure><p><strong>2. 局域网机器共享上网（表：nat，链：POSTROUTING）</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -t nat -A POSTROUTING -s 172.16.1.0/24 -o eth0 -j SNAT --to-source 10.0.0.20</span><br></pre></td></tr></table></figure><p><strong>3. 外部地址和端口，映射为内部地址和端口（表：nat，链：PREROUING）</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -t nat -<span class="selector-tag">A</span> PREROUTING -d 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.20</span> -<span class="selector-tag">p</span> tcp --dport 9000 -j DNAT --to-destination 172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.10</span>:<span class="number">80</span></span><br></pre></td></tr></table></figure><h2 id="实现外网IP和内网IP一对一映射"><a href="#实现外网IP和内网IP一对一映射" class="headerlink" title="实现外网IP和内网IP一对一映射"></a>实现外网IP和内网IP一对一映射</h2><p><strong>网关：ip-eth0:124.42.60.109 ip-eth1:10.0.0.254</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -t nat -<span class="selector-tag">A</span> PREROUTING –d 124<span class="selector-class">.42</span><span class="selector-class">.34</span><span class="selector-class">.112</span> -j DNAT --to-destination 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.8</span></span><br><span class="line">$ iptables -t nat -<span class="selector-tag">A</span> POSTROUTING -s 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.8</span> –o eth0 -j SNAT --to-source 124<span class="selector-class">.42</span><span class="selector-class">.34</span><span class="selector-class">.112</span></span><br></pre></td></tr></table></figure><p><strong>如果想内网用户都可以转换，可以这样设置</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -t nat -A POSTROUTING –s 10.0.0.0/255.255.240.0 –d 124.42.34.112 –j SNAT –to-source 10.0.0.254</span><br></pre></td></tr></table></figure><h2 id="实现外网IP和内网IP一对多映射"><a href="#实现外网IP和内网IP一对多映射" class="headerlink" title="实现外网IP和内网IP一对多映射"></a>实现外网IP和内网IP一对多映射</h2><p><strong>1. 将10.0.0.0/28位的掩码映射成外网IP1.1.1.1-1.1.1.10范围</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -t nat -A POSTROUTING -s 10.0.0.0/28 -o eth0 -j SNAT --to-source 1.1.1.1-1.1.1.10</span><br></pre></td></tr></table></figure><p><strong>2. 将10.0.0.0/24位的掩码映射成外网IP1.1.1.1-1.1.1.10范围</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A POSTROUTING -s 10.0.0.0/24 -o eth0 -j SNAT --to-source 1.1.1.1-1.1.1.10</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 防火墙 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iptables </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rsync全网备份</title>
      <link href="2021/01/17/rsync%E5%85%A8%E7%BD%91%E5%A4%87%E4%BB%BD/"/>
      <url>2021/01/17/rsync%E5%85%A8%E7%BD%91%E5%A4%87%E4%BB%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="全网备份"><a href="#全网备份" class="headerlink" title="全网备份"></a>全网备份</h1><h2 id="项目环境准备"><a href="#项目环境准备" class="headerlink" title="项目环境准备"></a>项目环境准备</h2><table><thead><tr><th>主机名</th><th>外网IP</th><th>内网IP</th><th>服务器</th></tr></thead><tbody><tr><td>backup</td><td>10.0.0.203</td><td>172.16.1.203</td><td>rsync服务器</td></tr><tr><td>nfs-1</td><td>10.0.0.204</td><td>172.16.1.204</td><td>nfs服务器</td></tr><tr><td>web-1</td><td>10.0.0.205</td><td>172.16.1.205</td><td>web服务器</td></tr></tbody></table><h2 id="项目需求"><a href="#项目需求" class="headerlink" title="项目需求"></a>项目需求</h2><p><strong>公司中的web集群和nfs服务器都需要进行备份，防止宕机和磁盘损坏，如果一旦服务器和磁盘损坏，后果不堪设想，</strong></p><blockquote><ol><li>规范统一，所有服务器的备份目录必须都为/backup   </li><li>需要备份的系统配置文件<br>a. 定时任务服务的配置文件（/var/spool/cron/root)<br>b. 开机自启动配置文件（/etc/rc.local)<br>c. 日常脚本目录（/server/scripts)<br>d. 防火墙iptables配置文件（/etc/sysconfig/iptables-config)<br>e. web的站点目录和日志目录（/var/www/html/ /app/log/)</li><li>web服务器保留打包后7天后的备份数据 </li><li>备份服务器上，保留每周日的所有数据副本，其他要保留180天的数据</li><li>备份的数据服务器按IP地址为目录保存，备份的文件使用时间名字保存</li><li>确保备份的数据完整性，在备份服务器上对备份的数据每天检查，并将备份成功及失败的结果发到邮箱</li></ol></blockquote><h2 id="项目步骤"><a href="#项目步骤" class="headerlink" title="项目步骤"></a>项目步骤</h2><h3 id="创建项目所需的目录"><a href="#创建项目所需的目录" class="headerlink" title="创建项目所需的目录"></a>创建项目所需的目录</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /backup        //所有服务器</span><br><span class="line">mkdir /server/scripts   //nfs服务和web服务器</span><br></pre></td></tr></table></figure><h3 id="客户端需要压缩的数据信息"><a href="#客户端需要压缩的数据信息" class="headerlink" title="客户端需要压缩的数据信息"></a>客户端需要压缩的数据信息</h3><p><strong>压缩nfs和web服务</strong></p><blockquote><p>//nfs服务器</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -zcvPhf /backup/data_backup.tar.gz_$(date +%F-week%w) /var/spool/cron/root /etc/rc.local /server/scripts</span><br></pre></td></tr></table></figure><p>//web服务器</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ tar -zcvPhf /backup/web_backup.tar.gz_$(date +%F-week%w) /var/www/html </span><br><span class="line">$ tar -zcvPhf /backup/web_backup.tar.gz_$(date +%F-week%w) /app/log/</span><br><span class="line">$ tar -zcvPhf /backup/file_backup.tar.gz_$(date +%F-week%w) /etc/sysconfig/iptables-config /server/scripts</span><br></pre></td></tr></table></figure><p><strong><code>PS：建议web的站点目录和log目录分开打包，因为不管是哪个目录数据都会很大，打包的时候会很慢，一个一个打包可以提升打包的速率。</code></strong></p></blockquote><p>//tar查看并解压确定</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ tar tf /backup/data_backup.tar.gz_2020-12-22-weeek2</span><br><span class="line">$ tar tf /backup/web_backup.tar.gz_2020-12-22-weeek2</span><br><span class="line"></span><br><span class="line">$ tar xf  /backup/data_backup.tar.gz_2020-12-22-weeek2</span><br><span class="line">$ tar xf /backup/web_backup.tar.gz_2020-12-22-weeek2</span><br></pre></td></tr></table></figure><h3 id="web服务器创建7天前的数据并删除"><a href="#web服务器创建7天前的数据并删除" class="headerlink" title="web服务器创建7天前的数据并删除"></a>web服务器创建7天前的数据并删除</h3><p><strong>创建7天前数据</strong></p><blockquote><p>//创建日期自己设定</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ date -s &quot;20200430&quot;</span><br><span class="line">$ cd /backup</span><br><span class="line">$ ll</span><br><span class="line">total 144</span><br><span class="line">-rw-r--r-- 1 root root 12435 Dec  2 16:<span class="number">55</span> web_backup.tar.gz_2020-<span class="number">12</span>-<span class="number">02</span></span><br><span class="line">-rw-r--r-- <span class="number">1</span> root root <span class="number">12435</span> Dec  <span class="number">2</span> <span class="number">16</span>:<span class="number">55</span> web_backup.tar.gz_2020-<span class="number">12</span>-<span class="number">03</span></span><br><span class="line">.....略.....</span><br><span class="line">-rw-r--r-- <span class="number">1</span> root root <span class="number">12435</span> Dec  <span class="number">2</span> <span class="number">16</span>:<span class="number">55</span> web_backup.tar.gz_2020-<span class="number">12</span>-<span class="number">09</span></span><br><span class="line">-rw-r--r-- <span class="number">1</span> root root <span class="number">12435</span> Dec  <span class="number">2</span> <span class="number">16</span>:<span class="number">55</span> web_backup.tar.gz_2020-<span class="number">12</span>-<span class="number">10</span></span><br></pre></td></tr></table></figure></blockquote><p><strong>找出七天前的数据，并删除</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ find /backup -type f -mtime +7 |xargs rm -f</span><br></pre></td></tr></table></figure><p><strong>rsync的配置文件</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/rsyncd.conf </span><br><span class="line">uid = rsync </span><br><span class="line">gid = rsync</span><br><span class="line">port = 873</span><br><span class="line">fake super = yes</span><br><span class="line">use chroot = no</span><br><span class="line">max connections = 200</span><br><span class="line">timeout = 300</span><br><span class="line">pid file = /var/run/rsyncd.pid</span><br><span class="line">lock file = /var/run/rsync.lock</span><br><span class="line">log file = /var/log/rsyncd.log</span><br><span class="line">ignore errors</span><br><span class="line">read only = false</span><br><span class="line">#list = false</span><br><span class="line">hosts allow = 172.16.1/24</span><br><span class="line">hosts deny = 0.0.0.0/24</span><br><span class="line">auth users = rsync_backup</span><br><span class="line">secrets file = /etc/rsync.password</span><br><span class="line"><span class="selector-attr">[backup]</span></span><br><span class="line">comment = &quot;backup dir by other&quot;</span><br><span class="line">path = /backup</span><br></pre></td></tr></table></figure><p><strong>使用rsync传输到备份服务端</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rsync -avz /backup/ rsync_backup@172.16.1.203::backup --password-file=/etc/rsync_password</span><br></pre></td></tr></table></figure><h3 id="备份服务端删除180天的数据，并保留每周日的数据"><a href="#备份服务端删除180天的数据，并保留每周日的数据" class="headerlink" title="备份服务端删除180天的数据，并保留每周日的数据"></a>备份服务端删除180天的数据，并保留每周日的数据</h3><p><strong>设置服务器时间为180天后，在服务端找出180天前的数据并删除，并保留每周日的数据</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ date -s &quot;202105010&quot;</span><br><span class="line">$ find /backup -type f -mtime +180 ! -name &quot;*week7&quot;|xargs rm -f</span><br><span class="line">$ ll /backup/</span><br><span class="line">-rw-r--r-- 1 rsync rsync 12435 Mar  5  2021 web_backup<span class="selector-class">.tar</span><span class="selector-class">.gz_2021-03-08-week7</span></span><br></pre></td></tr></table></figure><h3 id="备份服务端以IP地址目录保存数据，并验证数据完整性"><a href="#备份服务端以IP地址目录保存数据，并验证数据完整性" class="headerlink" title="备份服务端以IP地址目录保存数据，并验证数据完整性"></a>备份服务端以IP地址目录保存数据，并验证数据完整性</h3><p><strong>创建IP地址目录(web和nfs创建)，这里创建web来演示</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir -p /backup/172.16.1.205</span><br><span class="line">$ cd /backup/</span><br><span class="line">$ ll</span><br><span class="line">drwxr-xr-x 2 root root 6 Oct 20 00:<span class="number">07</span> <span class="number">172.16</span>.<span class="number">1.205</span></span><br></pre></td></tr></table></figure><p><strong>分开打包web服务的文件(nfs服务雷同）</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd /backup/172.16.1.205</span><br><span class="line">$ tar -zcvPhf /backup/web_backup.tar.gz_$(date +%F-week%w) /var/www/html</span><br><span class="line">$ tar -zcvPhf /backup/log_backup.tar.gz_$(date +%F-week%w) /app/log</span><br></pre></td></tr></table></figure><p><strong>通过md5sum命令进行校验</strong></p><blockquote><p>//将校验码导入到指纹文件finger.txt（绝对路径）</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ md5sum /backup/10.0.0.203/web_backup.tar.gz_2021-03-05-week5 &gt;finger.txt</span><br><span class="line">$ md5sum /backup/10.0.0.203/web_backup.tar.gz_2021-03-05-week5 &gt;&gt;finger.txt</span><br></pre></td></tr></table></figure><p>//查看校验码文件</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cat finger<span class="selector-class">.txt</span></span><br><span class="line">4c570d961fd6c7790e0a2f3f576a8681  /backup/10.0.0.203/web_backup.tar.gz_2021-03-05-week5</span><br><span class="line">4c570d961fd6c7790e0a2f3f576a8681  /backup/10.0.0.203/web_backup.tar.gz_2021-03-05-week5</span><br></pre></td></tr></table></figure><p>//将压缩包和指纹文件发送到备份服务器</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rsync -avz /backup/172.16.1.205 rsync_backup@172.16.1.203::backup --password-file=/etc/rsync_password  </span><br></pre></td></tr></table></figure><p><strong><code>注意：172.16.1.205后面不要加斜杠，否则只有文件传输过去，目录没有传输</code></strong></p></blockquote><p><strong>进入目录对比指纹文件的校验码（服务端）</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ md5sum -c /backup/172.16.1.205/finger.txt  //绝对路径</span><br><span class="line">/backup/172.16.1.205/web_backup.tar.gz_2021-03-05-week5: OK</span><br><span class="line">/backup/172.16.1.205/web_backup.tar.gz_2021-03-05-week5: OK</span><br><span class="line"></span><br><span class="line">$ md5sum -c finger<span class="selector-class">.txt</span>                      <span class="comment">//相对路径</span></span><br><span class="line">/backup/172.16.1.205/web_backup.tar.gz_2021-03-05-week5: OK</span><br><span class="line">/backup/172.16.1.205/web_backup.tar.gz_2021-03-05-week5: OK</span><br></pre></td></tr></table></figure><h3 id="实现发送邮件"><a href="#实现发送邮件" class="headerlink" title="实现发送邮件"></a>实现发送邮件</h3><p><strong>邮件发送流程</strong><br><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117223933.png"></p><p><strong>开启163邮件代理</strong><br><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117223950.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117223950.png"></p><p><strong>编辑邮箱配置文件，添加配置</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ tail -2 /etc/mail.rc             </span><br><span class="line">set from=163邮箱账户 smtp=smtp.163.com</span><br><span class="line">set smtp-auth-user=163邮箱账户 smtp-auth-password=上述截图的授权码 smtp-auth=login</span><br></pre></td></tr></table></figure><p><strong>发送邮件</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ echo &quot;邮件发送测试&quot; |mail -s &quot;mail check&quot; qq邮箱账户</span><br><span class="line">$ mail -s  &quot;邮箱测试&quot; qq邮箱账户 &lt; 文件</span><br></pre></td></tr></table></figure><p><strong>测试</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ find /backup/ -type f -name &quot;finger.txt&quot;|xargs md5sum -c &amp;&gt;/tmp/check.txt</span><br><span class="line">$ echo &quot;邮件发送测试&quot; |mail -s &quot;邮箱测试&quot; qq邮箱账户 &lt;/tmp/check.txt </span><br></pre></td></tr></table></figure><p><strong><code>PS：使用find命令找到指纹文件，通过xargs将给md5sum处理，&#39;&amp;&#39;代表也将错误信息一起写入到文件</code></strong></p><p><strong>收到的邮件</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117224013.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117224021.png"></p><h2 id="编写全网备份脚本"><a href="#编写全网备份脚本" class="headerlink" title="编写全网备份脚本"></a>编写全网备份脚本</h2><h3 id="客户端脚本（nfs服务器备份脚本）"><a href="#客户端脚本（nfs服务器备份脚本）" class="headerlink" title="客户端脚本（nfs服务器备份脚本）"></a>客户端脚本（nfs服务器备份脚本）</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[root@nfs /server/scripts]</span># cat bak<span class="selector-class">.sh</span> </span><br><span class="line">#!/bin/bash</span><br><span class="line">                                        <span class="comment">//设置目录和IP地址的变量</span></span><br><span class="line">Bak_dir=&quot;/backup&quot;             </span><br><span class="line">Ip_info=$(hostname -i)</span><br><span class="line"></span><br><span class="line"># create dir                  <span class="comment">//创建相应的目录</span></span><br><span class="line">mkdir -p $Bak_dir/$Ip_info</span><br><span class="line"> </span><br><span class="line"># tar system file             <span class="comment">//打包系统的文件</span></span><br><span class="line">tar -cPhf /$Bak_dir/$Ip_info/data_backup.tar.gz_$(date +F%-weeek%w) /var/spool/cron/root /etc/rc.local /server/scripts </span><br><span class="line"></span><br><span class="line"># <span class="selector-tag">del</span> 7 ago data info        <span class="comment">//删除7天的数据</span></span><br><span class="line">find /$Bak_dir/$Ip_info -type f -mtime +7|xargs rm -f 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line"># create finger file         <span class="comment">//创建指纹文件</span></span><br><span class="line">find /$Bak_dir/$Ip_info -type f -mtime -1 ! -name &quot;finger*&quot;|xargs md5sum &gt;/$Bak_dir/$Ip_info/finger.txt</span><br><span class="line"></span><br><span class="line"># rsync backup push data info           <span class="comment">//rsync推送数据到服务端</span></span><br><span class="line">rsync -az /$Bak_dir/$Ip_info rsync_backup@172.16.1.203::backup --password-file=/etc/rsync.password</span><br></pre></td></tr></table></figure><h3 id="客户端脚本（web服务器备份脚本）"><a href="#客户端脚本（web服务器备份脚本）" class="headerlink" title="客户端脚本（web服务器备份脚本）"></a>客户端脚本（web服务器备份脚本）</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[root@nginx scritps]</span># cat web_bak<span class="selector-class">.sh</span></span><br><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">Bak_dir=&quot;/backup&quot;</span><br><span class="line">Ip_info=$(hostname -i)</span><br><span class="line"></span><br><span class="line"># create dir </span><br><span class="line">mkdir -p $Bak_dir/$Ip_info</span><br><span class="line"></span><br><span class="line"># tar system file</span><br><span class="line">cd /</span><br><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">Bak_dir=&quot;/backup&quot;</span><br><span class="line">Ip_info=$(hostname -i)</span><br><span class="line"></span><br><span class="line"># create dir </span><br><span class="line">mkdir -p $Bak_dir/$Ip_info</span><br><span class="line"></span><br><span class="line"># tar system file</span><br><span class="line">tar -cPhf /$Bak_dir/$Ip_info/web_backup.tar.gz_$(date +%F-week%w) /usr/share/nginx/html</span><br><span class="line">tar -cPhf /$Bak_dir/$Ip_info/log_backup.tar.gz_$(date +%F-week%w) /var/log/nginx</span><br><span class="line"></span><br><span class="line"># <span class="selector-tag">del</span> 7 ago data info</span><br><span class="line">find /$Bak_dir/$Ip_info -type f -mtime +7|xargs rm -f 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line"># create finger file</span><br><span class="line">find /$Bak_dir/$Ip_info -type f -mtime -1 ! -name &quot;finger*&quot;|xargs md5sum &gt;/$Bak_dir/$Ip_info/finger.txt</span><br><span class="line"></span><br><span class="line"># rsync backup push data info</span><br><span class="line">rsync -az /$Bak_dir/$Ip_info rsync_backup@172.16.1.203::backup --password-file=/etc/rsync.password</span><br></pre></td></tr></table></figure><h3 id="备份服务器端脚本"><a href="#备份服务器端脚本" class="headerlink" title="备份服务器端脚本"></a>备份服务器端脚本</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[root@rsync /server/scripts]</span># cat server<span class="selector-class">.sh</span> </span><br><span class="line">#!/bin/bash</span><br><span class="line"><span class="comment">//保留每个星期天的数据，将180天以前的数据删除</span></span><br><span class="line"># The server hold back each week 7 data info and hold back 6 months data info</span><br><span class="line">find /backup -type f -mtime +180 ! -name &quot;*week7&quot; 2&gt;/dev/null </span><br><span class="line"></span><br><span class="line"># check finger info      <span class="comment">//校验指纹信息</span></span><br><span class="line">find /backup -type f -name &quot;finger*&quot;|xargs md5sum -c &amp;&gt;/tmp/check.txt</span><br><span class="line"></span><br><span class="line"># send mail in for myself qq-mail         <span class="comment">//发送邮件到自己邮箱</span></span><br><span class="line">mail -s &quot;check backup info for $(date +%F)&quot; QQ邮箱账号 &lt;/tmp/check.txt</span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117224002.png"></p><h2 id="实现定时全网数据备份（定制任务）"><a href="#实现定时全网数据备份（定制任务）" class="headerlink" title="实现定时全网数据备份（定制任务）"></a>实现定时全网数据备份（定制任务）</h2><h3 id="客户端定时任务"><a href="#客户端定时任务" class="headerlink" title="客户端定时任务"></a>客户端定时任务</h3><p><strong>nfs服务器</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ crontab -e</span><br><span class="line"># backup data</span><br><span class="line">0 0 * * * /bin/sh /server/scripts/bak.sh</span><br></pre></td></tr></table></figure><p><strong>web服务器</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ crontab -e</span><br><span class="line"># backup data</span><br><span class="line">0 0 * * * /bin/sh /server/scripts/web_bak.sh</span><br></pre></td></tr></table></figure><h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><p><strong>备份服务端</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ crontab -e</span><br><span class="line"># check backup data</span><br><span class="line">0 5 * * * /bin/sh /server/scripts/server.sh</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> rsync </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rsync </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos6克隆问题</title>
      <link href="2021/01/17/Centos6%E5%85%8B%E9%9A%86%E9%97%AE%E9%A2%98/"/>
      <url>2021/01/17/Centos6%E5%85%8B%E9%9A%86%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="CentOS6的克隆问题"><a href="#CentOS6的克隆问题" class="headerlink" title="CentOS6的克隆问题"></a>CentOS6的克隆问题</h1><h2 id="使用VMware克隆新的虚拟机，网络无法访问"><a href="#使用VMware克隆新的虚拟机，网络无法访问" class="headerlink" title="使用VMware克隆新的虚拟机，网络无法访问"></a>使用VMware克隆新的虚拟机，网络无法访问</h2><p><strong>使用VMware软件对Centos6进行克隆虚拟机后，网络无法访问和启动，Centos7中不会出现这种情况</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214941.png"></p><blockquote><p><strong>主要原因是：克隆后产生了重复的网卡信息</strong></p></blockquote><h2 id="解决的办法"><a href="#解决的办法" class="headerlink" title="解决的办法"></a>解决的办法</h2><p><strong>1. 使用ip address查看克隆后的网卡名称，这里显示的是eth2</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117215005.png"></p><p><strong>2. 修改/etc/udev/rules.d/70-persistent-net.rules文件内容</strong></p><blockquote><ol><li>克隆后会在/etc/udev/rules.d/70-persistent-net.rules文件中会多出1行网卡信</li><li>先查看没有克隆的70-persistent-net.rules文件，会有两个网卡名称，eth0和eth1</li></ol></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117220734.png"></p><p><strong>再查看克隆过后的70-persistent-net.rules文件，多出了一个eth2</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117215057.png"></p><p><strong>在克隆的虚拟机上删除名称为eth0的行，然后将名称为eth2行修改eth0,保存并退出<br> 名称为eth1行的继续保留</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117215106.png"></p><p><strong>3. 修改配置文件/etc/sysconfig/network-scripts/ifcfg-eth0</strong></p><blockquote><p>修改的物理(MAC)地址要于之前在70-persistent-net.rules文件修改为eth0地址物理(MAC)地址一致. ip地址也要改变，其余可以默认不设置</p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117215138.png"></p><p><strong>4. reboot重启Linux服务让其加载修改的文件，之后重启network</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ reboot</span><br><span class="line">$ systemctl restart network</span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117215200.png"></p><blockquote><p><strong>获取ip地址成功</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7安装</title>
      <link href="2021/01/17/Centos7%E5%AE%89%E8%A3%85/"/>
      <url>2021/01/17/Centos7%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="CentOS7安装"><a href="#CentOS7安装" class="headerlink" title="CentOS7安装"></a>CentOS7安装</h1><h2 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213949.png"></p><h2 id="VMware软件安装"><a href="#VMware软件安装" class="headerlink" title="VMware软件安装"></a>VMware软件安装</h2><p><strong>1. 第一步新建一个虚拟机</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214040.png"></p><p><strong>2. 选择自定模式</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214051.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214059.png"></p><p><strong>3. 选择稍后安装操作系统</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214111.png"></p><p><strong>4. 选择Linux操作系统，CentOS7版本</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214122.png"></p><p><strong>5. 设置名称及路径</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214132.png"></p><p><strong>6. 设置CPU，内存，网络，I/O类型，磁盘类型，创建磁盘，磁盘容量，指定磁盘文件（全部选择默认下一步）</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214141.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117221704.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117221657.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214156.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214204.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214209.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214215.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214222.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214227.png"></p><h2 id="创建之后，选择编辑虚拟机设置，放置ISO镜像"><a href="#创建之后，选择编辑虚拟机设置，放置ISO镜像" class="headerlink" title="创建之后，选择编辑虚拟机设置，放置ISO镜像"></a>创建之后，选择编辑虚拟机设置，放置ISO镜像</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214240.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214244.png"></p><h2 id="开启虚拟机安装"><a href="#开启虚拟机安装" class="headerlink" title="开启虚拟机安装"></a>开启虚拟机安装</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214256.png"></p><p><strong>1. 进入到第一个安装页面</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214305.png"></p><blockquote><ul><li>第一行表示：安装CentOS7，选择第一个即可</li><li>第二行表示：测试光盘镜像并安装系统（这个我们都不用光盘了，所以不会选择这个）</li><li>第三行表示：排错模式（修复系统，比如重置系统密码）</li></ul><ul><li>补充：CentOS7的网卡名称和之前CentOS6的网卡名称不一致，（CentOS6网卡名称为eth0开头）CentOS7为ens33开头。而大部分企业服务器都是eth0开头，如果想早点适应企业服务器使用的网卡名称，可该名为eth0(按键盘上tab键—&gt;把光标移到下面一行—&gt;输入命令：net.ifnames=0 bisodevname-0，然后回车，进入安装</li></ul></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214419.png"></p><p><strong>2. 第二个页面，选择语言，默认选择英文，也可选择中文（建议选择英文）</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214431.png"></p><p><strong>3. 第三个页面</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214440.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214446.png"></p><p><strong>4. 设置网络和主机名（NETWORK&amp;HOSTNAME）</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117222532.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214504.png"></p><p><strong>5. 选择Ipv4 Settings进行设置地址</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214513.png"></p><p><strong>6. 设置KDUMP</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214525.png"></p><p><strong>7. 设置SECURITY POLICY</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214534.png"></p><p><strong>8. 设置分区（INSTALLA TION DESTINA TION）</strong></p><blockquote><p><strong>如果懒的分区，可以直接选择自动分区（则忽略下面手动分区的内容），如果对分区有要求的可以看下面的手动分区</strong></p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214608.png"></p><p><strong>9. 手动分区</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214616.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214620.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214625.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214630.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214634.png"></p><p><strong>10. 设置软件选择(SOFTWARE SELECTION)</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214646.png"></p><p><strong>11. 设置时钟（DATE&amp;TIME）</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214654.png"></p><p><strong>12. 全部完成，点击下一步</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214701.png"></p><p><strong>13. 第四个画面，设置root密码和普通用户账户密码</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214709.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214713.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214719.png"></p><p><strong>14. 等待安装完成之后点击重启</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214727.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214731.png"></p><p><strong>15. 进入到centos7最小化安装画面（不带桌面），如果选择桌面版，则在第10步选择带桌面的安装，现在输入账户密码就可以操作系统了</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117214741.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SecureCRT安装与配置方案</title>
      <link href="2021/01/17/SecureCRT%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%96%B9%E6%A1%88/"/>
      <url>2021/01/17/SecureCRT%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h1 id="SecureCRT加载配色方案"><a href="#SecureCRT加载配色方案" class="headerlink" title="SecureCRT加载配色方案"></a>SecureCRT加载配色方案</h1><h2 id="SecureCRT工具包"><a href="#SecureCRT工具包" class="headerlink" title="SecureCRT工具包"></a>SecureCRT工具包</h2><p>链接：<a href="https://pan.baidu.com/s/15QQSfZyknRga7F2uN3i3ww">https://pan.baidu.com/s/15QQSfZyknRga7F2uN3i3ww</a><br>提取码：n13b</p><h2 id="安装CRT软件"><a href="#安装CRT软件" class="headerlink" title="安装CRT软件"></a>安装CRT软件</h2><p><strong>注意:需要关闭主机上安全措施或其他安全软件，如360等</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117212535.png"></p><p><strong>开始安装</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117212634.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117221253.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117221258.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117212651.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117212717.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117212722.png"></p><p><strong>等待</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117212736.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117212742.png"></p><h2 id="打开密钥生成器keygen"><a href="#打开密钥生成器keygen" class="headerlink" title="打开密钥生成器keygen"></a>打开密钥生成器keygen</h2><blockquote><p><strong>注意：打开密钥生成器，需要右键使用管理员的身份打开，否则不能成功</strong></p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117212947.png"></p><p><strong>找到自己安装CRT的路径</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213003.png"></p><p><strong>复制到之前点击Patch打开的窗口</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213040.png"></p><p><strong>要显示出Patch has been done successfuily!，才算成功</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213058.png"></p><p><strong>点击确定之后，选择LicenseHelper，然后打开</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213113.png"></p><p><strong>再次显示出Patch has been done successfuily!，表示成功</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213128.png"></p><p><strong>打开安装好的CRT软件</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213158.png"></p><p><strong>点击ok</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213214.png"></p><p><strong>选择Enter License Data</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213229.png"></p><p><strong>选择Enter License Manually</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213251.png"></p><p><strong>将keygen中的值粘贴过去，然后点击下一步</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213308.png"></p><p><strong>同样粘贴过去，然后点击下一步</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213358.png"></p><p><strong>完成</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213358.png"></p><p><strong>会自动打开CRT界面</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213413.png"></p><h2 id="设置配色方案"><a href="#设置配色方案" class="headerlink" title="设置配色方案"></a>设置配色方案</h2><p><strong>点击Options–&gt;Global Options</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213444.png"></p><p><strong>复制CRT的配置文件路径，进入到配置文件路径</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213550.png"></p><p><strong>新建一个目录，为keywords,不能选择其他名字，否则不能成功</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213601.png"></p><p><strong>将配色脚本文件colorful-network.ini移动到keywords目录中，回到CRT的设置窗口，点击Default Session</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213619.png"></p><p><strong>点击Appearance，选择上述移动到keywords目录的配色脚本文件colorful-network</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213634.png"></p><p><strong>选择改变所有会话</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213644.png"></p><h2 id="连接一个主机"><a href="#连接一个主机" class="headerlink" title="连接一个主机"></a>连接一个主机</h2><p><strong>快速连接一个设备，连接一个主机，填写IP地址和用户</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213714.png"></p><p><strong>选择接受并保存</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213724.png"></p><p><strong>查看效果</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117213734.png"></p>]]></content>
      
      
      <categories>
          
          <category> 连接工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>xshell颜色方案</title>
      <link href="2021/01/17/xshell%E9%A2%9C%E8%89%B2%E6%96%B9%E6%A1%88/"/>
      <url>2021/01/17/xshell%E9%A2%9C%E8%89%B2%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h1 id="xshell的配置颜色方案"><a href="#xshell的配置颜色方案" class="headerlink" title="xshell的配置颜色方案"></a>xshell的配置颜色方案</h1><h2 id="xshell配置颜色设置"><a href="#xshell配置颜色设置" class="headerlink" title="xshell配置颜色设置"></a>xshell配置颜色设置</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117211332.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117211337.png"></p><blockquote><ol><li>将下面配色代码写入到txt文件中，保存修改后缀为.xcs<br>如：ColorForMe.xcs，然后导入到xshell中。</li></ol></blockquote><h2 id="ColorForMe配色"><a href="#ColorForMe配色" class="headerlink" title="ColorForMe配色"></a>ColorForMe配色</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[ColorForMe]</span></span><br><span class="line">text=BDB76B</span><br><span class="line">text(bold)=FFD700</span><br><span class="line">background=002B36</span><br><span class="line">red=CB4B16</span><br><span class="line">red(bold)=E14B16</span><br><span class="line">magenta=6C71C4</span><br><span class="line">magenta(bold)=7684D8</span><br><span class="line">yellow=B58900</span><br><span class="line">yellow(bold)=C99D00</span><br><span class="line">blue=268BD2</span><br><span class="line">blue(bold)=26A0D2</span><br><span class="line">cyan=2AA198</span><br><span class="line">cyan(bold)=2AB5AC</span><br><span class="line">green=639A07</span><br><span class="line">green(bold)=77AE1B</span><br><span class="line">white=eee8d5</span><br><span class="line">white(bold)=F8F2DF</span><br><span class="line">black=143F4A</span><br><span class="line">black(bold)=004954</span><br><span class="line"><span class="selector-attr">[Names]</span></span><br><span class="line">name0=ColorForMe</span><br><span class="line">count=1</span><br></pre></td></tr></table></figure><p><strong>效果展示</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117211417.png"></p><h2 id="isayme配色"><a href="#isayme配色" class="headerlink" title="isayme配色"></a>isayme配色</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[isayme]</span></span><br><span class="line">text(bold)=eaeaea</span><br><span class="line">magenta(bold)=ff00ff</span><br><span class="line">text=ffffff</span><br><span class="line">white(bold)=eaeaea</span><br><span class="line">green=00c000</span><br><span class="line">red(bold)=d20000</span><br><span class="line">green(bold)=00ff00</span><br><span class="line">black(bold)=808080</span><br><span class="line">red=c00000</span><br><span class="line">blue=113fcc</span><br><span class="line">black=000000</span><br><span class="line">blue(bold)=0080ff</span><br><span class="line">yellow(bold)=ffff00</span><br><span class="line">cyan(bold)=00ffff</span><br><span class="line">yellow=c0c000</span><br><span class="line">magenta=c000c0</span><br><span class="line">background=222222</span><br><span class="line">white=c0c0c0</span><br><span class="line">cyan=00c0c0</span><br><span class="line"><span class="selector-attr">[Names]</span></span><br><span class="line">count=1</span><br><span class="line">name0=isayme</span><br></pre></td></tr></table></figure><p><strong>效果展示</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117211436.png"></p><h2 id="Solarized-Dark配色"><a href="#Solarized-Dark配色" class="headerlink" title="Solarized Dark配色"></a>Solarized Dark配色</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[Solarized Dark]</span></span><br><span class="line">text=839496</span><br><span class="line">cyan(bold)=93a1a1</span><br><span class="line">text(bold)=408080</span><br><span class="line">magenta=dd3682</span><br><span class="line">green=859900</span><br><span class="line">green(bold)=586e75</span><br><span class="line">background=042028</span><br><span class="line">cyan=2aa198</span><br><span class="line">red(bold)=cb4b16</span><br><span class="line">yellow=b58900</span><br><span class="line">magenta(bold)=6c71c4</span><br><span class="line">yellow(bold)=657b83</span><br><span class="line">red=808000</span><br><span class="line">white=eee8d5</span><br><span class="line">blue(bold)=8080ff</span><br><span class="line">white(bold)=fdf6e3</span><br><span class="line">black=002b36</span><br><span class="line">blue=268bd2</span><br><span class="line">black(bold)=073642</span><br><span class="line"><span class="selector-attr">[Names]</span></span><br><span class="line">name0=Solarized Dark</span><br><span class="line">count=1</span><br></pre></td></tr></table></figure><p><strong>效果展示</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117211458.png"></p><h2 id="SolarizedDarkModify配色"><a href="#SolarizedDarkModify配色" class="headerlink" title="SolarizedDarkModify配色"></a>SolarizedDarkModify配色</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[SolarizedDarkModify]</span></span><br><span class="line">text=839496</span><br><span class="line">cyan(bold)=00ffff</span><br><span class="line">text(bold)=e9e9e9</span><br><span class="line">magenta=c000c0</span><br><span class="line">green=80ff00</span><br><span class="line">green(bold)=3c5a38</span><br><span class="line">background=042028</span><br><span class="line">cyan=00c0c0</span><br><span class="line">red(bold)=ff0000</span><br><span class="line">yellow=c0c000</span><br><span class="line">magenta(bold)=ff00ff</span><br><span class="line">yellow(bold)=ffff00</span><br><span class="line">red=ff4500</span><br><span class="line">white=c0c0c0</span><br><span class="line">blue(bold)=1e90ff</span><br><span class="line">white(bold)=fdf6e3</span><br><span class="line">black=000000</span><br><span class="line">blue=00bfff</span><br><span class="line">black(bold)=808080</span><br><span class="line"><span class="selector-attr">[Names]</span></span><br><span class="line">name0=SolarizedDarkModify</span><br><span class="line">count=1</span><br></pre></td></tr></table></figure><p><strong>效果展示</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117211518.png"></p>]]></content>
      
      
      <categories>
          
          <category> 连接工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xshell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xshell设置</title>
      <link href="2021/01/17/xshell%E8%AE%BE%E7%BD%AE/"/>
      <url>2021/01/17/xshell%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="xshell安装及优化"><a href="#xshell安装及优化" class="headerlink" title="xshell安装及优化"></a>xshell安装及优化</h1><h2 id="xshll版本说明"><a href="#xshll版本说明" class="headerlink" title="xshll版本说明"></a>xshll版本说明</h2><p><strong>xshell5：</strong>一个进程可以打开多个窗口，没有背景设置<br><strong>xshell6：</strong>一个进程只能打开四个窗口，有背景设置</p><h2 id="xshell安装步骤"><a href="#xshell安装步骤" class="headerlink" title="xshell安装步骤"></a>xshell安装步骤</h2><p>…………..省略</p><h2 id="xshell配置"><a href="#xshell配置" class="headerlink" title="xshell配置"></a>xshell配置</h2><h3 id="xshell属性设置"><a href="#xshell属性设置" class="headerlink" title="xshell属性设置"></a>xshell属性设置</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117210251.jpeg"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117210431.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117210443.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117210454.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117210503.png"></p><h3 id="xshell选项设置"><a href="#xshell选项设置" class="headerlink" title="xshell选项设置"></a>xshell选项设置</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117210517.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117210601.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117210615.png"></p><h3 id="xshell新建连接"><a href="#xshell新建连接" class="headerlink" title="xshell新建连接"></a>xshell新建连接</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117210627.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117210642.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117210650.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117210702.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117220916.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117215948.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117211051.jpeg"></p><h3 id="xhsell的透明模式设置"><a href="#xhsell的透明模式设置" class="headerlink" title="xhsell的透明模式设置"></a>xhsell的透明模式设置</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117211056.jpeg"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117211102.jpeg"></p><h3 id="xshell-6设置背景图片"><a href="#xshell-6设置背景图片" class="headerlink" title="xshell-6设置背景图片"></a>xshell-6设置背景图片</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117210251.jpeg"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117211115.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 连接工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xshell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据通信基本原理</title>
      <link href="2021/01/17/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/"/>
      <url>2021/01/17/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="数据通信基本原理"><a href="#数据通信基本原理" class="headerlink" title="数据通信基本原理"></a>数据通信基本原理</h1><h2 id="什么是网络协议？"><a href="#什么是网络协议？" class="headerlink" title="什么是网络协议？"></a>什么是网络协议？</h2><blockquote><ol><li>网络协议为计算机网络中进行数据交换而建立的规则\标准或约定的集合,它规定了通信时信息必须采用的格式和这些格式所代表的意义. 网络协议使网络上各种设备能够相互交换信息</li><li>网络中存在着许多协议,接收方和发送方使用的协议必须一致,否则一方将无法识别一方发出的信息</li></ol></blockquote><h2 id="OSI参考模型"><a href="#OSI参考模型" class="headerlink" title="OSI参考模型"></a>OSI参考模型</h2><blockquote><ol><li>ISO：国际标准化组织（International Organization for Standardization）</li><li>OSI：开放系统互联（open system interconnection）20世纪70年代后期,ISO创建OSI参考模型,希望不同供应商的网络能够相互协同工作</li><li>OSI：模型分为七层,由下到上分别为物理层,数据链路层,网络层,传输层,会话层,表示层和应用层</li><li>OSI：模型目的是为了使两个不同的系统能够较容易地通信,而不需要改变底层的硬件或软件的逻辑. 5. OSI模型并不是协议,它是个灵活的\稳健的和可互操作的模型,用来了解和设计网络体系结构.</li></ol></blockquote><h2 id="OSI参考模型体系结构"><a href="#OSI参考模型体系结构" class="headerlink" title="OSI参考模型体系结构"></a>OSI参考模型体系结构</h2><blockquote><ol><li>OSI模型每层都有自己的功能集</li><li>层与层之间相互独立又相互依靠</li><li>上层依赖于下层,下层为上层提供服务</li></ol></blockquote><blockquote><ol><li>应用层作用：<br>  为应用软件提供接口,是应用程序能够使用网络服务<br>  常见的应用层协议：HTTP（80）,FTP（20,21）,SMTP（25）,POP3（110）,Telnet（23）.SSH（22）,DNS（53）等等.</li><li>表示层的作用：<br>  数据的解码和编码<br>  数据的加密和解密<br>  数据的压缩和解压缩</li><li>会话层的作用：<br>  建立\维护\管理应用程序之间的会话</li><li>传出层的作用：<br>  负责建立端到端的连接,保证报文在端到端之间的传输.<br>  功能：服务端编址\分段与重组\连接控制\流量控制\差错控制</li><li>网络层的作用：<br>  负责将分组数据从源端传到到目的端<br>  功能：为网络设备提供逻辑地址（IP）进行路由选路,分组转发</li><li>数据链路层的作用：<br>  在不可靠的物理链路上,提供可靠的数据传输服务,把帧从一跳（结点）移动到另一跳（结点）<br>  功能：组帧\物理编址\流量控制\差错控制\接入控制</li><li>物理层的作用：<br>  负责把逐个比特流从一跳（结点）移动另一端（结点）<br>  功能：定义接口和媒体的物理特性; 定义比特的表示\数据传输速率\信号传输模式（单工\半双工\全双工）; 定义网络物理拓扑（网状\星型\环型\总线型等拓扑）</li></ol></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117204940.png"></p><h2 id="OSI七层通讯原理"><a href="#OSI七层通讯原理" class="headerlink" title="OSI七层通讯原理"></a>OSI七层通讯原理</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117204951.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117204956.png"></p><p><strong>封装每一层都把上层的协议包当成数据部分,加上自己的协议头部,组成自己的协议包</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117205101.png"></p><h2 id="PDU（协议数据单元）"><a href="#PDU（协议数据单元）" class="headerlink" title="PDU（协议数据单元）"></a>PDU（协议数据单元）</h2><blockquote><ol><li>PDU(protocol data unit):每一层使用自己层的协议和别的系统对应层相互通信,协议层的协议在对等层之间交换的信息叫协议数据单元<ul><li>上层：message（数据）</li><li>Transport layer：segment（段）</li><li>Network layer：packet（包）</li><li>Data-link layer：Frame（帧）</li><li>Physical layer：bit（比特）</li></ul></li></ol></blockquote><h2 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h2><p><strong>物理层标准规定了信号\连接器和电缆要求</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117205236.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117205242.png"></p><h3 id="物理层设备"><a href="#物理层设备" class="headerlink" title="物理层设备"></a>物理层设备</h3><p><strong>物理层设备-集线器</strong></p><blockquote><ol><li>所有的设备在同一冲突域（collision domain）</li><li>所有的设备都在同一广播域（broadcast domain）</li><li>设备共享宽带</li></ol></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117205301.png"></p><p><strong>终端越多冲突（域）就越大</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117205324.png"></p><p><strong>冲突过程</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117205333.png"></p><blockquote><p>情况是PCA和PCC都要发送数据,两个刚才都检测到HUB上是空闲的,所以都发送了数据,结果产生了冲突,两人都同时启动BACK OFF（让步）动作,随机的生成一个秒数,等待再发数据包,如果再与其他PC发送的数据包冲突,那么再次进入BACK OFF,BACK OFF一共可以进行15次</p></blockquote><h3 id="CSMA-CD技术"><a href="#CSMA-CD技术" class="headerlink" title="CSMA/CD技术"></a>CSMA/CD技术</h3><blockquote><p>载波侦听多路访问/冲突检测CSMA/CD（carrier sense multiple access/collision detect）:一种介质访问的控制方法,当在同一共享网络中的不同结点同时传送数据包时,不可避免的会产生冲突,而CSMA/CD机制就是用来解决这种中途问题</p></blockquote><p><strong>CSMA/CD工作原理</strong></p><blockquote><p>当一个节点在网络中发送数据时,它首先检查线路上是否有其他主机的信号在传送：如果有,说明其他主机在发送数据,自己则利用退避算法等一会在试图发送；如果线路上没有其他主机的信号,将把自己的数据发送出去,同时不停的监听线路,已确信其他主机没有发送数据,如果检测到有其他信息,自己就发送一个JAM(阻塞)信号,通知网段上的其他节点停止发送数据,这使,其他节点也必须采用退避算法等一会再试图发送</p><p><strong><code>总结:先听后发，边听边发，冲突停发，随机延迟后重发</code></strong></p></blockquote><p><strong>CSMA/CD重要特性</strong></p><blockquote><ul><li>使用CSMA/CD协议的以太网不能进行全双工通信而只能进行双向交替通信（半双工通信）每个站在发送数据之后的一小段时间内,存在着遭遇碰撞的可能性</li><li>集线器（HUB）–10M以太网：半双工通信</li><li>交换机—100M以太网：全双工通信</li></ul></blockquote><h2 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h2><p><strong>数据链路层功能</strong></p><blockquote><p>数据链路层通常拆分成两个子层：上子层和下子层</p><ol><li>逻辑链路层</li><li>介质访问控制</li></ol></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117205529.png"></p><p><strong>数据链路层-创建帧</strong></p><blockquote><p>数据链路层帧格式：</p><ol><li>IEEE assigned：电气和电子工程师协会分配前32位</li><li>供应商 assigned：其余的32位由供应商分配</li></ol></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117205555.png"></p><p><strong>数据链路层设备–网络适配器</strong></p><blockquote><ol><li>网络适配器（网卡）<ul><li>网络适配器属于数据链路层设备</li></ul></li><li>MAC地址<ul><li>每个网卡芯片都会烧录一个全球唯一的MAC地址</li></ul></li><li>网卡速率<ul><li> 10\100\1000M自适应</li></ul></li><li>双工模式<ul><li>支持全双工\半双工\自适应</li></ul></li><li>每个接口都有自己的冲突域</li><li>所有的接口都在同一个广播域</li></ol></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117205655.png"></p><h2 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h2><p><strong>网络层数功能</strong></p><blockquote><p>网络层（从主机到主机的通信）</p><ol><li>为每个终端设备之间通过网络交换数据的片段提供服务</li><li>基本工程：编址，封装，路由，解封装</li><li>协议：IPv4，IPv6，AppleTalk，IPX等.</li></ol></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117205734.png"></p><h3 id="IP报文"><a href="#IP报文" class="headerlink" title="IP报文"></a>IP报文</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117205813.png"></p><blockquote><ol><li>版本：IP协议的版本，目前的IP协议版本号为4，下一代IP协议版本号为6。</li><li>首部长度：IP报头的长度。固定部分的长度（20字节）和可变部分的长度之和。共占4位。最大为1111，即10进制的15，代表IP报头的最大长度可以为15个32bits（4字节），也就是最长可为15*4=60字节，除去固定部分的长度20字节，可变部分的长度最大为40字节。</li><li>服务类型（TOS）：Type Of Service,只有在有QoS差分服务要求时这个字段才起作用。</li><li>总长度：IP报文的总长度。报头的长度和数据部分的长度之和。</li><li>身份标识：唯一的标识主机发送的每一分数据报。通常每发送一个报文，它的值加一。当IP报文长度超过传输网络的MTU（最大传输单元）时必须分片，这个标识字段的值被复制到所有数据分片的标识字段中，使得这些分片在达到最终目的地时可以依照标识字段的内容重新组成原先的数据。</li><li>标志：共3位。R、DF、MF三位。目前只有后两位有效，DF位：为1表示不分片，为0表示分片。MF：为1表示“更多的片”，为0表示这是最后一片。</li><li>片位移：本分片在原先数据报文中相对首位的偏移位。（需要再乘以8）</li><li>生存时间（TTL）：IP报文所允许通过的路由器的最大数量。每经过一个路由器，TTL减1，当为0时，路由器将该数据报丢弃。TTL 字段是由发送端初始设置一个 8 bit字段.推荐的初始值由分配数字 RFC 指定，当前值为 64。发送 ICMP 回显应答时经常把 TTL 设为最大值 255。</li><li>协议号：指出IP报文携带的数据使用的是那种协议，以便目的主机的IP层能知道要将数据报上交到哪个进程（不同的协议有专门不同的进程处理）。和端口号类似，此处采用协议号，TCP的协议号为6，UDP的协议号为17。ICMP的协议号为1，IGMP的协议号为2.</li><li>校验和：计算IP头部的校验和，检查IP报头的完整性。</li><li>源IP地址：标识IP数据报的源端设备。</li><li>目的IP地址：标识IP数据报的目的地址。</li><li>Options (其他参数)，这个是额外的功能，提供包括安全处理机制、路由纪录、时间戳、严格与宽松之来源路由等。</li><li>Padding(补齐项目)Options和Padding一共有32位，由于Options字段不是固定的，所以需要Padding 字段来加以补齐</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ARP实验</title>
      <link href="2021/01/17/ARP%E5%AE%9E%E9%AA%8C/"/>
      <url>2021/01/17/ARP%E5%AE%9E%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="ARP实验"><a href="#ARP实验" class="headerlink" title="ARP实验"></a>ARP实验</h1><h2 id="ARP代理"><a href="#ARP代理" class="headerlink" title="ARP代理"></a>ARP代理</h2><p>proxy ARP就是通过使用一个主机（通常为router），来作为指定的设备对另一设备的ARP请求作出应答</p><h2 id="ARP代理实验"><a href="#ARP代理实验" class="headerlink" title="ARP代理实验"></a>ARP代理实验</h2><p><strong>如图</strong>：有三台路由器，其中两台路由器充当主机，R5不设置网关，通过R6的代理ARP实现能够访问R7</p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117203248.png"></p><h3 id="路由器充当主机的命令为"><a href="#路由器充当主机的命令为" class="headerlink" title="路由器充当主机的命令为"></a>路由器充当主机的命令为</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">R5：</span><br><span class="line">  R5(config)<span class="selector-id">#no</span> ip routing <span class="comment">//关闭路由功能</span></span><br><span class="line"></span><br><span class="line">R7：</span><br><span class="line">  R7(config)<span class="selector-id">#no</span> ip routing <span class="comment">//关闭路由功能</span></span><br><span class="line">  R7(config)<span class="selector-id">#ip</span> default-gateway 172<span class="selector-class">.16</span><span class="selector-class">.2</span><span class="selector-class">.254</span>  <span class="comment">//设置网关</span></span><br></pre></td></tr></table></figure><h3 id="配置完之后，查看是没有路由的"><a href="#配置完之后，查看是没有路由的" class="headerlink" title="配置完之后，查看是没有路由的"></a>配置完之后，查看是没有路由的</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117203316.png"></p><h3 id="R6配置"><a href="#R6配置" class="headerlink" title="R6配置"></a>R6配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">interface Ethernet0/0</span><br><span class="line"> ip <span class="selector-tag">address</span> 172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.254</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line">!</span><br><span class="line">interface Ethernet0/1</span><br><span class="line"> ip <span class="selector-tag">address</span> 172<span class="selector-class">.16</span><span class="selector-class">.2</span><span class="selector-class">.254</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line"><span class="comment">//默认情况下，路由器是开启代理ARP的，所以R6无须设置其他命令，只需要配置IP地址</span></span><br><span class="line"> #开启ARP命令为R6(config-if)<span class="selector-id">#ip</span> proxy-arp</span><br><span class="line"> #关闭ARP命令为R6(config-if)<span class="selector-id">#no</span> ip proxy-arp</span><br></pre></td></tr></table></figure><h3 id="使用wireshark抓包查看"><a href="#使用wireshark抓包查看" class="headerlink" title="使用wireshark抓包查看"></a>使用wireshark抓包查看</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117203354.png"></p><p><strong>请求过程</strong></p><blockquote><p>以自己的源地址172.16.1.2和源MAC地址aa:bb:cc:00:50:00，目的地址为172.16.2.1，MAC地址为00:00:00:00:00:00的ARP广播请求发送给路由器，路由收到了该广播ARP，但是路由器默认不会转发广播的，所以该ARP请求仍然到达不了R7，但是路由器却知道R7位于另外一个子网172.16.2.0，于是路由器应答自己的MAC地址给R5</p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117203414.png"></p><p><strong>响应过程</strong></p><blockquote><p>包含了源地址地址172.16.2.1，源MAC地址是路由器aa:bb:cc:00:60:00，目的地址172.16.1.1，MAC地址aa:bb:cc:00:50:00，R5接受这个包之后，会将R7的MAC地址缓存在自己的ARP表中，如果再次发送请求，就不需要路由器进行转发，因为R5知道了怎么到达R7。</p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117203428.png"></p><h3 id="代理ARP的优点"><a href="#代理ARP的优点" class="headerlink" title="代理ARP的优点"></a>代理ARP的优点</h3><blockquote><ol><li>代理ARP的主要优点是它可以添加到网络上的单个路由器，而不会干扰网络上其他路由器的路由表</li><li>如果IP主机没有配置默认网关，或者没有任何路由智能功能，则必须在网络中使用代理ARP。</li></ol></blockquote><h3 id="代理ARP的缺点"><a href="#代理ARP的缺点" class="headerlink" title="代理ARP的缺点"></a>代理ARP的缺点</h3><blockquote><ol><li>它增加了网段中的ARP流量</li><li>主机需要更大的ARP表才能处理IP到MAC地址的映射</li><li>安全性可能遭到破坏。比如APR欺骗</li><li>它不适用于不使用 ARP 进行地址解析的网络。</li><li>不能够概括和推广网络拓扑</li></ol></blockquote><h2 id="免费ARP"><a href="#免费ARP" class="headerlink" title="免费ARP"></a>免费ARP</h2><h3 id="免费ARP基本概念"><a href="#免费ARP基本概念" class="headerlink" title="免费ARP基本概念"></a>免费ARP基本概念</h3><blockquote><ol><li>免费ARP，也叫Gratutious ARP,无故ARP。这种ARP不同于一般的ARP请求，它的Sender IP和Target IP字段是相同的，相当于是请求自己的IP地址对应的MAC地址</li><li>发送免费ARP的主机或者设备，往往并不希望收到一个ARP应答，因为若是收到了，说明网络上有人使用相同的IP，这回照成IP冲突。</li></ol></blockquote><h3 id="免费ARP的作用"><a href="#免费ARP的作用" class="headerlink" title="免费ARP的作用"></a>免费ARP的作用</h3><blockquote><p>免费ARP数据包有以下3个作用：</p><ol><li>该类型报文起到一个宣告作用， 它以广播的形式将数据包发送出去，不需要得到回应，只为了告诉其他计算机自己的IP地址和MAC地址。</li><li>可用于检测IP地址冲突。 当一台主机发送了免费ARP请求报文后，如果收到了ARP响应，则说明网络已经存在使用该IP地址的主机。</li><li>可用于更新其他主机的ARP缓存。 如果该主机更换了网卡，而其他主机的ARP缓存表仍然保留着原来的MAC地址，这时，可以发送免费ARP数据包。其他主机收到该数据包后，将更新ARP缓存表，将原来的MAC地址天魂为新的MAC地址。</li></ol></blockquote><h2 id="免费APR实验"><a href="#免费APR实验" class="headerlink" title="免费APR实验"></a>免费APR实验</h2><p><strong>如图</strong>：核心交换机搭建了一个DHCP服务，接入层交换机作为中继，主机win-xp和主机（路由器）通过中继获取DHCP参数（IP地址，网关，DNS）</p><blockquote><p><strong>注：该实验需要懂DHCP原理</strong></p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117203612.png"></p><h3 id="核心层配置"><a href="#核心层配置" class="headerlink" title="核心层配置"></a>核心层配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开启DHCP服务功能</span></span><br><span class="line">Switch1(config)<span class="selector-id">#service</span> dhcp</span><br><span class="line">!</span><br><span class="line"><span class="comment">//配置dhcp地址池</span></span><br><span class="line">ip dhcp pool vlan10</span><br><span class="line"> network 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.0</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line"> default-router 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.254</span></span><br><span class="line"> dns-server 8<span class="selector-class">.8</span><span class="selector-class">.8</span><span class="selector-class">.8</span></span><br><span class="line">!</span><br><span class="line"><span class="comment">//配置核心层与汇聚层互连ip地址</span></span><br><span class="line">interface GigabitEthernet0/0</span><br><span class="line"> no switchport</span><br><span class="line"> ip <span class="selector-tag">address</span> 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line">！</span><br><span class="line"><span class="comment">//配置核心层至汇聚设备用户网段的静态路由</span></span><br><span class="line">ip route 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.0</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span> 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.2</span></span><br></pre></td></tr></table></figure><h3 id="汇聚层配置"><a href="#汇聚层配置" class="headerlink" title="汇聚层配置"></a>汇聚层配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开启汇聚交换机的DHCP服务功能</span></span><br><span class="line">S2(config)<span class="selector-id">#service</span> dhcp</span><br><span class="line">！</span><br><span class="line"><span class="comment">//配置vlan及vlan 10的ip地址（用户网关的地址）</span></span><br><span class="line">Switch1(config-if)<span class="selector-id">#vlan</span> 10</span><br><span class="line">!</span><br><span class="line">interface Vlan10</span><br><span class="line"> ip <span class="selector-tag">address</span> 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.254</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line">！</span><br><span class="line"><span class="comment">//配置汇聚层与核心层互连的ip地址</span></span><br><span class="line">interface GigabitEthernet0/0</span><br><span class="line"> no switchport</span><br><span class="line"> ip <span class="selector-tag">address</span> 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.2</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line">！</span><br><span class="line"><span class="comment">//划分两台终端至vlan10</span></span><br><span class="line">interface GigabitEthernet0/1</span><br><span class="line"> switchport access vlan 10</span><br><span class="line"> switchport mode access</span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet0/2</span><br><span class="line"> switchport access vlan 10</span><br><span class="line"> switchport mode access</span><br><span class="line">！</span><br><span class="line"><span class="comment">//配置汇聚层到外网的默认路由</span></span><br><span class="line">ip route 0<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.0</span> 0<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.0</span> 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span></span><br><span class="line">！</span><br><span class="line"><span class="comment">//开启汇聚层DHCP relay功能,该地址需要是核心交换机的IP地址，并且路由可达.</span></span><br><span class="line">S2(config)<span class="selector-id">#in</span> vlan 10</span><br><span class="line">S2(config-if)<span class="selector-id">#ip</span> helper-<span class="selector-tag">address</span> 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span> #接口下开启（推荐）</span><br><span class="line">S2(config)<span class="selector-id">#ip</span> helper-<span class="selector-tag">address</span> 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span> #全局下开启</span><br></pre></td></tr></table></figure><h3 id="配置win-xp主机地址自动获取"><a href="#配置win-xp主机地址自动获取" class="headerlink" title="配置win-xp主机地址自动获取"></a>配置win-xp主机地址自动获取</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117203711.png"></p><h3 id="使用wireshark抓取获取免费ARP包"><a href="#使用wireshark抓取获取免费ARP包" class="headerlink" title="使用wireshark抓取获取免费ARP包"></a>使用wireshark抓取获取免费ARP包</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117203736.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117203740.png"></p><blockquote><ol><li>当主机win-xp通过收到DHCP回复的ACK，还不会立即拥有地址，而是等DHCP服务通过发送免费ARP广播给其他主机，确定这个IP是否在其他主机上使用，如果没有人回复免费ARP，则win-xp主机才能拥有这个地址。免费ARP不会连续发送，而是发送一个之后，没有人回复才会继续发送免费ARP，默认请求发送完4个免费ARP报文则说明这个ip地址是有效的。</li><li>当DHCP发送免费ARP时，如果有人立刻回复了免费ARP报文，则判断这个IP地址是冲突的，如下图显示</li></ol></blockquote><h3 id="win-xp和主机（路由器）冲突现象"><a href="#win-xp和主机（路由器）冲突现象" class="headerlink" title="win-xp和主机（路由器）冲突现象"></a>win-xp和主机（路由器）冲突现象</h3><p><strong>查看主机获取了什么ip地址</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117203813.png"></p><p><strong>win-xp获取了192.168.1.4，我们在路由器上也配置192.168.1.4的地址，然后查看现象</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">R1(config-if)<span class="selector-id">#ip</span> add 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.4</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br></pre></td></tr></table></figure><p><strong>win-xp显示ip地址冲突</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117203844.png"></p><blockquote><p><strong>当路由器配置完地址之后，立即回复ARP响应，说明ARP地址已经冲突</strong></p></blockquote><p><strong>wireshark抓取的免费ARP</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117203909.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117203914.png"></p><h3 id="免费ARP问题"><a href="#免费ARP问题" class="headerlink" title="免费ARP问题"></a>免费ARP问题</h3><blockquote><p>问题1：如何判断一个ARP报文是一个免费ARP报文？<br>问题2：免费ARP如何判断冲突？<br>问题3：免费ARP如何判断不冲突？<br>问题4：为什么要广播回复免费ARP报文？</p><p>答1：查看ARP报文中的目的ip地址和源IP地址相同时，则为免费ARP报文<br>答2：当发送完免费ARP报文后收到免费ARP报文，则判断IP地址冲突，无效<br>答3：默认情况下发送4个免费ARP报文，发送完之后伟收到ARP报文，则ip地址生效<br>答4：为了刷新网络中其他主机的ARP缓存表，使其回复到正确的IP地址与MAC地址映射关系</p></blockquote><h2 id="ARP欺骗"><a href="#ARP欺骗" class="headerlink" title="ARP欺骗"></a>ARP欺骗</h2><h3 id="什么是ARP欺骗"><a href="#什么是ARP欺骗" class="headerlink" title="什么是ARP欺骗"></a>什么是ARP欺骗</h3><p>每台主机上都有一个ARP缓存表，缓存表中记录了局域网主机IP地址与MAC地址的对应关系，而局域网数据传输依靠的是MAC地址。但是并不是想象中的那么安全，在ARP缓存表机制存在一个缺陷，当请求主机win-xp收到linux-kail的ARP应答包后，就直接把这个返回包中的IP地址与MAC地址的对应关系保存到ARP缓存表中，如果原有相同IP对应关系，原有的则会被替换。</p><h2 id="实验-单向ARP欺骗"><a href="#实验-单向ARP欺骗" class="headerlink" title="实验(单向ARP欺骗)"></a>实验(单向ARP欺骗)</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117204029.png"></p><p><strong>windows-xp配置IP</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117204050.png"></p><p><strong>Centos6配置IP</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117204103.png"></p><p><strong>kail配置IP</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117204114.png"><strong>kail使用arpspoof进行攻击命令</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root<span class="keyword">@kali</span>:~# arpspoof -i eth0 -t <span class="number">10.0</span>.<span class="number">0.10</span> <span class="number">10.0</span>.<span class="number">0.2</span> </span><br><span class="line">//欺骗windows-xp主机说自己是网关，要求把数据发送给kail，然后从eth转发出去</span><br></pre></td></tr></table></figure><p><strong>kail打开多一个窗口，使用tcpdump抓取windows-xp发送过来的流量</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root<span class="keyword">@kali</span>:~# tcpdump tcp src port <span class="number">80</span> <span class="keyword">or</span> src <span class="number">10.0</span>.<span class="number">0.10</span> -i eth0 -n</span><br><span class="line">//抓取tcp协议，源端口为<span class="number">80</span>，源地址<span class="number">10.0</span>.<span class="number">0.10</span>，-i指定要侦听的网卡接口，-n不进行DNS解析</span><br><span class="line">//清楚centos的arp缓存arp -d host(主机)</span><br></pre></td></tr></table></figure><p><strong>windows-xp的http请求</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117204215.png"></p><p><strong>kail抓取的流量显示</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117204240.png"></p><h2 id="实验4（通过EVE-NG搭建）"><a href="#实验4（通过EVE-NG搭建）" class="headerlink" title="实验4（通过EVE-NG搭建）"></a>实验4（通过EVE-NG搭建）</h2><p><strong>如图</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117204325.png"></p><p><strong>Linux以及kail创建IP地址的命令</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">第一种方法:</span><br><span class="line">添加命令：ip addr add <span class="number">172.16</span>.<span class="number">1</span>.x/<span class="number">24</span> dev eth0</span><br><span class="line">删除命令：ip addr add <span class="number">172.16</span>.<span class="number">1</span>.x/<span class="number">24</span> dev eth0</span><br><span class="line"></span><br><span class="line">第二种方法:</span><br><span class="line">添加命令：ifconfig eth0 <span class="number">172.16</span>.<span class="number">1</span>.x/<span class="number">24</span></span><br><span class="line">删除命令：ifconfig eth0 del <span class="number">172.16</span>.<span class="number">1.1</span> netmask <span class="number">255.255</span>.<span class="number">255.0</span></span><br></pre></td></tr></table></figure><p><strong>Linux以及kail添加路由的命令</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">第一种方法:</span><br><span class="line">添加路由：ip route add <span class="number">172.16</span>.<span class="number">1.1</span>/<span class="number">24</span> via <span class="number">172.16</span>.<span class="number">1.254</span> dev eth0</span><br><span class="line">删除路由：ip route del <span class="number">172.16</span>.<span class="number">1.1</span>/<span class="number">24</span> via <span class="number">172.16</span>.<span class="number">1.254</span> dev eth0</span><br><span class="line"></span><br><span class="line">第二种方法：</span><br><span class="line">添加路由：ip add -net <span class="number">172.16</span>.<span class="number">1.1</span>/<span class="number">24</span> gw <span class="number">172.16</span>.<span class="number">1.254</span></span><br><span class="line">删除路由：ip del -net <span class="number">172.16</span>.<span class="number">1.1</span>/<span class="number">24</span> gw <span class="number">172.16</span>.<span class="number">1.254</span></span><br></pre></td></tr></table></figure><p><strong>Linux-kail抓取的伪造包</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117204356.png"></p>]]></content>
      
      
      <categories>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ARP协议与原理</title>
      <link href="2021/01/17/ARP%E5%8D%8F%E8%AE%AE%E4%B8%8E%E5%8E%9F%E7%90%86/"/>
      <url>2021/01/17/ARP%E5%8D%8F%E8%AE%AE%E4%B8%8E%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="ARP协议与原理"><a href="#ARP协议与原理" class="headerlink" title="ARP协议与原理"></a>ARP协议与原理</h1><h2 id="ARP概述"><a href="#ARP概述" class="headerlink" title="ARP概述"></a>ARP概述</h2><blockquote><ol><li>ARP是”Address Resolution Protocol”的缩写，译为”地址解析协议”，它是根据IP地址获取物理（MAC）地址的一个TCP/IP协议.</li><li>由于IP地址和MAC地址定位方式不同，ARP协议成为数据传输的必备协议，主机发送信息前，需要通过ARP协议获取目标IP地址对应的MAC地址，从而现实报文的正常封装与转发.</li></ol></blockquote><h2 id="为什么需要ARP协议"><a href="#为什么需要ARP协议" class="headerlink" title="为什么需要ARP协议"></a>为什么需要ARP协议</h2><blockquote><p>当一台网络设备要与另外一台网络通信时，必须要知道对方的IP地址。但是，仅有IP地址是不够的，因为IP数据报文必须封装成帧才能通过数据链路层进行发送，而数据帧必须要包含目的MAC地址，因此发送端还必须获取到目的MAC地址。每一个网络设备在数据封装前都需要获取下一跳的MAC地址。IP地址由网络层来提供，MAC地址数据链路层提供，通过ARP协议来获取目标设备的MAC地址，将IP地址与MAC地址进行映射，从而实现数据的可达性</p></blockquote><h2 id="ARP工作机制"><a href="#ARP工作机制" class="headerlink" title="ARP工作机制"></a>ARP工作机制</h2><p><strong>ARP工作流程分为两个阶段，一个是ARP请求过程，另一个是ARP响应过程，如图：</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117202737.png"></p><blockquote><ol><li>初始情况下，没有ARP缓存，当VPC1去pingVPC2是会广播发送一个ARP请求报文，ARP请求报文包含了VPC1的IP地址和MAC地址，目标IP地址和目标MAC地址，其中MAC地址为FF:FF:FF:FF:FF:FF</li><li>VPC2会响应这个请求，并回复给VPC1，其目的IP地址和目的MAC地址为VPC1，源地址和源MAC地址是自己</li><li>VPC1收到回复报文，会将VPC2的MAC地址缓存在自己ARP缓存表中。（默认是动态缓存，会老化）</li></ol></blockquote><p><strong>wireshark抓取的请求报文</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117201908.png"></p><p><strong>wireshark抓取的响应报文</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117201913.png"></p><h2 id="ARP协议报文格式"><a href="#ARP协议报文格式" class="headerlink" title="ARP协议报文格式"></a>ARP协议报文格式</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117201926.png"></p><blockquote><ul><li>硬件类型字段：指明了发送方想知道的硬件接口类型，以太网的值为1；</li><li>协议类型字段：指明了发送方提供的高层协议类型，IP为0800（16进制）；</li><li>硬件地址长度和协议长度：指明了硬件地址和高层协议地址的长度，这样ARP报文就可以在任意硬件和任# # 意协议的网络中使用；</li><li>操作字段：用来表示这个报文的类型，ARP请求为1，ARP响应为2，RARP请求为3，RARP响应为4；</li><li>发送方的硬件地址（0-2字节）：源主机硬件地址的前3个字节；</li><li>发送方的硬件地址（3-5字节）：源主机硬件地址的后3个字节；</li><li>发送方IP（0-1字节）：源主机硬件地址的前2个字节；</li><li>发送方IP（2-3字节）：源主机硬件地址的后2个字节；</li><li>目的硬件地址（0-1字节）：目的主机硬件地址的前2个字节；</li><li>目的硬件地址（2-5字节）：目的主机硬件地址的后4个字节；</li><li>目的IP（0-3字节）：目的主机的IP地址。</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ICMP——ping工具</title>
      <link href="2021/01/17/ICMP%E2%80%94%E2%80%94ping%E5%B7%A5%E5%85%B7/"/>
      <url>2021/01/17/ICMP%E2%80%94%E2%80%94ping%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="ICMP——ping工具"><a href="#ICMP——ping工具" class="headerlink" title="ICMP——ping工具"></a>ICMP——ping工具</h1><h2 id="tcping工具"><a href="#tcping工具" class="headerlink" title="tcping工具"></a>tcping工具</h2><p><strong>轻便型端口连通性检测软件，方便操作与记录</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117201419.png"></p><blockquote><p><strong>使用方法，将tcping.exe文件放入到C:\Windows\System32\目录下</strong></p></blockquote><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p><strong>1. tcping 10.0.0.20 3389 #ping 3306端口</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117201456.png"></p><p><strong>2. tcping -d 10.0.0.20 3389 #ping3306端口并追加时间</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117201506.png"></p><p><strong>3. tcping –tee C:\ping.txt -d -t 10.0.0.20 3389 #ping3306端口并保存记录</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117201521.png"></p><h2 id="PinginfoView工具"><a href="#PinginfoView工具" class="headerlink" title="PinginfoView工具"></a>PinginfoView工具</h2><blockquote><p><strong>批量ping包神器，显示直观，结果保存方便</strong></p></blockquote><p><strong>打开页面，添加ip地址</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117201551.png"></p><p><strong>点击确定开始ping</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117201559.png"></p><p><strong>可以右键生成HTML的报告</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117201606.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117201611.png"></p>]]></content>
      
      
      <categories>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ICMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ICMP——tracert与traceroute</title>
      <link href="2021/01/17/ICMP%E2%80%94%E2%80%94tracert%E4%B8%8Etraceroute/"/>
      <url>2021/01/17/ICMP%E2%80%94%E2%80%94tracert%E4%B8%8Etraceroute/</url>
      
        <content type="html"><![CDATA[<h1 id="ICMP——tracert与traceroute"><a href="#ICMP——tracert与traceroute" class="headerlink" title="ICMP——tracert与traceroute"></a>ICMP——tracert与traceroute</h1><h2 id="Tracert-Traceroute介绍"><a href="#Tracert-Traceroute介绍" class="headerlink" title="Tracert/Traceroute介绍"></a>Tracert/Traceroute介绍</h2><blockquote><ol><li>Tracert与Traceroute（跟踪路由）是路由跟踪使用程序，用来确定IP数据包访问目标所经过的路径.</li><li>也是一种常用的网络故障诊断工具.</li></ol></blockquote><h2 id="tracert包回应判断故障点"><a href="#tracert包回应判断故障点" class="headerlink" title="tracert包回应判断故障点"></a>tracert包回应判断故障点</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117193739.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117193745.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117193758.png"></p><h2 id="Tracert-Traceroute区别"><a href="#Tracert-Traceroute区别" class="headerlink" title="Tracert/Traceroute区别"></a>Tracert/Traceroute区别</h2><h3 id="traceroute是基于UDP协议"><a href="#traceroute是基于UDP协议" class="headerlink" title="traceroute是基于UDP协议"></a>traceroute是基于UDP协议</h3><blockquote><p>traceroute是向目的地址的某个端口（大于30000）发送UDP数据报文，典型的源有Linux服务器，macOS，网络设备等</p></blockquote><h4 id="traceroute通讯过程"><a href="#traceroute通讯过程" class="headerlink" title="traceroute通讯过程"></a>traceroute通讯过程</h4><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117193847.png"></p><h4 id="tracerout请求报文"><a href="#tracerout请求报文" class="headerlink" title="tracerout请求报文"></a>tracerout请求报文</h4><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117193900.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117193907.png"></p><h4 id="traceroute响应报文报文"><a href="#traceroute响应报文报文" class="headerlink" title="traceroute响应报文报文"></a>traceroute响应报文报文</h4><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117193926.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117193931.png"></p><h4 id="traceroute抓取的报文"><a href="#traceroute抓取的报文" class="headerlink" title="traceroute抓取的报文"></a>traceroute抓取的报文</h4><p><strong>每个请求包会发送三次，回也是三次，所以请求和响应一共有24个包</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117194017.png"></p><h3 id="Tracert是基于ICMP协议"><a href="#Tracert是基于ICMP协议" class="headerlink" title="Tracert是基于ICMP协议"></a>Tracert是基于ICMP协议</h3><blockquote><p>tracert向目的地址发送ICMP请求回显数据包，典型的代表是Windows设备</p></blockquote><h4 id="tracert通讯过程"><a href="#tracert通讯过程" class="headerlink" title="tracert通讯过程"></a>tracert通讯过程</h4><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117194138.png"></p><h4 id="tracert请求报文"><a href="#tracert请求报文" class="headerlink" title="tracert请求报文"></a>tracert请求报文</h4><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117194152.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117194200.png"></p><h4 id="tracert响应报文"><a href="#tracert响应报文" class="headerlink" title="tracert响应报文"></a>tracert响应报文</h4><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117194214.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117194220.png"></p><h4 id="tracert抓取的报文"><a href="#tracert抓取的报文" class="headerlink" title="tracert抓取的报文"></a>tracert抓取的报文</h4><p><strong>每个请求包会发送三次，回也是三次，所以请求和响应一共有24个包</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117194244.png"></p><h2 id="traceroute实验"><a href="#traceroute实验" class="headerlink" title="traceroute实验"></a>traceroute实验</h2><blockquote><ol><li>配置静态路由，使全网互通</li><li>地址按路由器的序号规划</li></ol></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117201038.png"></p><p><strong>1. 中间路由器没有去往目标路由</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除R4去往目标R1的静态路由</span></span><br><span class="line">no ip route 172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.0</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span> 34<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.3</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>显示的结果：中途路径终端并提示！H! H! H!</strong></p></blockquote><p><strong>2. 中间路由器没有返回源的路由</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">删除R4往返R6的静态路由</span><br><span class="line">no ip route 56<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.0</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span> 45<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.5</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>显示的结果：中途路径全部超时</strong></p></blockquote><p><strong>3. 中间路由器过滤所有收到的ICMP ttl-exceeded报文</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">access-list 100 deny icmp any any ttl-exceeded</span><br><span class="line">access-list 100 permit ip any any</span><br><span class="line">!</span><br><span class="line">interface  e0/0  //注意调用的接口（e0/1是没有效果的，因为是UDP报文）</span><br><span class="line"> ip access-group 100 in</span><br></pre></td></tr></table></figure><blockquote><p><strong>显示结果：中途路径全部超时，知道最后一跳恢复</strong></p></blockquote><p><strong>4. 中途路由器过滤指定的地址ICMP ttl-exceeded报文</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">access-list 100 deny icmp 34<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.0</span> 0<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.255</span> any ttl-exceeded</span><br><span class="line">access-list 100 permit ip any any</span><br><span class="line">!</span><br><span class="line">interface  e0/0  #注意调用的接口（e0/1是没有效果的，因为是UDP报文）</span><br><span class="line"> ip access-group 100 in</span><br><span class="line"><span class="comment">//也可以使用精确控制</span></span><br><span class="line">access-list 100 deny icmp 34<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.3</span> 0<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.255</span> any ttl-exceeded</span><br></pre></td></tr></table></figure><blockquote><p><strong>显示结果：中途指定的路径超时，其余正常</strong></p></blockquote><p><strong>5. 中间路由器过滤ICMP port-unreachable报文</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">access-list 100 deny icmp any any port-unreachable</span><br><span class="line">access-list 100 permit ip any any</span><br><span class="line">!</span><br><span class="line">interface  e0/0  #注意调用的接口</span><br><span class="line"> ip access-group 100 in</span><br></pre></td></tr></table></figure><blockquote><p><strong>显示结果：倒数第二跳开始后面所有路经超时</strong></p></blockquote><p><strong>6. 中间路由器过滤所有的ICMP报文</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">access-list 100 deny icmp any any</span><br><span class="line">access-list 100 permit ip any any</span><br><span class="line">!</span><br><span class="line">interface  e0/0  #注意调用的接口</span><br><span class="line"> ip access-group 100 in</span><br></pre></td></tr></table></figure><blockquote><p><strong>从调用ACL路由器开始，所有路径超时，同时也无法ping通目标以及沿途任何设备</strong></p></blockquote><p><strong>7. 中间路由器过滤本网段的ICMP报文</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">access-list 100 deny icmp host 34<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.3</span> any</span><br><span class="line">access-list 100 permit ip any any</span><br><span class="line">!</span><br><span class="line">interface  e0/0  #注意调用的接口</span><br><span class="line"> ip access-group 100 in</span><br></pre></td></tr></table></figure><blockquote><p><strong>中间一跳超时，同时不能ping通这一跳</strong></p></blockquote><p><strong>8. 中间路由器过滤UDP端口33434-33464端口的报文</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">access-list 100 deny   udp any any range 33434 33464</span><br><span class="line">access-list 100 permit ip any any</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/1</span><br><span class="line"> ip access-group 100 in #注意接口是e0/1，因为是过滤UDP端口</span><br></pre></td></tr></table></figure><blockquote><p><strong>显示结果：中途路径终端提示! A! A! A</strong></p></blockquote><h2 id="tracert实验"><a href="#tracert实验" class="headerlink" title="tracert实验"></a>tracert实验</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117201052.png"></p><blockquote><ol><li>配置静态路由，使全网互通</li><li>地址按路由器的序号规划</li><li>win-xp使用桥接连接</li></ol></blockquote><p><strong>1. 中间路由器没有去往目标路由</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">删除去往目标R6的路由</span><br><span class="line">no ip route 56<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.0</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span> 34<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.4</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>显示结果：中间的路径显示目标不可达</strong></p></blockquote><p><strong>2. 中间路由器没有往返源的路由</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">删除往返win-xp的路由</span><br><span class="line">no ip route 172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.0</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span> 23<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.2</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>显示结果：中间的路径至最后都是显示超时</strong></p></blockquote><p><strong>3. 中间路由器过滤所有收到的ICMP ttl-exceeded报文</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">access-list 100 deny icmp any any ttl-exceeded</span><br><span class="line">access-list 100 permit ip any any</span><br><span class="line">!</span><br><span class="line">interface  e0/1  #注意调用的接口</span><br><span class="line"> ip access-group 100 in</span><br></pre></td></tr></table></figure><blockquote><p><strong>显示结果：中间的路径全部超时，直到最后一跳恢复</strong></p></blockquote><p><strong>4. 中间路由器过滤所有收到ICMP报文</strong></p><blockquote><p><strong>显示的结果和traceroute是一样的，中间的路径全部超时，而且ping不通目标</strong></p></blockquote><h2 id="超时分析"><a href="#超时分析" class="headerlink" title="超时分析"></a>超时分析</h2><blockquote><ol><li>当我们使用tracert命令追踪一个目标时，到中途请求超时，然后恢复，又超时，这种一般是过滤了ICMMP ttl-exceeded报文或者是过滤ICMP包指定的网段.</li><li>当我们使用tracert命令追踪一个目标时，到中途请求超时，直到30跳都没有追踪到，这种一般是过滤了any any的ICMP报文</li></ol></blockquote><h2 id="MPLS-隐藏traceroute路径"><a href="#MPLS-隐藏traceroute路径" class="headerlink" title="MPLS 隐藏traceroute路径"></a>MPLS 隐藏traceroute路径</h2><p>略……………………………………</p>]]></content>
      
      
      <categories>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ICMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EVE-NG镜像转换</title>
      <link href="2021/01/17/EVE-NG%E9%95%9C%E5%83%8F%E8%BD%AC%E6%8D%A2/"/>
      <url>2021/01/17/EVE-NG%E9%95%9C%E5%83%8F%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="EVE-NG镜像转换"><a href="#EVE-NG镜像转换" class="headerlink" title="EVE-NG镜像转换"></a>EVE-NG镜像转换</h1><h2 id="Linux-iso转换为QEMU-qcow2格式"><a href="#Linux-iso转换为QEMU-qcow2格式" class="headerlink" title="Linux.iso转换为QEMU.qcow2格式"></a>Linux.iso转换为QEMU.qcow2格式</h2><h3 id="第一种方式"><a href="#第一种方式" class="headerlink" title="第一种方式"></a>第一种方式</h3><p><strong>第一个步骤：上传ISO文件到qemu目录</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//进入目录</span></span><br><span class="line">  /opt/unetlab/addons/qemu</span><br><span class="line"><span class="comment">//新建目录</span></span><br><span class="line">  mkdir linux-Centos7  <span class="selector-id">#--</span>&gt;注意前面linux-是固定的，后面的Centos7可以随意写</span><br><span class="line"><span class="comment">//上传CentOS-7-x86_64-DVD-1708.iso镜像至新创建的linux-Centos7目录，并改名为cdrom.iso</span></span><br><span class="line">  上传使用winscp <span class="selector-id">#--</span>&gt;这里忽略</span><br><span class="line"><span class="comment">//查看镜像是否上传</span></span><br><span class="line">  ls CentOS-7-x86_64-DVD-1708<span class="selector-class">.iso</span></span><br><span class="line"><span class="comment">//修改名称</span></span><br><span class="line">  cp CentOS-7-x86_64-DVD-1708<span class="selector-class">.iso</span> cdrom<span class="selector-class">.iso</span></span><br></pre></td></tr></table></figure><p><strong>第二个步骤：新建hda.qcow2虚拟磁盘</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在linux-Centos7目录下创建一块虚拟磁盘，名称为hda.qcow2，大小为40G（根据实际情况判定，不一定要40G）</span></span><br><span class="line">/opt/qemu/bin/qemu-img create -f qcow2 hda.qcow2 40G</span><br></pre></td></tr></table></figure><p><strong>第三个步骤：安装Centos7.0操作系统</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117190826.png"></p><blockquote><ol><li>下面的操作需要自行去完成，这里只写入了步骤<ul><li>在LAB中新增加linux节点</li><li>开机运行，并根据系统安装提示安装操作系统</li><li>安装完成后，系统提示重启之前，停止运行服务器，删掉安装镜像cdrom.iso，因为如果该文件还存在，系统开机后又会自动进行安装界面<br>rm cdrom.iso #–&gt;在linux-Centos目录下删除</li><li>）重新开启linux节点，并在根目录写入一个文件，以做标识 #–&gt;这步可以忽略</li></ul></li></ol></blockquote><p><strong>第四个步骤：压缩并移动had.qcow2镜像</strong></p><blockquote><p>点击自己创建的LAB找到UUID编号</p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117190953.png"></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在/opt/unetlab/temp/0找到上面对应的UUID编号，进入1目录（1目录就是在LAB标签中创建的第一台linux服务，ID值为1），然后找到hda.qcow2文件</span></span><br><span class="line">  路径：/opt/unetlab/tmp/0/97c93af0-853e-46e5-8bca-60c47f47bd5d/1</span><br><span class="line"><span class="comment">//查看文件是否存在</span></span><br><span class="line">  ls hda<span class="selector-class">.qcow2</span></span><br><span class="line"><span class="comment">//重建hda.qcow2镜像文件并移动到qemu的linux-Centos7目录中</span></span><br><span class="line">  /opt/qemu/bin/qemu-img convert -c –p -O qcow2 hda.qcow2 /opt/unetlab/addons/qemu/linux-Centos7/hda.qcow2 #--&gt;这是一整条命令</span><br><span class="line"><span class="comment">//压缩had.qcow2文件（优化）</span></span><br><span class="line">  路径：/opt/unetlab/addons/qemu/linux-Centos7</span><br><span class="line">  压缩：virt-sparsify --compress hda<span class="selector-class">.qcow2</span> linux<span class="selector-class">.qcow2</span> <span class="selector-id">#--</span>&gt;先随便起一个名字</span><br><span class="line">  移动：mv linux<span class="selector-class">.qcow2</span> had<span class="selector-class">.qcow2</span> <span class="selector-id">#--</span>&gt;在修改名称回来</span><br></pre></td></tr></table></figure><p><strong>第五个步骤：新增一台Linux服务器，并查看优化结果：</strong></p><p>略………………………..</p><h2 id="第二种方式（推荐）"><a href="#第二种方式（推荐）" class="headerlink" title="第二种方式（推荐）"></a>第二种方式（推荐）</h2><h3 id="将VMware中运行的虚拟机转移到EVE中运行"><a href="#将VMware中运行的虚拟机转移到EVE中运行" class="headerlink" title="将VMware中运行的虚拟机转移到EVE中运行"></a>将VMware中运行的虚拟机转移到EVE中运行</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117191038.png"></p><p><strong>第一个步骤：创建一个linux-vmdk目录并在window找到安装虚拟机目录下的.vmdk文件上传至创建的目录中</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建目录并上传文件</span></span><br><span class="line">  路径：/opt/unetlab/addons/qemu</span><br><span class="line">  创建：mkdir linux-vmdk</span><br><span class="line">  上传：使用winscp工具 <span class="selector-id">#--</span>&gt;这里忽略</span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117191055.png"></p><blockquote><p><strong><code>注意一点：这台虚拟机使用的磁盘存储是在单个文件上，而不是多个文件上，如果是多个文件上，需要使用工具合成一个。</code></strong></p></blockquote><p><strong>第二个步骤：将.vmdk的文件转换为qcow2文件</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">转换：/opt/qemu/bin/qemu-img convert -f vmdk -O qcow2 CentOS1106.vmdk hda.qcow2</span><br></pre></td></tr></table></figure><p><strong>第三个步骤：压缩并移动hda.qcow2</strong></p><blockquote><ol><li>压缩had.qcow2文件（优化）<ul><li>路径：/opt/unetlab/addons/qemu/linux-vmdk</li><li>压缩：virt-sparsify –compress hda.qcow2 linux.qcow2 #–&gt;先随便起一个名字</li><li> 移动：mv linux.qcow2 had.qcow2 #–&gt;在修改名称回来</li></ul></li></ol></blockquote><p><strong>第四个步骤：查看优化结果</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117191502.png"></p><p><strong>第五个步骤：新建节点，开机测试</strong></p><blockquote><p>使用第二方法好处是，不需要重新安装系统</p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117191601.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117191532.png"></p><h2 id="其他类型文件转换为qcow2格式"><a href="#其他类型文件转换为qcow2格式" class="headerlink" title="其他类型文件转换为qcow2格式"></a>其他类型文件转换为qcow2格式</h2><h3 id="img类型文件转换为qcow2"><a href="#img类型文件转换为qcow2" class="headerlink" title="img类型文件转换为qcow2"></a>img类型文件转换为qcow2</h3><blockquote><p>//注意：img使用的raw参数转换<br>/opt/qemu/bin/qemu-img convert -f  raw -O qcow2 win2003.img hda.qcow2</p></blockquote><h3 id="ova类型文件转换为qcow2"><a href="#ova类型文件转换为qcow2" class="headerlink" title="ova类型文件转换为qcow2"></a>ova类型文件转换为qcow2</h3><blockquote><p>使用WinRAR等解压工具打开ova文件，最后会看到.vmdk文件，将vmdk文件转换为qcow2格式文件. 参考第二种方式</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EVE-NG </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EVE-NG配置固定ip地址</title>
      <link href="2021/01/17/EVE-NG%E9%85%8D%E7%BD%AE%E5%9B%BA%E5%AE%9Aip%E5%9C%B0%E5%9D%80/"/>
      <url>2021/01/17/EVE-NG%E9%85%8D%E7%BD%AE%E5%9B%BA%E5%AE%9Aip%E5%9C%B0%E5%9D%80/</url>
      
        <content type="html"><![CDATA[<h1 id="EVH-NG配置固定IP地址"><a href="#EVH-NG配置固定IP地址" class="headerlink" title="EVH-NG配置固定IP地址"></a>EVH-NG配置固定IP地址</h1><h2 id="编辑配置文件-etc-network-interfaces"><a href="#编辑配置文件-etc-network-interfaces" class="headerlink" title="编辑配置文件/etc/network/interfaces"></a>编辑配置文件/etc/network/interfaces</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">root<span class="keyword">@eve-ng</span>:~# vi /etc/network/interfaces</span><br><span class="line">#修改以下内容</span><br><span class="line"></span><br><span class="line"># The primary network interface</span><br><span class="line">iface eth0 inet manual</span><br><span class="line">auto pnet0</span><br><span class="line">iface pnet0 inet static</span><br><span class="line">    bridge_ports eth0</span><br><span class="line">    bridge_stp off</span><br><span class="line">    address <span class="number">10.0</span>.<span class="number">0.200</span></span><br><span class="line">    netmask <span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">    gateway <span class="number">10.0</span>.<span class="number">0.2</span></span><br><span class="line">    dns-nameserver <span class="number">223.5</span>.<span class="number">5.5</span></span><br><span class="line">#注意自己VMware使用模式，配置正确的网关</span><br></pre></td></tr></table></figure><h2 id="重启网卡生效"><a href="#重启网卡生效" class="headerlink" title="重启网卡生效"></a>重启网卡生效</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/networking restart</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EVE-NG </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ICMP——Ping</title>
      <link href="2021/01/17/ICMP%E2%80%94%E2%80%94Ping/"/>
      <url>2021/01/17/ICMP%E2%80%94%E2%80%94Ping/</url>
      
        <content type="html"><![CDATA[<h1 id="ICMP之——ping"><a href="#ICMP之——ping" class="headerlink" title="ICMP之——ping"></a>ICMP之——ping</h1><h2 id="ping命令"><a href="#ping命令" class="headerlink" title="ping命令"></a>ping命令</h2><p><strong>用法：ping 地址或域名</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117184802.png"></p><h2 id="ping命令的功能"><a href="#ping命令的功能" class="headerlink" title="ping命令的功能"></a>ping命令的功能</h2><blockquote><ol><li>能验证网络是否连通</li><li>会统计响应时间和TTL（ip包中的Time To Live，生成生存周期）</li></ol></blockquote><h2 id="如何验证？"><a href="#如何验证？" class="headerlink" title="如何验证？"></a>如何验证？</h2><blockquote><ol><li>ping命令会先发送一个ICMP Echo Request请求报文给对端</li><li>对端接收到之后，回送一个ICMP Echo Reply响应报文</li><li>如果没有返回，可能会显示超时或目标不可达.</li></ol></blockquote><h2 id="使用wireshark抓取的ICMP报文，如下图"><a href="#使用wireshark抓取的ICMP报文，如下图" class="headerlink" title="使用wireshark抓取的ICMP报文，如下图"></a>使用wireshark抓取的ICMP报文，如下图</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117185416.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117185428.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117185436.png"></p><h2 id="ping包回应判断故障点"><a href="#ping包回应判断故障点" class="headerlink" title="ping包回应判断故障点"></a>ping包回应判断故障点</h2><h3 id="传输失败-常见故障"><a href="#传输失败-常见故障" class="headerlink" title="传输失败. 常见故障"></a>传输失败. 常见故障</h3><p><strong>物理故障居多，如无本地连接，也可能是未获取ip，没有网关等问题</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117185515.png"></p><h3 id="目标不可达"><a href="#目标不可达" class="headerlink" title="目标不可达"></a>目标不可达</h3><p><strong>数据包没有发往到目的地，如中间设备没有去往的路由，或者在去往的过程被过滤掉等</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117185542.png"></p><h3 id="请求超时"><a href="#请求超时" class="headerlink" title="请求超时"></a>请求超时</h3><p><strong>数据包有发往的目的地，但是返回的途中出现问题，如主机关机，没有返回路由，数据包被过滤掉等</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117185602.png"></p><h2 id="搭建实验演示故障点"><a href="#搭建实验演示故障点" class="headerlink" title="搭建实验演示故障点"></a>搭建实验演示故障点</h2><blockquote><p>地址按路由器的序号规划<br>部署静态路由，实现两边互通<br>win网关：172.16.1.254<br>Linux网关：100.100.100.254</p><p><strong><code>地址：需要自行配置</code></strong></p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117185629.png"></p><h3 id="测试是否连通"><a href="#测试是否连通" class="headerlink" title="测试是否连通"></a>测试是否连通</h3><p><strong>Linux主机ping</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117185656.png"></p><p><strong>win-xp主机ping</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117185707.png"></p><h3 id="故障点ping服务器目标不可达"><a href="#故障点ping服务器目标不可达" class="headerlink" title="故障点ping服务器目标不可达"></a>故障点ping服务器目标不可达</h3><p><strong>方法一：配置ACL策略</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//配置ACL策略</span></span><br><span class="line">access-list 100 deny   icmp any host 100<span class="selector-class">.100</span><span class="selector-class">.100</span><span class="selector-class">.1</span></span><br><span class="line">access-list 100 permit ip any any</span><br><span class="line">！</span><br><span class="line"><span class="comment">//调用到e0/0接口，方向为in</span></span><br><span class="line">interface Ethernet0/0</span><br><span class="line"> ip <span class="selector-tag">address</span> 12<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.2</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line"> ip access-group 100 in #注意，这里是IN方向</span><br></pre></td></tr></table></figure><p><strong>方法二：删除去往服务器的路由</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">no ip route 100<span class="selector-class">.100</span><span class="selector-class">.100</span><span class="selector-class">.0</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span> 13<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.3</span></span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p><strong>ping目标不可达</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117185918.png"></p><p><strong>但是还可以访问网页，这里只是作为演示，网页配置需要搭建服务才行</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117185939.png"></p><h3 id="故障点ping服务器超时"><a href="#故障点ping服务器超时" class="headerlink" title="故障点ping服务器超时"></a>故障点ping服务器超时</h3><p><strong>方法一：配置ACL策略</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//配置ACL</span></span><br><span class="line">access-list 100 deny   icmp any any</span><br><span class="line">access-list 100 permit ip any any</span><br><span class="line">！</span><br><span class="line"><span class="comment">//调用到e0/0接口，方向为out</span></span><br><span class="line">interface Ethernet0/0</span><br><span class="line"> ip <span class="selector-tag">address</span> 12<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.2</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line"> ip access-group 100 out #注意这里out方向</span><br></pre></td></tr></table></figure><p><strong>方法二：和上述的目标可不达一样，没有往返的路由</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">no ip route 172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.0</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span> 23<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.2</span></span><br></pre></td></tr></table></figure><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><p><strong>ping服务器超时</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117190059.png"></p><h2 id="常见ping包不通的几个问题"><a href="#常见ping包不通的几个问题" class="headerlink" title="常见ping包不通的几个问题"></a>常见ping包不通的几个问题</h2><h3 id="Windows防火墙限制"><a href="#Windows防火墙限制" class="headerlink" title="Windows防火墙限制"></a>Windows防火墙限制</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117190120.png"></p><h3 id="Linux限制"><a href="#Linux限制" class="headerlink" title="Linux限制"></a>Linux限制</h3><p><strong>Linux默认是允许ping响应的，系统是否允许ping由2个因数决定的. A：内核参数 B：防火墙</strong></p><p><strong>A：内核参数设置</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//临时设置：</span></span><br><span class="line">echo 0 &gt;/proc/sys/net/ipv4/icmp_echo_ignore_all #--&gt;（0表示允许，1表示禁止）</span><br><span class="line">echo 1 &gt;/proc/sys/net/ipv4/icmp_echo_ignore_all #--&gt;（0表示允许，1表示禁止）</span><br><span class="line"><span class="comment">//永久设置：</span></span><br><span class="line">echo &quot;net.ipv4.icmp_echo_ignore_all=1&quot; &gt;&gt;/etc/sysctl.conf （0表示允许，1表示禁止）</span><br><span class="line">echo &quot;net.ipv4.icmp_echo_ignore_all=0&quot; &gt;&gt;/etc/sysctl.conf （0表示允许，1表示禁止）</span><br><span class="line"><span class="comment">//永久设置需要执行sysctl -p使配置生效</span></span><br><span class="line"><span class="selector-attr">[root@shell-2 ~]</span># sysctl -<span class="selector-tag">p</span></span><br></pre></td></tr></table></figure><p><strong>B：防火墙</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#PS1</span>：此处的方法的前提是内核配置是默认值，也就是没有禁止ping</span><br><span class="line"><span class="selector-id">#PS2</span>：linux防火墙默认是允许ping通过的，</span><br><span class="line"><span class="comment">//禁止ping设置</span></span><br><span class="line"><span class="selector-id">#--</span>&gt;Centos6版本</span><br><span class="line">iptables -<span class="selector-tag">A</span> <span class="selector-tag">INPUT</span> -<span class="selector-tag">p</span> icmp --icmp-type 8 -J DROP</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#--</span>&gt;Centos7版本</span><br><span class="line">firewall-cmd --permanent --add-rich-rule=&quot;rule protocol value=icmp drop&quot;</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h3 id="云主机限制"><a href="#云主机限制" class="headerlink" title="云主机限制"></a>云主机限制</h3><p><strong>云主机默认是禁止ping包的</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117190230.png"></p><h3 id="网络设备限制"><a href="#网络设备限制" class="headerlink" title="网络设备限制"></a>网络设备限制</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">R1(config)<span class="selector-id">#access-list</span> 100 deny icmp any host 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.10</span></span><br><span class="line">R1(config)<span class="selector-id">#access-list</span> 100 permit ip any any</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ICMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ICMP协议与原理</title>
      <link href="2021/01/17/ICMP%E5%8D%8F%E8%AE%AE%E4%B8%8E%E5%8E%9F%E7%90%86/"/>
      <url>2021/01/17/ICMP%E5%8D%8F%E8%AE%AE%E4%B8%8E%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="ICMP协议与原理"><a href="#ICMP协议与原理" class="headerlink" title="ICMP协议与原理"></a>ICMP协议与原理</h1><h2 id="ICMP协议是什么？"><a href="#ICMP协议是什么？" class="headerlink" title="ICMP协议是什么？"></a>ICMP协议是什么？</h2><blockquote><ol><li>控制报文协议（Internet Control Message Protocol，ICMP）是TCP/IP协议族的一个子协议，ICMP协议用于在IP主机和路由器之间传递控制消息，描述网络是否通畅，主机是否可达或超时，路由器是否可用等网络状态</li><li>ICMP报文是基于在IP数据包中，IP报头在ICMP报文的最前面. 一个ICMP报文包括IP报头（至少20字节），ICMP报头（至少八字节）和ICMP报文（属于ICMP报文的数据部分），当IP报头中的协议字段值为<strong>1</strong>时，就说明这个一个ICMP报文. ICMP报头如下图所示</li></ol></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117175257.png"></p><table><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>类型</td><td>占一字节，表示ICMP报文的类型，从类型值来看ICMP报文可以分为两大类. 第一类是取值为1-127的差错报文，第二类是取值128以上的信息报文</td></tr><tr><td>代码</td><td>占一字节，标识对应ICMP报文的代码. 它与类型字段一起共同标识了ICMP报文的详细类型</td></tr><tr><td>校验和</td><td>这是对包括ICMP报文数据部分在内的整个ICMP数据包的校验和. 以检验报文在传输过程中是否出现了差错</td></tr></tbody></table><h2 id="ICMP类型的代码及含义"><a href="#ICMP类型的代码及含义" class="headerlink" title="ICMP类型的代码及含义"></a>ICMP类型的代码及含义</h2><p><strong>在ICMP报文中，如果类型和代码不同，ICMP数据包报告的消息含义也会不同. 常见的类型和代码的ICMP含义如表所示</strong></p><table><thead><tr><th>类型</th><th>代码</th><th>含义</th></tr></thead><tbody><tr><td>0</td><td>0</td><td>回显应答（ping应答）</td></tr><tr><td>3</td><td>0</td><td>网络不可达</td></tr><tr><td>3</td><td>1</td><td>主机不可达</td></tr><tr><td>3</td><td>2</td><td>协议不可达</td></tr><tr><td>3</td><td>3</td><td>端口不可达</td></tr><tr><td>3</td><td>4</td><td>需要进行分片，但设置不分片位</td></tr><tr><td>3</td><td>5</td><td>源站选路失败</td></tr><tr><td>3</td><td>6</td><td>目的网络未知</td></tr><tr><td>3</td><td>7</td><td>目的主机未知</td></tr><tr><td>3</td><td>9</td><td>目的网络被强制禁止</td></tr><tr><td>3</td><td>10</td><td>目的主机被强制禁止</td></tr><tr><td>3</td><td>11</td><td>由于服务类型TOS，网络不可</td></tr><tr><td>3</td><td>12</td><td>由于服务类型TOS，主机不可达</td></tr><tr><td>3</td><td>13</td><td>由于过滤，通信被强制禁止</td></tr><tr><td>3</td><td>14</td><td>主机越权</td></tr><tr><td>3</td><td>15</td><td>优先中止失效</td></tr><tr><td>4</td><td>0</td><td>源端被关闭（基本流控制）</td></tr><tr><td>5</td><td>0</td><td>对网络重定向</td></tr><tr><td>5</td><td>1</td><td>对主机重定向</td></tr><tr><td>5</td><td>2</td><td>对服务类型和网络重定向</td></tr><tr><td>5</td><td>3</td><td>对服务类型和主机重定向</td></tr><tr><td>8</td><td>0</td><td>回显请求（ping请求）</td></tr><tr><td>9</td><td>0</td><td>路由器通告</td></tr><tr><td>10</td><td>0</td><td>路由器请求</td></tr><tr><td>11</td><td>0</td><td>在数据报组装期间生存时间为0</td></tr><tr><td>12</td><td>1</td><td>坏的IP首部</td></tr><tr><td>13</td><td>0</td><td>时间戳请求</td></tr><tr><td>14</td><td>0</td><td>时间戳应答</td></tr><tr><td>17</td><td>0</td><td>地址掩码请求</td></tr><tr><td>18</td><td>0</td><td>地址掩码应答</td></tr></tbody></table><h2 id="常见的请求与应答"><a href="#常见的请求与应答" class="headerlink" title="常见的请求与应答"></a>常见的请求与应答</h2><h3 id="ping请求"><a href="#ping请求" class="headerlink" title="ping请求"></a>ping请求</h3><blockquote><ol><li>我们在操作过程中，用的最多就是ping操作，该操作中包括了相应请求（类型字段为8）和应答（类型字段值为0）ICMP报文.</li><li>如：一台主机向一个节点发送一个类型字段为8的ICMP报文，如果途中（没有异常，路由丢弃，被过滤，目标不回应ICMP或者传输失败等等）.则目标返回类型字段为0的IMCP报文，说明这台主机存在.</li></ol></blockquote><h3 id="时间戳请求"><a href="#时间戳请求" class="headerlink" title="时间戳请求"></a>时间戳请求</h3><blockquote><ol><li>时间戳请求报文（类型值字段13）和时间戳应答报文（类型字段14）用于测试两台主机之间数据包来回一次的传输时间. 传输时，主机填充原始时间戳，接收方收到请求后填充接收时间戳后以类型值字段14的报文格式返回，发送方计算这个时间差</li></ol></blockquote><h3 id="（网络，主机，端口，协议）不可达回应"><a href="#（网络，主机，端口，协议）不可达回应" class="headerlink" title="（网络，主机，端口，协议）不可达回应"></a>（网络，主机，端口，协议）不可达回应</h3><blockquote><ol><li><p>目标不可达报文（类型字段为3）在路由器或者主机不能传递数据时使用.</p></li><li><p>如1：ping一个不存在的主机或者没有该路由，则返回类型字段3，代码字段为0的ICMP报文.</p></li><li><p>如2：连接对方一个不存在的系统端口（端口号小于1024）时，则返回类型字段值3，代码字段值为3的ICMP报文</p></li></ol></blockquote><h3 id="源抑制报文回应"><a href="#源抑制报文回应" class="headerlink" title="源抑制报文回应"></a>源抑制报文回应</h3><blockquote><ol><li>源抑制报文（类型字段值为4，代码字段值为0）则充当一个控制流量的角色，通知主机减少数据包流量. 由于TCP/IP没有回复传输的报文，所以只要停止该报文，主机就会逐渐恢复传输速率.</li></ol></blockquote><h3 id="超时报文回应"><a href="#超时报文回应" class="headerlink" title="超时报文回应"></a>超时报文回应</h3><blockquote><ol><li>长时间在网络游荡而找不到目标，或者拥塞导致主机在规定的时间内无法重组数据报文段，这时就要触发ICMP超时报文的产生. 超时报文（类型字段为11），代码域有两种取值：代码字段值为0表示传输超时，代码字段值为1表示分段重组超时</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ICMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DHCP协议与原理</title>
      <link href="2021/01/17/DHCP%E5%8D%8F%E8%AE%AE%E4%B8%8E%E5%8E%9F%E7%90%86/"/>
      <url>2021/01/17/DHCP%E5%8D%8F%E8%AE%AE%E4%B8%8E%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="DHCP协议与原理"><a href="#DHCP协议与原理" class="headerlink" title="DHCP协议与原理"></a>DHCP协议与原理</h1><h2 id="DHCP介绍"><a href="#DHCP介绍" class="headerlink" title="DHCP介绍"></a>DHCP介绍</h2><p>DHCP（Dynamic Host Configuration Protocol，动态主机配置协议），是一个工作在应用层的局域网网络协议，数据传输时使用UTP不可靠传输协议工作，通常被应用在大型的局域网络环境中，主要作用是集中的管理，分配网络资源. 使网络环境中的主机能够动态获取IP地址，Gateway地址，DNS服务器地址等信息，并能够提升地址的使用率.</p><h2 id="DHCP工作原理（租约四部曲-续租）"><a href="#DHCP工作原理（租约四部曲-续租）" class="headerlink" title="   DHCP工作原理（租约四部曲+续租）"></a>   DHCP工作原理（租约四部曲+续租）</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117174418.png"></p><h2 id="DHCP客户机进行IP请求"><a href="#DHCP客户机进行IP请求" class="headerlink" title="DHCP客户机进行IP请求"></a>DHCP客户机进行IP请求</h2><blockquote><p>当一个DHCP客户机启动时，会自动将自己的IP地址配置成0.0.0.0，由于使用0.0.0.0不能进行正常通信，所以客户机就必须通过DHCP服务器来获取一个合法的地址. 由于客户机不知道DHCP服务器的IP地址，所以使用0.0.0.0的地址作为源地址，使用255.255.255.255作为目标地址，使用UDP67端口作为目的端口来广播请求ip地址信息. 广播信息DHCP Discover中包含了DHCP客户机的MAC地址和计算机名，以便使DHCP服务能够确定是哪个客户机发送的请求</p></blockquote><h2 id="DHCP服务器响应请求"><a href="#DHCP服务器响应请求" class="headerlink" title=" DHCP服务器响应请求"></a> DHCP服务器响应请求</h2><blockquote><ol><li>当DHCP 服务器收到客户机请求ip地址的信息时，它就在自己的ip地址池中查找是否有合法的ip地址提供给客户机. 如果有，DHCP服务器就将此ip地址坐上标记，加入到DHCP Offer的报文中，然后DHCP服务器还是以广播发送DHCP Offer报文.</li><li>DHCP客户机的MAC地址；DHCP服务器提供的合法IP地址：子网掩码；默认网关；DNS地址；租约的期限；DHCP服务器的ip地址-MAC.</li><li>因为DHCP客户端还没有IP地址，所以DHCP服务器使用自己的IP地址作为源地址，使用255.255.255.255作为目标地使用UDP 68端口作为源端口来广播DHCP Offer报文</li></ol></blockquote><h2 id="DHCP客户机选择IP"><a href="#DHCP客户机选择IP" class="headerlink" title="DHCP客户机选择IP"></a>DHCP客户机选择IP</h2><blockquote><ol><li>DHCP客户机从接收到的第一个DHCP Offer报文中选择ip地址，发送ip地址的DHCP服务器将该地址保留，这样该地址就不能提供给另一个DHCP客户机. 当客户机从第一个DHCP服务器接收DHCP Offer并选择ip地址后，DHCP租约的第三过程发送. 客户机将DHCP Request报文广播到所有的DHCP服务器，表明它接受提供的内容. DHCP Request报文包括为该客户机提供ip配置的服务器的服务标志符（ip地址），DHCP服务器查看服务器标识符字段，以确定自己是否被选择为指定的客户机提供ip地址，如果哪些DHCP Offer被拒绝，则DHCP服务器会取消提供保留其ip地址以用于下一个ip租约请求.</li><li>在客户机选择ip的过程中，虽然客户机选择了ip地址，但是还没有配置ip地址，而在一个网络中可能有几个DHCP服务器，所以客户机仍然使用0.0.0.0的地址作为源地址，使用255.255.255.255.作为目标地址，使用UDP 67端口作为目的端口来广播DHCP Request报文</li></ol></blockquote><h2 id="DHCP服务器确认租约"><a href="#DHCP服务器确认租约" class="headerlink" title="DHCP服务器确认租约"></a>DHCP服务器确认租约</h2><blockquote><ol><li><p>服务器确认租约：DHCP ACK</p><ul><li>DHCP服务器接收到DHCP Request报文后，以DHCP ACK报文的形式向客户机广播成功的确认，该消息包含有ip地址的有效租约和其他可能配置的信息. 虽然服务器确认了客户机的租约请求，但是客户机还没有收到服务器的DHCP ACK报文，所以服务器仍然使用自己的ip地址作为源地址， 使用255.255.255.255作为目标地址，使用UDP 68端口作为源端口来广播DHCP ACK报文. 当客户机收到DHCP ACK消息时，它就配置了ip地址，完成了TCP/IP的初始化</li></ul></li><li><p>服务器拒绝租约：DHCP NACK（DHCP NAK）</p><ul><li>如果DHCP Request不成功，例如客户机试图租约先前的IP地址，但该ip地址不在可用，或者因为客户机移到其他子网，该ip无效时，DHCP服务器将广播否定确定报文DCHP NACK. 当客户端接收到不成功的确认时，它讲重新开始DHCP 租约过程.</li></ul></li></ol><ul><li><p>PS1：如果DHCP客户机无法找到DHCP服务器，它将从TCP/IP的B类网络169.254.0.0/16挑选一个IP地址作为自己的ip地址，继续每个5分钟尝试与DHCP服务器进行通讯，一旦与DHCP服务器通信成功，则客户机放弃自动配置的ip地址，而使用DHCP服务器分配的ip地址.</p></li><li><p>PS2：DHCP客户机收到DHCP服务器回应的ACK报文后，通过地址冲突检测（ARP）发现服务器分配的地址冲突或者由于其他原因导致不能使用，则发送DECLINE报文，通知服务器所分配至的ip地址不可用</p></li></ul></blockquote><h2 id="DHCP客户机续租"><a href="#DHCP客户机续租" class="headerlink" title="DHCP客户机续租"></a>DHCP客户机续租</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117174844.png"></p><blockquote><ol><li>DHCP客户机会在租期过去50%的时候，直接向为其提供ip地址的DHCP服务器发送DHCP Request报文，如果客户机接收到该服务器回应的DHCP ACK报文，则客户机就根据数据包中所提供的新的租期以及其他已经更新的TCP/IP参数，更新自己的配置，IP租用更新完成. 如果没有收到该服务器的回复，则客户机继续使用现有的IP地址，因为当前租期还有50%</li><li>如果在租期过去50%的时候没有更新，则DHCP客户机将在租期过去87.5%的时候再次向为其提供IP地址的DHCP服务器联系，如果还不成功，到租约的100%时候，DHCP客户机必须放弃这个IP地址，重新申请，如果此时无DHCP服务区可用，DHCP客户机使用169.254.0.0/16中随机的一个地址，并且每个5分钟再进行尝试.</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DHCP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DHCP实验</title>
      <link href="2021/01/17/DHCP%E5%AE%9E%E9%AA%8C/"/>
      <url>2021/01/17/DHCP%E5%AE%9E%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="DHCP实验"><a href="#DHCP实验" class="headerlink" title="DHCP实验"></a>DHCP实验</h1><h2 id="实验1"><a href="#实验1" class="headerlink" title="实验1"></a>实验1</h2><blockquote><p>  在核心交换机上开启DHCP Server功能并配置DHCP地址池，配置网关:192.168.1.254、DNS:8.8.8.8、租约（默认为24小时，可无需配置）</p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117173651.png"></p><h3 id="核心交换机配置"><a href="#核心交换机配置" class="headerlink" title="核心交换机配置"></a>核心交换机配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开启DHCP服务功能</span></span><br><span class="line">Switch1(config)<span class="selector-id">#service</span> dhcp</span><br><span class="line">!</span><br><span class="line"><span class="comment">//配置vlan及网关地址</span></span><br><span class="line">Switch1(config-if)<span class="selector-id">#vlan</span> 10</span><br><span class="line">!</span><br><span class="line">interface Vlan10</span><br><span class="line"> ip <span class="selector-tag">address</span> 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.254</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line">！</span><br><span class="line"><span class="comment">//配置dhcp地址池</span></span><br><span class="line">ip dhcp pool vlan10</span><br><span class="line"> network 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.0</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line"> default-router 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.254</span></span><br><span class="line"> dns-server 8<span class="selector-class">.8</span><span class="selector-class">.8</span><span class="selector-class">.8</span></span><br><span class="line">!</span><br><span class="line"><span class="comment">//配置核心层与接入层互连接口为trunk模式</span></span><br><span class="line">interface GigabitEthernet0/0</span><br><span class="line"> switchport trunk encapsulation dot1q</span><br><span class="line"> switchport mode trunk</span><br></pre></td></tr></table></figure><h3 id="接入层交换机配置"><a href="#接入层交换机配置" class="headerlink" title="接入层交换机配置"></a>接入层交换机配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//配置vlan</span></span><br><span class="line">S2(config)<span class="selector-id">#vlan</span> 10</span><br><span class="line">!</span><br><span class="line"><span class="comment">//配置接入层与核心层互连接口为trunk模式</span></span><br><span class="line">interface GigabitEthernet0/0</span><br><span class="line"> switchport trunk encapsulation dot1q</span><br><span class="line"> switchport mode trunk</span><br><span class="line">!</span><br><span class="line"><span class="comment">//划分两台终端至vlan10</span></span><br><span class="line">interface GigabitEthernet0/1</span><br><span class="line"> switchport access vlan 10</span><br><span class="line"> switchport mode access</span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet0/2</span><br><span class="line"> switchport access vlan 10</span><br><span class="line"> switchport mode access</span><br></pre></td></tr></table></figure><h3 id="配置主机地址自动获取"><a href="#配置主机地址自动获取" class="headerlink" title="配置主机地址自动获取"></a>配置主机地址自动获取</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PC3：VPCS&gt; ip dhcp</span><br><span class="line">PC4：VPCS&gt; ip dhcp</span><br></pre></td></tr></table></figure><h2 id="使用show命令查看配置"><a href="#使用show命令查看配置" class="headerlink" title="使用show命令查看配置"></a>使用show命令查看配置</h2><h3 id="核心交换机"><a href="#核心交换机" class="headerlink" title="核心交换机"></a>核心交换机</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117173804.png"></p><h3 id="PC3"><a href="#PC3" class="headerlink" title="PC3"></a>PC3</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117173825.png"></p><h2 id="实验2"><a href="#实验2" class="headerlink" title="实验2"></a>实验2</h2><blockquote><ol><li>在汇聚交换机上开启DHCP relay功能，并且设置用户网关及路由信息，配置网关:192.168.1.254、DNS:8.8.8.8、租约（默认为24小时，可无需配置）</li><li>在核心交换机上开启DHCP Server功能，并且配置DHCP地址池</li></ol></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117173901.png"></p><h3 id="什么是relay"><a href="#什么是relay" class="headerlink" title="什么是relay?"></a>什么是relay?</h3><blockquote><p> DHCP Relay（DHCPR）DHCP中继是一个小程序（代理），可以实现在不同子网和物理网段之间处理和转发dhcp信息的功能</p></blockquote><h3 id="核心层配置"><a href="#核心层配置" class="headerlink" title="核心层配置"></a>核心层配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开启DHCP服务功能</span></span><br><span class="line">Switch1(config)<span class="selector-id">#service</span> dhcp</span><br><span class="line">!</span><br><span class="line"><span class="comment">//配置dhcp地址池</span></span><br><span class="line">ip dhcp pool vlan10</span><br><span class="line"> network 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.0</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line"> default-router 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.254</span></span><br><span class="line"> dns-server 8<span class="selector-class">.8</span><span class="selector-class">.8</span><span class="selector-class">.8</span></span><br><span class="line">!</span><br><span class="line"><span class="comment">//配置核心层与汇聚层互连ip地址</span></span><br><span class="line">interface GigabitEthernet0/0</span><br><span class="line"> no switchport</span><br><span class="line"> ip <span class="selector-tag">address</span> 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line">！</span><br><span class="line"><span class="comment">//配置核心层至汇聚设备用户网段的静态路由</span></span><br><span class="line">ip route 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.0</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span> 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.2</span></span><br></pre></td></tr></table></figure><h3 id="汇聚层配置"><a href="#汇聚层配置" class="headerlink" title="汇聚层配置"></a>汇聚层配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开启汇聚交换机的DHCP服务功能</span></span><br><span class="line">S2(config)<span class="selector-id">#service</span> dhcp</span><br><span class="line">！</span><br><span class="line"><span class="comment">//配置vlan及vlan 10的ip地址（用户网关的地址）</span></span><br><span class="line">Switch1(config-if)<span class="selector-id">#vlan</span> 10</span><br><span class="line">!</span><br><span class="line">interface Vlan10</span><br><span class="line"> ip <span class="selector-tag">address</span> 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.254</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line">！</span><br><span class="line"><span class="comment">//配置汇聚层与核心层互连的ip地址</span></span><br><span class="line">interface GigabitEthernet0/0</span><br><span class="line"> no switchport</span><br><span class="line"> ip <span class="selector-tag">address</span> 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.2</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line">！</span><br><span class="line"><span class="comment">//划分两台终端至vlan10</span></span><br><span class="line">interface GigabitEthernet0/1</span><br><span class="line"> switchport access vlan 10</span><br><span class="line"> switchport mode access</span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet0/2</span><br><span class="line"> switchport access vlan 10</span><br><span class="line"> switchport mode access</span><br><span class="line">！</span><br><span class="line"><span class="comment">//配置汇聚层到外网的默认路由</span></span><br><span class="line">ip route 0<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.0</span> 0<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.0</span> 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span></span><br><span class="line">！</span><br><span class="line"><span class="comment">//开启汇聚层DHCP relay功能,该地址需要是核心交换机的IP地址，并且路由可达.</span></span><br><span class="line">S2(config)<span class="selector-id">#in</span> vlan 10</span><br><span class="line">S2(config-if)<span class="selector-id">#ip</span> helper-<span class="selector-tag">address</span> 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span> #接口下开启（推荐）</span><br><span class="line">S2(config)<span class="selector-id">#ip</span> helper-<span class="selector-tag">address</span> 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span> #全局下开启</span><br></pre></td></tr></table></figure><h3 id="配置主机地址自动获取-1"><a href="#配置主机地址自动获取-1" class="headerlink" title="配置主机地址自动获取"></a>配置主机地址自动获取</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PC3：VPCS&gt; ip dhcp</span><br><span class="line">PC4：VPCS&gt; ip dhcp</span><br></pre></td></tr></table></figure><h2 id="使用show查看配置"><a href="#使用show查看配置" class="headerlink" title="使用show查看配置"></a>使用show查看配置</h2><h3 id="核心交换机-1"><a href="#核心交换机-1" class="headerlink" title="核心交换机"></a>核心交换机</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117174020.png"></p><h3 id="win-xp"><a href="#win-xp" class="headerlink" title="win-xp"></a>win-xp</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117174033.png"></p><h2 id="实验3"><a href="#实验3" class="headerlink" title="实验3"></a>实验3</h2><p><strong>在交换机S3上配置DHCP中继，对VLAN10内的用户进行中继，使得PC1和PC2用户使用DHCP Relay方式获取IP地址。具体要求如下：</strong></p><blockquote><ol><li>DHCP服务器搭建于EG上，地址池命名为VLAN10，DHCP对外服务使用loopback 0地址</li><li>S3 配置网关:192.168.1.254、DNS:8.8.8.8、租约（默认为24小时，可无需配置）</li><li>为了防御动态环境局域网伪DHCP服务欺骗，在S1、S2交换机部署DHCP Snooping功能；</li></ol></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117174113.png"></p><h3 id="EG配置"><a href="#EG配置" class="headerlink" title="EG配置"></a>EG配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开启DHCP服务功能</span></span><br><span class="line">EG(config)<span class="selector-id">#service</span> dhcp #默认不开启，一定要开启此功能</span><br><span class="line">！</span><br><span class="line"><span class="comment">//配置lookback0地址</span></span><br><span class="line">interface Loopback0</span><br><span class="line"> ip <span class="selector-tag">address</span> 1<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.1</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.255</span></span><br><span class="line">!</span><br><span class="line"><span class="comment">//配置EG与S3互连的ip地址</span></span><br><span class="line">interface GigabitEthernet0/0</span><br><span class="line"> ip <span class="selector-tag">address</span> 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.252</span></span><br><span class="line">！</span><br><span class="line"><span class="comment">//配置DHCP地址池</span></span><br><span class="line">ip dhcp pool vlan10</span><br><span class="line"> network 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.0</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line"> default-router 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.254</span></span><br><span class="line"> dns-server 8<span class="selector-class">.8</span><span class="selector-class">.8</span><span class="selector-class">.8</span></span><br><span class="line">！</span><br><span class="line"><span class="comment">//配置静态路由指向用户网段</span></span><br><span class="line">ip route 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.0</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span> 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.2</span></span><br></pre></td></tr></table></figure><h3 id="S3配置"><a href="#S3配置" class="headerlink" title="S3配置"></a>S3配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开启DHCP服务功能</span></span><br><span class="line">EG(config)<span class="selector-id">#service</span> dhcp #默认不开启，一定要开启此功能</span><br><span class="line">！</span><br><span class="line"><span class="comment">//配置S3与EG互连的ip地址</span></span><br><span class="line">interface GigabitEthernet0/0</span><br><span class="line"> ip <span class="selector-tag">address</span> 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.2</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.252</span></span><br><span class="line">！</span><br><span class="line"><span class="comment">//配置vlan及vlan 10的ip地址</span></span><br><span class="line">S3(config)<span class="selector-id">#vlan</span> 10</span><br><span class="line">！</span><br><span class="line">interface Vlan10</span><br><span class="line"> ip <span class="selector-tag">address</span> 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.254</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line">!</span><br><span class="line"><span class="comment">//配置S3与S1互连的接口为trunk模式</span></span><br><span class="line">interface GigabitEthernet0/1</span><br><span class="line"> switchport trunk encapsulation dot1q</span><br><span class="line"> switchport mode trunk</span><br><span class="line">!</span><br><span class="line"><span class="comment">//配置静态路由指向EG网关的lookback地址</span></span><br><span class="line">ip route 1<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.1</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span> 10<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.2</span></span><br><span class="line">!</span><br><span class="line"><span class="comment">//开启汇聚层DHCP relay功能,该地址需要是核心交换机的IP地址，并且路由可达.</span></span><br><span class="line">S2(config)<span class="selector-id">#in</span> vlan 10</span><br><span class="line">S2(config-if)<span class="selector-id">#ip</span> helper-<span class="selector-tag">address</span> 1<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.1</span></span><br></pre></td></tr></table></figure><h3 id="S1配置"><a href="#S1配置" class="headerlink" title="S1配置"></a>S1配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//配置S1与S3互连的接口为trunk模式</span></span><br><span class="line">interface GigabitEthernet0/0</span><br><span class="line"> switchport trunk encapsulation dot1q</span><br><span class="line"> switchport mode trunk</span><br><span class="line">!</span><br><span class="line"><span class="comment">//划分两台终端至vlan10</span></span><br><span class="line">interface GigabitEthernet0/1</span><br><span class="line"> switchport access vlan 10</span><br><span class="line"> switchport mode access</span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet0/2</span><br><span class="line"> switchport access vlan 10</span><br><span class="line"> switchport mode access</span><br><span class="line">！</span><br><span class="line"><span class="comment">//开启DHCP snooping</span></span><br><span class="line">S1(config)<span class="selector-id">#ip</span> dhcp snooping</span><br><span class="line">S1(config)<span class="selector-id">#ip</span> dhcp snooping trust</span><br><span class="line"><span class="comment">//开启DHCP snooping的交换机所有接口缺省为untrust口，交换机只转发从trust口收到的DHCP响应报文（offer、ACK）</span></span><br></pre></td></tr></table></figure><h2 id="使用show查看配置-1"><a href="#使用show查看配置-1" class="headerlink" title="使用show查看配置"></a>使用show查看配置</h2><h3 id="EG"><a href="#EG" class="headerlink" title="EG"></a>EG</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117180827.png"></p><h3 id="PC1及PC2"><a href="#PC1及PC2" class="headerlink" title="PC1及PC2"></a>PC1及PC2</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117174216.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117174225.png"></p>]]></content>
      
      
      <categories>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DHCP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VRRP协议与原理</title>
      <link href="2021/01/17/VRRP%E5%8D%8F%E8%AE%AE%E4%B8%8E%E5%8E%9F%E7%90%86/"/>
      <url>2021/01/17/VRRP%E5%8D%8F%E8%AE%AE%E4%B8%8E%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="VRRP协议与原理"><a href="#VRRP协议与原理" class="headerlink" title="VRRP协议与原理"></a>VRRP协议与原理</h1><h2 id="VRRP概述"><a href="#VRRP概述" class="headerlink" title="VRRP概述"></a>VRRP概述</h2><blockquote><ol><li>VRRP（Virtual Route Redundancy Protocol）虚拟路由器冗余协议是一种网关备份冗余解决方案，它对Ethernet上的计算机等终端的默认网关进行冗余备份，实现当其中一台网关设备宕机时，备份网关设备能够快速自动切换并接管转发工作，防止因网关设备故障引发转发数据失败，提高了网络服务质量.</li><li>VRRP通过使用虚拟路由器技术实现了主机默认网关的备份，同时也可以通过VRRP来实现网关的负载均衡.</li></ol></blockquote><h2 id="协议版本：VRRPv2-常用）和VRRPv3："><a href="#协议版本：VRRPv2-常用）和VRRPv3：" class="headerlink" title="协议版本：VRRPv2(常用）和VRRPv3："></a>协议版本：VRRPv2(常用）和VRRPv3：</h2><blockquote><p>VRRPv2仅适用于IPv4网络，VRRPv3适用于IPv4和IPv6两种网络.</p></blockquote><h2 id="VRRP原理"><a href="#VRRP原理" class="headerlink" title="VRRP原理"></a>VRRP原理</h2><p><strong>VRRP将局域网内的一组路由器划分在一起，称为一个备份组。备份组由一个Master路由器和多个Backup路由器组成，功能上相当于一台虚拟路由器。</strong></p><blockquote><p>VRRP备份组具有以下特点：</p><ul><li>虚拟路由器具有IP地址，称为虚拟IP地址。局域网内的主机仅需要知道这个虚拟路由器的IP地址，并将其设置为缺省路由的下一跳地址。</li><li>网络内的主机通过这个虚拟路由器与外部网络进行通信。</li><li>备份组内的路由器根据优先级，选举出Master路由器，承担网关功能。其他路由器作为Backup路由器，当Master路由器发生故障时，取代Master继续履行网关职责，从而保证网络内的主机不间断地与外部网络进行通信。</li></ul></blockquote><h2 id="VRRP组"><a href="#VRRP组" class="headerlink" title="VRRP组"></a>VRRP组</h2><blockquote><ol><li>一个VRRP组由多台协同工作的路由器组成，使用相同的VRID（虚拟路由器标识符）进行标识，属于同一个VRRP组的路由器之间交互VRRP协议报文并产生一台虚拟路由器。</li><li>一个VRRP组中只能出现一台Master路由器。</li><li>一个接口可以加入单个VRRP组，也可以加入多个VRRP组。不同的VRRP组需使用不同的VRID进行区分。</li></ol></blockquote><h2 id="虚拟-（路由器-IP-MAC）"><a href="#虚拟-（路由器-IP-MAC）" class="headerlink" title="虚拟 （路由器 IP MAC）"></a>虚拟 （路由器 IP MAC）</h2><blockquote><ol><li><p>虚拟路由器</p><ul><li><p>虚拟路由器的IP地址（虚拟IP地址）由网络管理员在配置VRRP时指定，一台虚拟路由器可以有一个或多个IP地址，而虚拟MAC地址的格式是0000-5e00-01xx”,其中XX为VRID，</p></li><li><p>一个VRRP组只会产生一台虚拟路由器。当Master路由器收到请求虚拟路由器MAC地址的ARP Request时，它在ARP Reply中回应的MAC地址是虚拟MAC地址，而不是其物理接口MAC地址。</p></li><li><p>通常情况下，VRRP路由器接口IP地址不会与虚拟路由器的IP地址重叠，如果使用某个路由器接口的IP地址，则该路由器将无条件的称为Master。</p></li></ul></li><li><p>Ｍaster路由器：</p><ul><li><p>Master路由器是接口处于Master状态，也被称为主路由器。主路由器在一个VRRP组中承担报文转发任务，只有Ｍaster路由器才会响应针对虚拟IP地址的ARP Requeset。</p></li><li><p> Master路由器会以一定的时间间隔周期性地发送VRRP报文，以便通知一个VRRP组中的Backup路由器关于自己的存活情况。</p></li></ul></li><li><p>Backup路由器：</p><ul><li>Backup路由器是接口处于Backup状态，也被称为备份路由器，Backup路由器会实时侦听Master路由器发送出来的VRRP报文，它随时准备接替Master路由器的工作。</li></ul></li><li><p>抢占模式</p><ul><li>VRRP优先级越大的称为主路由器，优先级相同情况下，则接口IP地址最大的成为主路由器。如果Backup激活了抢占功能，当发现Master路由器的优先级比自己更低时，它将立即成为Master状态。而如果Backup路由器没有激活抢占功能，那么即使收到比自己更低的优先级，也只能依然保持Backup状态，直到Master路由器失效。</li></ul></li></ol></blockquote><h2 id="VRRP状态"><a href="#VRRP状态" class="headerlink" title="VRRP状态"></a>VRRP状态</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117142114.png"></p><blockquote><ol><li><p>Initialize（初始状态）：</p><ul><li><p>接口配置VRRP后，如果该接口时Down的（例如接口关闭，或者没有连接任何线缆）则该接口的状态停滞在Initialize。</p></li><li><p>当接口UP后，如果其VRRP优先级为255(这种情况发生在接口的实际IP地址是VRRP虚拟IP地址的情况下）那么接口的VRRP状态将由Initialize切换到Master。</p></li><li><p>如果优先级不是255，则进入Backup状态。</p></li></ul></li><li><p>Backup状态：</p><ul><li><p>它会实时监控当前Master路由器的状态，并随时接替工作。</p><p>a. 对关于VRRP虚拟IP地址的ARP请求不响应。</p><p>b. 丢弃目的MAC地址为VRRP虚拟MAC地址的数据帧。</p><p>c. 不接受目的IP地址为VRRP虚拟IP地址的数据包</p><p>d. 实时侦听Master路由器发送的报文。若该VRRP报文的优先级为0（这意味着当前Master路由器希望主动放弃Master状态）</p></li></ul></li><li><p>Master状态：</p><ul><li><p>它承担着数据转发任务</p><p>a. 当收到关于虚拟IP地址的ARP请求时，以虚拟MAC地址进行回应。</p><p>b. 转发目的MAC地址为虚拟MAC地址。</p><p>c. 周期性地发送VRRP报文，时间间隔缺省为1S。</p><p>d. 当收到一个VRRP报文时，若该优先级为０，则继续发送自己的报文，若该VRRP报文优先级不为０，并比本接口的VRRP优先级值更大，或者VRRP优先级相等但是VRRP报文的源IP地址比本接口大，则将接口切换成Backuo状态。若该VRRP报文不为0，并且比本接口优先级更小，则忽略该报文。</p></li></ul></li></ol></blockquote><h2 id="VRRP定时器"><a href="#VRRP定时器" class="headerlink" title="VRRP定时器"></a>VRRP定时器</h2><p><strong>VRRP在运行过程中使用两个定时器用来进行状态检测.</strong></p><blockquote><ol><li>通过定时器（adver-timer）:该定时器在主路由器中使用，用来定于通告间隔（adver-interval）.主路由器以该定时器的间隔定期发送VRRP通告报文，用来告知其他备份路由器自己仍在先.通告间隔默认为1秒，可以通过配置进行修改</li><li>主路由器失效时器（master-down-timer）：该定时器在备份路由器中使用，用来定义主路由器失效（mater-down-interval）/主路由器失效间隔指的是备路由器多长时间没有收到主路由器的通告报文后，将认为主路由器一失效，并开始选举新的主路由器.主路由器失效间隔是通告间隔的3倍，默认为3秒</li></ol></blockquote><h2 id="VRRP报文结构"><a href="#VRRP报文结构" class="headerlink" title="VRRP报文结构"></a>VRRP报文结构</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117142259.png"></p><blockquote><p>报文格式：VRRP协议的正常工作以来于VRRP报文的正确收发，VRRP之定义了一种报文格式，即通过报文，它被封装在IP报文中，IP头部的协议号字段值为112，报文的目的IP地址是组播地址224.0.0.18.</p><ol><li><p>各个字段的含义如下：</p><ul><li><p>版本（Version）：对于VRRPv2来说，该字段的值恒为2</p></li><li><p>类型（Type）：VRRP之定义了通告报文这一种报文类型.该字段的值恒为1.</p></li><li><p>虚拟路由器ID（VRID）：虚拟路由器的标识符，取值范围是1~255，属于同一个VRRP组的路由器需使用相同的VRID.</p></li><li><p>优先级（Priority）：取值范围0~255，该值越大，则VRRP优先级越高，路由器也就越有可能成为Master</p></li><li><p>IP地址个数（Count IP Address）：VRRP组中虚拟IP地址的个数.这个字段的值指示了改报文后续的”IP地址”字段的个数</p></li><li><p>认证类型（Authentication Type）：VRRP报文的认证烈性，有以下三种情况. </p><p>a. 当该字段为0时，表示无认证（Non Authentication）；</p><p>b. 当该字段为1时，表示明文认证方式（Simple Text Password）；</p><p>c. 当该字段为2时，表示MD5认证方式（IP Authentication Header）；</p></li><li><p>通告间隔（Advertisement Interval）：VRRP报文的发送时间间隔（单位为秒），缺省情况下，VRRP的报文发送时间间隔为1s.</p></li><li><p>校验和（Checksum）：校验和</p></li><li><p>IP地址（IP address）：VRRP虚拟IP地址</p></li><li><p>认证数据（Authentication Data）：VRRP认证数据，当VRRP明文认证或MD5认证被激活时，该字段则填充相应的数据.</p></li></ul></li></ol></blockquote><h2 id="単网关的缺陷"><a href="#単网关的缺陷" class="headerlink" title="単网关的缺陷"></a>単网关的缺陷</h2><p><strong>当网关路由器R-A出现故障时，本网段内以该设备为网关的主机都不能与Internet进行通信.</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117142525.png"></p><h2 id="多网关存在的问题"><a href="#多网关存在的问题" class="headerlink" title="多网关存在的问题"></a>多网关存在的问题</h2><blockquote><ol><li>通过部署多网关的方式实现网关的备份</li><li>但多网关可能会出现一些问题：网关间IP地址冲突；主机会频繁切换网络接口</li></ol></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117142608.png"></p><h2 id="VRRP基本结构"><a href="#VRRP基本结构" class="headerlink" title="VRRP基本结构"></a>VRRP基本结构</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117142628.png"></p><h2 id="VRRP主备备份工作过程"><a href="#VRRP主备备份工作过程" class="headerlink" title="VRRP主备备份工作过程"></a>VRRP主备备份工作过程</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117142642.png"></p><h3 id="VRRP主备路由器切换过程（1）"><a href="#VRRP主备路由器切换过程（1）" class="headerlink" title="VRRP主备路由器切换过程（1）"></a>VRRP主备路由器切换过程（1）</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117142706.png"></p><h3 id="VRRP主备路由器切换过程（2）"><a href="#VRRP主备路由器切换过程（2）" class="headerlink" title="VRRP主备路由器切换过程（2）"></a>VRRP主备路由器切换过程（2）</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117142726.png"></p><h2 id="VRRP负载分担工作过程"><a href="#VRRP负载分担工作过程" class="headerlink" title="VRRP负载分担工作过程"></a>VRRP负载分担工作过程</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117142812.png"></p><h2 id="实验1"><a href="#实验1" class="headerlink" title="实验1"></a>实验1</h2><p><strong>如图所示：R1与R2分两个组，组1是由R1为主，组2有R2为主，R1与R2各VRRP组中高优先级设置为150，低优先级设置为120.通过VRRP实现负载分担</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117142812.png"></p><h3 id="主机地址配置"><a href="#主机地址配置" class="headerlink" title="主机地址配置"></a>主机地址配置</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PC2：VPCS&gt; ip 192.168.1.1/24 192.168.1.254</span><br><span class="line">PC3：VPCS&gt; ip 192.168.1.2/24 192.168.1.253</span><br></pre></td></tr></table></figure><h3 id="R1配置"><a href="#R1配置" class="headerlink" title="R1配置"></a>R1配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">interface Ethernet0/1</span><br><span class="line"> ip <span class="selector-tag">address</span> 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.251</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line"> vrrp 1 ip 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.254</span></span><br><span class="line"> vrrp 1 priority 150</span><br><span class="line"> vrrp 2 ip 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.253</span></span><br><span class="line"> vrrp 2 priority 120</span><br><span class="line">！</span><br><span class="line">interface Loopback0</span><br><span class="line"> ip <span class="selector-tag">address</span> 1<span class="selector-class">.1</span><span class="selector-class">.1</span><span class="selector-class">.1</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.255</span></span><br><span class="line">end</span><br></pre></td></tr></table></figure><h3 id="R2配置"><a href="#R2配置" class="headerlink" title="R2配置"></a>R2配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">interface Ethernet0/1</span><br><span class="line"> ip <span class="selector-tag">address</span> 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.252</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line"> vrrp 1 ip 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.254</span></span><br><span class="line"> vrrp 1 priority 120</span><br><span class="line"> vrrp 2 ip 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.253</span></span><br><span class="line"> vrrp 2 priority 150</span><br><span class="line">！</span><br><span class="line">interface Loopback0</span><br><span class="line">ip <span class="selector-tag">address</span> 2<span class="selector-class">.2</span><span class="selector-class">.2</span><span class="selector-class">.2</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.255</span></span><br><span class="line">end</span><br></pre></td></tr></table></figure><h2 id="使用show查看配置"><a href="#使用show查看配置" class="headerlink" title="使用show查看配置"></a>使用show查看配置</h2><h3 id="R1"><a href="#R1" class="headerlink" title="R1"></a>R1</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117142932.png"></p><h3 id="R2"><a href="#R2" class="headerlink" title="R2"></a>R2</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117142946.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117142957.png"></p><h3 id="PC2-通过追踪显然PC2走VRRP组1"><a href="#PC2-通过追踪显然PC2走VRRP组1" class="headerlink" title="PC2:通过追踪显然PC2走VRRP组1"></a>PC2:通过追踪显然PC2走VRRP组1</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117143016.png"></p><h3 id="PC3：通过追踪显然PC3走VRRP组2"><a href="#PC3：通过追踪显然PC3走VRRP组2" class="headerlink" title="PC3：通过追踪显然PC3走VRRP组2"></a>PC3：通过追踪显然PC3走VRRP组2</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117143029.png"></p><h2 id="实验2"><a href="#实验2" class="headerlink" title="实验2"></a>实验2</h2><p><strong>如图所示：在S-A和S-B上配置VRRP，实现主机的网关冗余。所配置的参数.S-A、S-B各VRRP组中高优先级设置为150，低优先级设置为120，并设置抢占功能为5秒</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117143047.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117143058.png"></p><h3 id="主机地址配置-1"><a href="#主机地址配置-1" class="headerlink" title="主机地址配置"></a>主机地址配置</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PC1：VPCS&gt; ip 192.168.10.1/24 192.168.10.254</span><br><span class="line">PC2：VPCS&gt; ip 192.168.20.1/24 192.168.20.254</span><br><span class="line">PC3：VPCS&gt; ip 192.168.30.1/24 192.168.30.254</span><br><span class="line">PC4：VPCS&gt; ip 192.168.40.1/24 192.168.40.254</span><br></pre></td></tr></table></figure><h3 id="S-A配置"><a href="#S-A配置" class="headerlink" title="S-A配置"></a>S-A配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">S-<span class="selector-tag">A</span>(config)<span class="selector-id">#vlan</span> 10,20,30,40</span><br><span class="line">interface GigabitEthernet0/0</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet0/1</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface Vlan10</span><br><span class="line"> ip <span class="selector-tag">address</span> 192<span class="selector-class">.168</span><span class="selector-class">.10</span><span class="selector-class">.252</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line"> vrrp 10 ip 192<span class="selector-class">.168</span><span class="selector-class">.10</span><span class="selector-class">.254</span></span><br><span class="line"> vrrp 10 preempt delay minimum 5</span><br><span class="line"> vrrp 10 priority 150</span><br><span class="line">!</span><br><span class="line">interface Vlan20</span><br><span class="line"> ip <span class="selector-tag">address</span> 192<span class="selector-class">.168</span><span class="selector-class">.20</span><span class="selector-class">.252</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line"> vrrp 20 ip 192<span class="selector-class">.168</span><span class="selector-class">.20</span><span class="selector-class">.254</span></span><br><span class="line"> vrrp 20 preempt delay minimum 5</span><br><span class="line"> vrrp 20 priority 150</span><br><span class="line">!</span><br><span class="line">interface Vlan30</span><br><span class="line"> ip <span class="selector-tag">address</span> 192<span class="selector-class">.168</span><span class="selector-class">.30</span><span class="selector-class">.252</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line"> vrrp 30 ip 192<span class="selector-class">.168</span><span class="selector-class">.30</span><span class="selector-class">.254</span></span><br><span class="line"> vrrp 30 preempt delay minimum 5</span><br><span class="line"> vrrp 30 priority 120</span><br><span class="line">!</span><br><span class="line">interface Vlan40</span><br><span class="line"> ip <span class="selector-tag">address</span> 192<span class="selector-class">.168</span><span class="selector-class">.40</span><span class="selector-class">.252</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line"> vrrp 40 ip 192<span class="selector-class">.168</span><span class="selector-class">.40</span><span class="selector-class">.254</span></span><br><span class="line"> vrrp 40 preempt delay minimum 5</span><br><span class="line"> vrrp 40 priority 120</span><br><span class="line">!</span><br></pre></td></tr></table></figure><h3 id="S-B配置"><a href="#S-B配置" class="headerlink" title="S-B配置"></a>S-B配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">S-<span class="selector-tag">B</span>(config)<span class="selector-id">#vlan</span> 10,20,30,40</span><br><span class="line">interface GigabitEthernet0/0</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet0/1</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface Vlan10</span><br><span class="line"> ip <span class="selector-tag">address</span> 192<span class="selector-class">.168</span><span class="selector-class">.10</span><span class="selector-class">.253</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line"> vrrp 10 ip 192<span class="selector-class">.168</span><span class="selector-class">.10</span><span class="selector-class">.254</span></span><br><span class="line"> vrrp 10 preempt delay minimum 5</span><br><span class="line"> vrrp 10 priority 120</span><br><span class="line">!</span><br><span class="line">interface Vlan20</span><br><span class="line"> ip <span class="selector-tag">address</span> 192<span class="selector-class">.168</span><span class="selector-class">.20</span><span class="selector-class">.253</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line"> vrrp 20 ip 192<span class="selector-class">.168</span><span class="selector-class">.20</span><span class="selector-class">.254</span></span><br><span class="line"> vrrp 20 preempt delay minimum 5</span><br><span class="line"> vrrp 20 priority 120</span><br><span class="line">!</span><br><span class="line">interface Vlan30</span><br><span class="line"> ip <span class="selector-tag">address</span> 192<span class="selector-class">.168</span><span class="selector-class">.30</span><span class="selector-class">.253</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line"> vrrp 30 ip 192<span class="selector-class">.168</span><span class="selector-class">.30</span><span class="selector-class">.254</span></span><br><span class="line"> vrrp 30 preempt delay minimum 5</span><br><span class="line"> vrrp 30 priority 150</span><br><span class="line">!</span><br><span class="line">interface Vlan40</span><br><span class="line"> ip <span class="selector-tag">address</span> 192<span class="selector-class">.168</span><span class="selector-class">.40</span><span class="selector-class">.253</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line"> vrrp 40 ip 192<span class="selector-class">.168</span><span class="selector-class">.40</span><span class="selector-class">.254</span></span><br><span class="line"> vrrp 40 preempt delay minimum 5</span><br><span class="line"> vrrp 40 priority 150</span><br></pre></td></tr></table></figure><h3 id="S-C配置"><a href="#S-C配置" class="headerlink" title="S-C配置"></a>S-C配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">S-C(config)<span class="selector-id">#vlan</span> 10,20,30,40</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/0</span><br><span class="line">switchport access vlan 10</span><br><span class="line">switchport mode access</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/1</span><br><span class="line">switchport access vlan 20</span><br><span class="line">switchport mode access</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/2</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line"></span><br><span class="line">S-D：</span><br><span class="line">S-D(config)<span class="selector-id">#vlan</span> 10,20,30,40</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/0</span><br><span class="line">switchport access vlan 30</span><br><span class="line">switchport mode access</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/1</span><br><span class="line">switchport access vlan 40</span><br><span class="line">switchport mode access</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/2</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br></pre></td></tr></table></figure><h2 id="使用show查看配置-1"><a href="#使用show查看配置-1" class="headerlink" title="使用show查看配置"></a>使用show查看配置</h2><h3 id="S-A"><a href="#S-A" class="headerlink" title="S-A"></a>S-A</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117143221.png"></p><h3 id="S-B"><a href="#S-B" class="headerlink" title="S-B"></a>S-B</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117143221.png"></p><h3 id="PC1"><a href="#PC1" class="headerlink" title="PC1"></a>PC1</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117143234.png"></p><h3 id="PC3"><a href="#PC3" class="headerlink" title="PC3"></a>PC3</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117143244.png"></p>]]></content>
      
      
      <categories>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VRRP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PVLAN</title>
      <link href="2021/01/17/PVLAN/"/>
      <url>2021/01/17/PVLAN/</url>
      
        <content type="html"><![CDATA[<h1 id="PVLAN"><a href="#PVLAN" class="headerlink" title="PVLAN"></a>PVLAN</h1><h2 id="PVLAN应用场景"><a href="#PVLAN应用场景" class="headerlink" title="PVLAN应用场景"></a>PVLAN应用场景</h2><blockquote><ol><li>private vlan的重要功能就是能够实现节约IP地址，隔离广播风暴，病毒攻击，控制端口二层互访.适用于大的二层结构的环境，例如：用户多，vlan多，但是IP地址又是同一个网段，又要实现彼此之间的二层隔离，个别vlan之间又需要访问的情况下，private vlan可以解决上面的问题</li><li>另一种比较典型的PVLAN应用类似于端口隔离功能（switchport protected），即将所有用户端口设置为隔离VLAN(Isolated Port），这样即使同一vlan，同一网段的IP之间的用户也无法访问，可以有效隔离病毒传播。</li></ol></blockquote><h2 id="PVLAN功能介绍"><a href="#PVLAN功能介绍" class="headerlink" title="PVLAN功能介绍"></a>PVLAN功能介绍</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117140743.png"></p><blockquote><ol><li>服务提供商如果给每个用户一个VLAN，则由于一台设备支持的VLAN数最大只有4094而限制了服务提供商能支持的用户数；在三层设备上，每个VLAN被分配一个子网地址或一系列地址，这种情况导致IP地址的浪费，对于这个问题我们可以使用private vlan来解决.</li><li>private vlan将一个vlan的二层广播域分成多个子域，每个子域都由一个私有vlan对组成：主vlan（primary vlan）和辅助vlan（secondary vlan）.</li><li>private vlan域中所有的私有vlan共享同一个主vlan</li><li>每个子域的辅助vlan id不同. 一个private vlan域中只有一个主vlan</li></ol></blockquote><p><strong>有两种类型的辅助vlan</strong></p><blockquote><ol><li>隔离vlan（lsolated vlan）：同一个隔离vlan中的端口不可以互相进行二层通信，一个private vlan域中只有一个隔离vlan</li><li>团体vlan（Community vlan）：同一团体vlan中的端口可以互相进行二层通信，但不能与其他群体vlan中的端口进行二层通信，一个private vlan中可以有多个团体vlan</li></ol></blockquote><p><strong>private vlan域内三种常见的端口角色</strong></p><blockquote><ol><li>混杂端口（Promiscuous Port）：混杂端口为主vlan中的端口，可以与任意端口通信，包括同一个Private vlan的隔离端口和团体端口.</li><li>隔离端口（lsolated Port）：隔离vlan中的端口彼此之间不能通信，只能与混杂端口进行通信</li><li>团体端口（Community Port）：属于团体vlan中的端口，同一团体vlan可以进行通信也可以和混杂端口通信，不能与其他团体vlan通信以及隔离端口通信</li><li>只有主vlan可以创建SVI接口，配置IP作为网关使用，辅助vlan不可以创建SVI</li></ol></blockquote><h2 id="SVI接口"><a href="#SVI接口" class="headerlink" title="SVI接口"></a>SVI接口</h2><blockquote><p>SVI（switch virtual interface）交换虚拟接口，即交互三层管理vlan地址，一个由交换端口构成的vlan（其实就是通常所说的vlan接口）用于连接整个vlan。也称为逻辑三层接口. SVI是联系vlan的IP接口，一个SVI只能和一个vlan相联系.</p></blockquote><h2 id="PVLAN实验"><a href="#PVLAN实验" class="headerlink" title="PVLAN实验"></a>PVLAN实验</h2><h3 id="实验1"><a href="#实验1" class="headerlink" title="实验1"></a>实验1</h3><p><strong>如图所示：在主vlan中有2个部门，服务器属于主vlan10并配置混杂端口，其中财务部属于隔离vlan20，商务部门属于团体vlan30</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117140914.png"></p><h4 id="主机地址配置"><a href="#主机地址配置" class="headerlink" title="主机地址配置"></a>主机地址配置</h4><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">VPC1:VPCS&gt; ip <span class="number">192.168</span>.<span class="number">1.1</span>/<span class="number">24</span> <span class="number">192.168</span>.<span class="number">1.254</span></span><br><span class="line">VPC2:VPCS&gt; ip <span class="number">192.168</span>.<span class="number">1.2</span>/<span class="number">24</span> <span class="number">192.168</span>.<span class="number">1.254</span></span><br><span class="line">VPC3:VPCS&gt; ip <span class="number">192.168</span>.<span class="number">1.3</span>/<span class="number">24</span> <span class="number">192.168</span>.<span class="number">1.254</span></span><br><span class="line">VPC4:VPCS&gt; ip <span class="number">192.168</span>.<span class="number">1.4</span>/<span class="number">24</span> <span class="number">192.168</span>.<span class="number">1.254</span></span><br><span class="line">VPC5:VPCS&gt; ip <span class="number">192.168</span>.<span class="number">1.5</span>/<span class="number">24</span> <span class="number">192.168</span>.<span class="number">1.254</span></span><br></pre></td></tr></table></figure><h4 id="S1配置"><a href="#S1配置" class="headerlink" title="S1配置"></a>S1配置</h4><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">vlan 10</span><br><span class="line">  private-vlan primary     <span class="selector-id">#--</span>&gt;设置vlan10为主vlan</span><br><span class="line">  private-vlan association 20,30 <span class="selector-id">#--</span>&gt;关联辅助vlan20和vlan30</span><br><span class="line">!</span><br><span class="line">vlan 20</span><br><span class="line">  private-vlan isolated    <span class="selector-id">#--</span>&gt;设置vlan20为隔离vlan</span><br><span class="line">!</span><br><span class="line">vlan 30</span><br><span class="line">  private-vlan community   <span class="selector-id">#--</span>&gt;设置vlan30为团体vlan</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/0</span><br><span class="line"> switchport private-vlan host-association 10 20</span><br><span class="line">                           #--&gt;将e0/1接口加入到隔离vlan</span><br><span class="line"> switchport mode private-vlan host </span><br><span class="line">                           <span class="selector-id">#--</span>&gt;设置模式为private-vlan</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/1</span><br><span class="line"> switchport private-vlan host-association 10 20 </span><br><span class="line">                           #--&gt;将e0/1接口加入到隔离vlan</span><br><span class="line"> switchport mode private-vlan host </span><br><span class="line">                           <span class="selector-id">#--</span>&gt;设置模式为private-vlan</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/2</span><br><span class="line"> switchport private-vlan host-association 10 30 </span><br><span class="line">                           #--&gt;将e0/1接口加入到团体vlan</span><br><span class="line"> switchport mode private-vlan host </span><br><span class="line">                           <span class="selector-id">#--</span>&gt;设置模式为private-vlan</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/3</span><br><span class="line"> switchport private-vlan host-association 10 30 </span><br><span class="line">                           #--&gt;将e0/1接口加入到团体vlan</span><br><span class="line"> switchport mode private-vlan host</span><br><span class="line">                           <span class="selector-id">#--</span>&gt;设置模式为private-vlan</span><br><span class="line">!</span><br><span class="line">interface Vlan10</span><br><span class="line"> ip <span class="selector-tag">address</span> 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.254</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line"> private-vlan mapping 20,30  </span><br><span class="line">                           <span class="selector-id">#--</span>&gt;将辅助vlan映射到SVI接口</span><br><span class="line">！</span><br><span class="line">interface  Ethernet1/1</span><br><span class="line">switchport private-vlan mapping 10 11-12</span><br><span class="line">switchport mode private-vlan promiscuous</span><br></pre></td></tr></table></figure><blockquote><ol><li>PC1和PC2隔离vlan不能互相ping通，但是能和主vlan10的PC5ping通</li><li>PC3和PC4团体vlan能互相ping通，也能和主vlan10的PC5ping通</li><li>主vlanPC5能和辅助vlan的全部主机ping通</li></ol></blockquote><h3 id="使用show查看配置"><a href="#使用show查看配置" class="headerlink" title="使用show查看配置"></a>使用show查看配置</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117141012.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117141019.png"></p><h3 id="实验2"><a href="#实验2" class="headerlink" title="实验2"></a>实验2</h3><p><strong>如图所示：三台交换机，一台三层，两台二层，三台交换机分别有主vlan10和辅助vlan11,12，S-A和S-B之间做trunk，S-A和Swith（三层）做混杂端口，Swith（三层）上配置192.168.1.254/24的网关</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117141044.png"></p><h4 id="主机地址配置-1"><a href="#主机地址配置-1" class="headerlink" title="主机地址配置"></a>主机地址配置</h4><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">VPC1:VPCS&gt; ip <span class="number">192.168</span>.<span class="number">1.1</span>/<span class="number">24</span> <span class="number">192.168</span>.<span class="number">1.254</span></span><br><span class="line">VPC2:VPCS&gt; ip <span class="number">192.168</span>.<span class="number">1.2</span>/<span class="number">24</span> <span class="number">192.168</span>.<span class="number">1.254</span></span><br><span class="line">VPC3:VPCS&gt; ip <span class="number">192.168</span>.<span class="number">1.3</span>/<span class="number">24</span> <span class="number">192.168</span>.<span class="number">1.254</span></span><br><span class="line">VPC4:VPCS&gt; ip <span class="number">192.168</span>.<span class="number">1.4</span>/<span class="number">24</span> <span class="number">192.168</span>.<span class="number">1.254</span></span><br><span class="line">VPC5:VPCS&gt; ip <span class="number">192.168</span>.<span class="number">1.5</span>/<span class="number">24</span> <span class="number">192.168</span>.<span class="number">1.254</span></span><br></pre></td></tr></table></figure><h4 id="S-A配置"><a href="#S-A配置" class="headerlink" title="S-A配置"></a>S-A配置</h4><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">vlan 10</span><br><span class="line">  private-vlan primary</span><br><span class="line">  private-vlan association 11-12</span><br><span class="line">!</span><br><span class="line">vlan 11</span><br><span class="line">  private-vlan community</span><br><span class="line">!</span><br><span class="line">vlan 12</span><br><span class="line">  private-vlan isolated</span><br><span class="line">！</span><br><span class="line">interface Ethernet0/0</span><br><span class="line"> switchport private-vlan host-association 10 11</span><br><span class="line"> switchport mode private-vlan host</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/1</span><br><span class="line"> switchport private-vlan host-association 10 11</span><br><span class="line"> switchport private-vlan mapping 10 11-12</span><br><span class="line"> switchport mode private-vlan promiscuous</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/2</span><br><span class="line"> switchport private-vlan host-association 10 12</span><br><span class="line"> switchport mode private-vlan host</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/3</span><br><span class="line"> switchport trunk encapsulation dot1q</span><br><span class="line"> switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface Ethernet1/0</span><br><span class="line"> switchport private-vlan mapping 10 11-12</span><br><span class="line"> switchport mode private-vlan promiscuous</span><br></pre></td></tr></table></figure><h4 id="S-B配置"><a href="#S-B配置" class="headerlink" title="S-B配置"></a>S-B配置</h4><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">vlan 10</span><br><span class="line">  private-vlan primary</span><br><span class="line">  private-vlan association 11-12</span><br><span class="line">!</span><br><span class="line">vlan 11</span><br><span class="line">  private-vlan community</span><br><span class="line">!</span><br><span class="line">vlan 12</span><br><span class="line">  private-vlan isolated</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/0</span><br><span class="line"> switchport trunk encapsulation dot1q</span><br><span class="line"> switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/1</span><br><span class="line"> switchport private-vlan host-association 10 11</span><br><span class="line"> switchport mode private-vlan host</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/2</span><br><span class="line"> switchport private-vlan host-association 10 12</span><br><span class="line"> switchport mode private-vlan host</span><br></pre></td></tr></table></figure><h4 id="Switch1（三层）配置"><a href="#Switch1（三层）配置" class="headerlink" title="Switch1（三层）配置"></a>Switch1（三层）配置</h4><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">vlan 10</span><br><span class="line">  private-vlan primary</span><br><span class="line">  private-vlan association 11-12</span><br><span class="line">!</span><br><span class="line">vlan 11</span><br><span class="line">  private-vlan community</span><br><span class="line">!</span><br><span class="line">vlan 12</span><br><span class="line">  private-vlan isolated</span><br><span class="line">!</span><br><span class="line">interface Vlan10</span><br><span class="line"> ip <span class="selector-tag">address</span> 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.254</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line"> private-vlan mapping 11-12</span><br><span class="line">！</span><br><span class="line">interface GigabitEthernet0/0</span><br><span class="line"> switchport private-vlan mapping 10 11-12</span><br><span class="line"> switchport mode private-vlan promiscuous</span><br></pre></td></tr></table></figure><blockquote><ol><li>PC3和PC5隔离vlan11不能相通，但是ping通主vlan的SVI接口</li><li>PC1，PC2和PC5团体vlan12可以互相ping通，也可以ping通主vlan的SVI接口</li></ol></blockquote><h4 id="使用show查看配置-1"><a href="#使用show查看配置-1" class="headerlink" title="使用show查看配置"></a>使用show查看配置</h4><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117141148.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117141202.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117141213.png"></p>]]></content>
      
      
      <categories>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VLAN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VLAN实验</title>
      <link href="2021/01/17/VLAN%E5%AE%9E%E9%AA%8C/"/>
      <url>2021/01/17/VLAN%E5%AE%9E%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="VLAN实验"><a href="#VLAN实验" class="headerlink" title="VLAN实验"></a>VLAN实验</h1><h2 id="Access链路应用"><a href="#Access链路应用" class="headerlink" title="Access链路应用"></a>Access链路应用</h2><p><strong>划分了两个VLAN</strong></p><blockquote><p>PC1和PC3网段属于VLAN10<br>PC2和PC4网段属于VLAN20<br>主机地址<br>PC1：192.1.1.1<br>PC2：192.1.1.2<br>PC3：192.1.1.3<br>PC4：192.1.1.4</p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117135816.png"></p><h3 id="S3配置"><a href="#S3配置" class="headerlink" title="S3配置"></a>S3配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">int e0/0</span><br><span class="line">swi mo acc</span><br><span class="line">swi acc vlan 10</span><br><span class="line"></span><br><span class="line">int e0/1</span><br><span class="line">swi mo acc</span><br><span class="line">swi acc vlan 20</span><br><span class="line"></span><br><span class="line">int e0/2</span><br><span class="line">swi mo acc</span><br><span class="line">swi acc vlan 10</span><br><span class="line"></span><br><span class="line">int e0/3</span><br><span class="line">swi mo acc</span><br><span class="line">swi acc vlan 20</span><br></pre></td></tr></table></figure><p><strong>PC1和PC3同属于一个vlan,可以ping通，但是和P2和P4不同vlan不能ping通，换过来说P2和P4也一样不能ping通P1和P3</strong></p><h2 id="Trunk链路应用"><a href="#Trunk链路应用" class="headerlink" title="Trunk链路应用"></a>Trunk链路应用</h2><p><strong>还是根据上面的地址和VLAN划分，添加多了一台交换机</strong></p><h3 id="S1和S2的配置"><a href="#S1和S2的配置" class="headerlink" title="S1和S2的配置"></a>S1和S2的配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">S1：int e0/0</span><br><span class="line">Swi trunk encapsulation dot1q</span><br><span class="line">Swi mode trunk</span><br><span class="line"></span><br><span class="line">S2：int e0/0</span><br><span class="line">Swi trunk encapsulation dot1q</span><br><span class="line">Swi mode trunk</span><br></pre></td></tr></table></figure><p><strong>终端和交换机之间的access接口配置还是一样，两端的交换机需要封装802.1q协议，封装之后，应用trunk模式，同VLAN之间可以通信，不同VLAN还是不能通信</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117135919.png"></p><p><strong>使用wireshark抓取的icmp数据包，turnk封装了802.1q，VLAN-id为10</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117135937.png"></p><h2 id="交换机不同模式使用出现的问题"><a href="#交换机不同模式使用出现的问题" class="headerlink" title="交换机不同模式使用出现的问题"></a>交换机不同模式使用出现的问题</h2><h3 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h3><p><strong>switch1两个接口都是VLAN10，switch2两个接口都是VLAN20，请问它们可以通信么？</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117140005.png"></p><h4 id="switch-1配置"><a href="#switch-1配置" class="headerlink" title="switch 1配置"></a>switch 1配置</h4><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">S1(config)<span class="selector-id">#vlan</span> 10</span><br><span class="line">interface GigabitEthernet0/0</span><br><span class="line">switchport access vlan 10</span><br><span class="line">switchport mode access</span><br><span class="line"></span><br><span class="line">interface GigabitEthernet0/1</span><br><span class="line">switchport access vlan 10</span><br><span class="line">switchport mode access</span><br></pre></td></tr></table></figure><h4 id="switch-2配置"><a href="#switch-2配置" class="headerlink" title="switch 2配置"></a>switch 2配置</h4><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">S2(config)<span class="selector-id">#vlan</span> 20</span><br><span class="line">interface GigabitEthernet0/0</span><br><span class="line">switchport access vlan 20</span><br><span class="line">switchport mode access</span><br><span class="line"></span><br><span class="line">interface GigabitEthernet0/1</span><br><span class="line">switchport access vlan 20</span><br><span class="line">switchport mode access</span><br></pre></td></tr></table></figure><p><strong>答：不能通信，因为VLAN需要同步</strong></p><p><strong>修改配置：两者交换机同步既可以通信了</strong></p><blockquote><p>switch 1<br>S1(config)#vlan 10<br>S1(config)#vlan 20</p><p>switch 2<br>S2(config)#vlan 10<br>S2(config)#vlan 20</p></blockquote><p><strong>答：两边VLAN同步，两边的接口都是相同的vlan-id，而access接口发送出去的一定是无标记帧</strong></p><blockquote><p>说明：PC1发送数据包给PC2，进入到switch1中，没有标签的数据包会打上vlan-id标签，发现目标是从自己gi0/1接口出去的，查看自己的gi0/1接口vlan-id标签，发现标签是一致，然后剥开vlan-id标签发送给switch2，接着switch2情况也和switch1一样.最终抵达PC2</p></blockquote><h3 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h3><p><strong>switch2的access-VLAN20接口改成trunk-VLAN20，请问PC1能pingPC2么?</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117140148.png"></p><h4 id="switch-2的配置"><a href="#switch-2的配置" class="headerlink" title="switch 2的配置"></a>switch 2的配置</h4><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">interface GigabitEthernet0/0</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport trunk native vlan 20</span><br><span class="line">switchport mode trunk</span><br></pre></td></tr></table></figure><p><strong>答：不能ping通，因为模式不一样，一个是没有封装802.1q，一个没有封装了802.1q，匹配不成功，所以数据不可达</strong></p><h3 id="问题3"><a href="#问题3" class="headerlink" title="问题3"></a>问题3</h3><p><strong>switch1的g0/1接口设置成为trunk-VLAN10，switch2还是原来的trunk-VLAN20，PC1能否ping通PC2</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117140242.png"></p><p><strong>答：不能ping通</strong></p><blockquote><ol><li>不同vlan不能相通</li><li>如果两台通信的交换机配置的native vlan不一致,就会出现mismatch（不匹配）错误，两端的native vlan不匹配的trunk链路,一端的端口会被block住,而不会转发流量.</li></ol></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117140326.png"></p><h2 id="综合实验"><a href="#综合实验" class="headerlink" title="综合实验"></a>综合实验</h2><blockquote><ol><li>s2两端都为access-vlan10，s3连接终端的接口为access-vlan20，连接三层交换机的接口为trunk-vlan20.</li><li>s1三层交换机gi0/1接口为192.168.1.254,gi0/0接口为172.16.1.254.</li></ol></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117140354.png"></p><h3 id="主机地址配置"><a href="#主机地址配置" class="headerlink" title="主机地址配置"></a>主机地址配置</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PC3</span><br><span class="line">VPCS&gt; ip 192.168.1.1/24 192.168.1.25</span><br><span class="line">PC4</span><br><span class="line">VPCS&gt; ip 172.16.1.1/24 172.16.1.254</span><br></pre></td></tr></table></figure><h3 id="S2配置"><a href="#S2配置" class="headerlink" title="S2配置"></a>S2配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">interface GigabitEthernet0/0</span><br><span class="line"> switchport access vlan 10</span><br><span class="line"> switchport mode access</span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet0/1</span><br><span class="line"> switchport access vlan 10</span><br><span class="line"> switchport mode access</span><br></pre></td></tr></table></figure><h3 id="S3配置-1"><a href="#S3配置-1" class="headerlink" title="S3配置"></a>S3配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">interface GigabitEthernet0/0</span><br><span class="line"> switchport access vlan 20</span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet0/1</span><br><span class="line"> switchport trunk encapsulation dot1q</span><br><span class="line"> switchport trunk native vlan 20</span><br><span class="line"> switchport mode trunk</span><br></pre></td></tr></table></figure><h3 id="S1配置"><a href="#S1配置" class="headerlink" title="S1配置"></a>S1配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">interface GigabitEthernet0/0</span><br><span class="line"> no switchport</span><br><span class="line"> ip <span class="selector-tag">address</span> 172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.254</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet0/1</span><br><span class="line"> no switchport</span><br><span class="line"> ip <span class="selector-tag">address</span> 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.254</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br></pre></td></tr></table></figure><p><strong>上面的配置配置完，PC3可以ping通PC4，为什么可以相通.</strong></p><blockquote><p>答：PC3发送数据包给PC4，中间的access口都是透明，可以找到自己的网关，发现下一跳的路由是172.16.1.0/24，对应的接口是gi0/0，然后从gi0/0接口转发出去给S3的gi0/1接口，gi0/1接收到没有打标签的包，随即打上native标签20转发给gi0/0接口，gi0/0接口检查发送过来native跟自己的native是否一致，一致则剥开标签转发给PC4，数据包抵达目的.</p><p>如果S3的gi0/1接口没有打上native-id20，那么将不能通信，因为跟access的接口native不对应，所以目标不可达</p><p>S3接口设置了native-id20，那么对应上access的native，则查看允许通过列表是否通过，通过则转发数据，不通过则丢弃</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VLAN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VLAN原理</title>
      <link href="2021/01/17/VLAN%E5%8E%9F%E7%90%86/"/>
      <url>2021/01/17/VLAN%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="VLAN原理"><a href="#VLAN原理" class="headerlink" title="VLAN原理"></a>VLAN原理</h1><h2 id="广播域过大带来的影响"><a href="#广播域过大带来的影响" class="headerlink" title="广播域过大带来的影响"></a>广播域过大带来的影响</h2><blockquote><ol><li>广播帧泛洪产生大量的数据包（消耗交换机的资源）</li><li>由于都处于一个广播，安全性没有了保障（降低了安全性）</li></ol></blockquote><h2 id="VLAN（虚拟局域网virtual-LAN）"><a href="#VLAN（虚拟局域网virtual-LAN）" class="headerlink" title="VLAN（虚拟局域网virtual LAN）"></a>VLAN（虚拟局域网virtual LAN）</h2><blockquote><ol><li>VLAN的出现减少了广播带来负担，并且提高了安全性</li><li>VLAN号共有4096个，0-4095</li><li>0,4095：这两个号保留，仅限系统使用。用户不能查看。</li><li>CISCO默认VLAN1，不能删除。也同样不能做修改</li><li>2－1001：用于以太网的VLAN，用户可根据这一段号码自己创建VLAN</li><li>1002－1005：用于FDDI和令牌环的默认VLAN，不能删除。</li><li>1006－4094：仅用于以太网的VLAN. 扩展的VLAN，只有3550以上的交换机才能配，且必须将VTP模式设为透明模式。</li></ol></blockquote><h2 id="VLAN的作用"><a href="#VLAN的作用" class="headerlink" title="VLAN的作用"></a>VLAN的作用</h2><blockquote><ol><li>隔离广播域</li><li>VLAN将一个局域网划分成多个虚拟局域网（简单的说把一台交换机划分了多个小型交换机）</li><li>增加了局域网的安全性（不同VLAN之间不能互相通信）</li></ol></blockquote><h2 id="Access接入链路"><a href="#Access接入链路" class="headerlink" title="Access接入链路"></a>Access接入链路</h2><p><strong>Access链路一般应用于终端和交换机之间</strong></p><blockquote><p>一般部署在终端和交换机之间,一个access口属于一个VLAN接收到不带tag的数据帧时会打上接口的native-id后接收</p><ol><li>从access接口发送出去的帧一定是无标记帧</li><li>交换机上接收带tag的数据帧,则对比tag与native-id是否一致,如果相同则接收,如果不同则丢弃.</li><li>交换机发送数据帧与接口的native-id进行对比,一致则剥离tag发送,如果不同,则直接丢弃该数据帧</li></ol></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117135130.png"></p><h2 id="Trunk干道链路"><a href="#Trunk干道链路" class="headerlink" title="Trunk干道链路"></a>Trunk干道链路</h2><p><strong>Trunk链路：用于交换机和交换机之间</strong></p><blockquote><ol><li><p>交换机从trunk链路接收数据帧</p><ul><li><p>带Tag,直接对比允许通过列表</p></li><li><p>不带Tag,打上端口的native-id,对比native-id是否在允许通过列表</p></li></ul></li><li><p>交换机将数据帧从trunk链路发送出去</p><ul><li><p>Tag与端口的native-id相同时,剥离Tag后对比允许通过列表</p></li><li><p>Tag与端口的native不同时,则直接将Tag对比允许通过列表</p></li></ul></li><li><p>native（本地vian-id）说明：</p><ul><li>如果两台通信的交换机配置的native vlan不一致,就会出现mismatch（不匹配）错误,两端的native vlan不匹配的trunk链路,一端的端口会被block住,而不会转发流量.</li></ul></li></ol></blockquote><h2 id="802-1Q报文格式"><a href="#802-1Q报文格式" class="headerlink" title="802.1Q报文格式"></a>802.1Q报文格式</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117135304.png"></p><p><strong>四个字节的标签头包含了2个字节的标签协议标识（TPID）和2个字节的标签控制信息（TCI）</strong></p><p><strong>TPID（Tag Protocol Identifier）是IEEE定义的新的类型,表明这是一个加了802.1Q标签的帧. TPID包含了一个固定的值0x8100</strong></p><p><strong>TCI是包含的是帧的控制信息,它包含了下面的一些元素：</strong></p><blockquote><ol><li>PRI字段主要用于QOS,默认值为0,范围为0-7,其中数值越大越优先,当交换机发生拥塞时,PRI数据越大的数据帧会达到优先转发</li><li>Canonical Format Indicator(CFI)：CFI值为0说明是规范格式,1为非规范格式,它被用在令牌环/源路由FDDiscard介质访问方法中来指示封装帧中所带地址的比特次序信息</li><li>VLAN的ID,取值范围为0-4095,一共4096个,由于0和4095的协议保留取值,所以VLAN ID的取值范围为1-4094每个支持802.1Q协议的交换机发送出来的数据包都会包含这个域,以指明主机属于哪一个VLAN.</li></ol></blockquote><p><strong><code>注意：终端设备在网卡不支持VLAN id的情况下会直接丢弃携带VLAN Tag的数据帧</code></strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117135436.png"></p><h2 id="Hybrid混合链路"><a href="#Hybrid混合链路" class="headerlink" title="Hybrid混合链路"></a>Hybrid混合链路</h2><p><strong>混合链路：华为默认的交换机的端口类型,同时具有access链路与trunk链路,可以部署在任何的交换机链路上</strong></p><blockquote><ol><li>Hybrid端口既可以连接主机,又可以连接交换机</li><li>Hybrid端口可以以Tagged或Untagged方式加入VLAN</li><li>接收报文的处理与trunk接口处理方式一致</li></ol></blockquote><h3 id="发送报文"><a href="#发送报文" class="headerlink" title="发送报文"></a>发送报文</h3><blockquote><p>Port hybrid tagged vlan x:在发送数据帧时允许VLAN x通过,保持tag发送<br>Port hybrid tagged vlan x:在发送数据帧时允许VLAN x 通过,将tag剥离后再发出</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VLAN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MSTP</title>
      <link href="2021/01/17/MSTP/"/>
      <url>2021/01/17/MSTP/</url>
      
        <content type="html"><![CDATA[<h1 id="MSTP"><a href="#MSTP" class="headerlink" title="MSTP"></a>MSTP</h1><h2 id="MSTP概述"><a href="#MSTP概述" class="headerlink" title="MSTP概述"></a>MSTP概述</h2><p><strong>多生成树协议（Multi spanning tree protocol）</strong></p><blockquote><ol><li>MSTP（多生成树实例）：MSTP生成树不是基于VLAN运行的，而是基于Instance（实例）运行的。可以把一个或多个VLAN映射到Instance，然后Instance计算生成树。基于Instance的生成树被称为MSTI（多生成树实例）。</li><li>MSTP为每个Instance维护独立的MSTI。映射到同一个Instance的VLAN将共享同一棵生成树。</li><li>每个MSTP引入了域的概念，我们可以将一个大型的交换网络划分成多个MST域（多生成域）一个MST域内可以包含一台或者多台交换机。同属一个域的交换机必须配置相同的域名，相同的修订级别，以及相同的VLNA与Instance的映射关系。</li><li>每个MST域内都存在一棵IST（内部生成树）缺省时，交换机上的所有VLNA属于Instance０，而IST则是MST域内的交换机对Instance０计算出的一棵生成树。</li><li>缺省时，MST域名是交换设备主控板上管理网口的MAC地址。</li></ol></blockquote><h2 id="单生成树的弊端-部分VLAN路径不通"><a href="#单生成树的弊端-部分VLAN路径不通" class="headerlink" title="单生成树的弊端-部分VLAN路径不通"></a>单生成树的弊端-部分VLAN路径不通</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117130807.png"></p><h2 id="单生成树的弊端-无法实现流量分担"><a href="#单生成树的弊端-无法实现流量分担" class="headerlink" title="单生成树的弊端-无法实现流量分担"></a>单生成树的弊端-无法实现流量分担</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117130826.png"></p><h2 id="单生成树的弊端-次优二层路径"><a href="#单生成树的弊端-次优二层路径" class="headerlink" title="单生成树的弊端-次优二层路径"></a>单生成树的弊端-次优二层路径</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117130849.png"></p><h2 id="多生成树实例解决单生成树弊端"><a href="#多生成树实例解决单生成树弊端" class="headerlink" title="多生成树实例解决单生成树弊端"></a>多生成树实例解决单生成树弊端</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117130905.png"></p><h2 id="实验1"><a href="#实验1" class="headerlink" title="实验1"></a>实验1</h2><p><strong>如图所示：在数据中心交换机SW1、SW2上配置MSTP防止二层环路；要求VLAN10数据流经过SW1转发，VLAN20数据流经过SW2转发，SW1和SW2其中一台宕机时均可无缝切换至另一台进行转发。switch 是两台PC的网关，所配置的参数要求如下：</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">region-name为cisco；</span><br><span class="line">revision版本为1；</span><br><span class="line">实例1，包含VLAN10</span><br><span class="line">实例2，包含VLAN20</span><br><span class="line">SW1作为实例1中的主根，SW2作为实例1的从根；</span><br><span class="line">SW2作为实例2中的主根，SW1作为实例2的从根；</span><br><span class="line">主根优先级为4096，从根优先级为8192；</span><br><span class="line">网关：PC1-192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.254</span> PC2-172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.254</span> </span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117131008.png"></p><h3 id="配置主机地址"><a href="#配置主机地址" class="headerlink" title="配置主机地址"></a>配置主机地址</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PC1：VPCS&gt; ip 192.168.1.1/24 192.168.1.254</span><br><span class="line">PC2：VPCS&gt; ip 172.16.1.1/24 172.16.1.254</span><br></pre></td></tr></table></figure><h3 id="Switch配置"><a href="#Switch配置" class="headerlink" title="Switch配置"></a>Switch配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Switch(config)<span class="selector-id">#vlan</span> 10,20</span><br><span class="line">interface GigabitEthernet0/0</span><br><span class="line"> switchport trunk encapsulation dot1q</span><br><span class="line"> switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet0/1</span><br><span class="line"> switchport trunk encapsulation dot1q</span><br><span class="line"> switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface Vlan10</span><br><span class="line"> ip <span class="selector-tag">address</span> 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.254</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br><span class="line">!</span><br><span class="line">interface Vlan20</span><br><span class="line"> ip <span class="selector-tag">address</span> 172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.254</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.0</span></span><br></pre></td></tr></table></figure><h3 id="S1配置"><a href="#S1配置" class="headerlink" title="S1配置"></a>S1配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">S1(config)<span class="selector-id">#vlan</span> 10,20</span><br><span class="line">！</span><br><span class="line">interface Ethernet0/0</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">！</span><br><span class="line">interface Ethernet0/1</span><br><span class="line"> switchport trunk encapsulation dot1q</span><br><span class="line"> switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/2</span><br><span class="line"> switchport trunk encapsulation dot1q</span><br><span class="line"> switchport mode trunk</span><br><span class="line">！</span><br><span class="line">spanning-tree mst configuration</span><br><span class="line"> name cisco  <span class="selector-id">#--</span>&gt;域名（同一域必须相同）</span><br><span class="line"> revision 1  <span class="selector-id">#--</span>&gt;修订号</span><br><span class="line"> instance 1 vlan 10  <span class="selector-id">#--</span>&gt;实例1关联vlan10</span><br><span class="line"> instance 2 vlan 20  <span class="selector-id">#--</span>&gt;实例2关联vlan20</span><br><span class="line">!</span><br><span class="line">spanning-tree mst 1 priority 4096 <span class="selector-id">#--</span>&gt;设置实例1优先级为4096</span><br><span class="line">spanning-tree mst 2 priority 8192 <span class="selector-id">#--</span>&gt;设置实例2优先级为8192</span><br></pre></td></tr></table></figure><h3 id="S2配置"><a href="#S2配置" class="headerlink" title="S2配置"></a>S2配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">S2(config)<span class="selector-id">#vlan</span> 10,20</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/0</span><br><span class="line"> switchport trunk encapsulation dot1q</span><br><span class="line"> switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/1</span><br><span class="line"> switchport trunk encapsulation dot1q</span><br><span class="line"> switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/2</span><br><span class="line"> switchport trunk encapsulation dot1q</span><br><span class="line"> switchport mode trunk</span><br><span class="line">！</span><br><span class="line">spanning-tree mst configuration</span><br><span class="line"> name cisco</span><br><span class="line"> revision 1</span><br><span class="line"> instance 1 vlan 10</span><br><span class="line"> instance 2 vlan 20</span><br><span class="line">!</span><br><span class="line">spanning-tree mst 1 priority 8192</span><br><span class="line">spanning-tree mst 2 priority 4096</span><br></pre></td></tr></table></figure><h3 id="S3配置"><a href="#S3配置" class="headerlink" title="S3配置"></a>S3配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">S3(config)<span class="selector-id">#vlan</span> 10,20</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/0</span><br><span class="line"> switchport trunk encapsulation dot1q</span><br><span class="line"> switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/1</span><br><span class="line"> switchport trunk encapsulation dot1q</span><br><span class="line"> switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/2</span><br><span class="line"> switchport access vlan 10</span><br><span class="line"> switchport mode access</span><br><span class="line"> spanning-tree portfast edge     <span class="selector-id">#--</span>开启边缘端口</span><br><span class="line"> spanning-tree bpduguard enable  <span class="selector-id">#--</span>&gt;开启BPDU保护</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/3</span><br><span class="line"> switchport access vlan 20</span><br><span class="line"> switchport mode access</span><br><span class="line"> spanning-tree portfast edge</span><br><span class="line"> spanning-tree bpduguard enable</span><br><span class="line">！</span><br><span class="line">spanning-tree mst configuration</span><br><span class="line"> name cisco</span><br><span class="line"> revision 1</span><br><span class="line"> instance 1 vlan 10</span><br><span class="line"> instance 2 vlan 20</span><br></pre></td></tr></table></figure><h2 id="使用show查看配置"><a href="#使用show查看配置" class="headerlink" title="使用show查看配置"></a>使用show查看配置</h2><h3 id="S1配置：实例1关联VLAN10"><a href="#S1配置：实例1关联VLAN10" class="headerlink" title="S1配置：实例1关联VLAN10"></a>S1配置：实例1关联VLAN10</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117131142.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117131153.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117131204.png"></p><h3 id="S2：实例2关联VLAN20"><a href="#S2：实例2关联VLAN20" class="headerlink" title="S2：实例2关联VLAN20"></a>S2：实例2关联VLAN20</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117131220.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117131233.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117131241.png"></p><h3 id="S3：实例1关联着VLAN10，所以E0-1接口是AP口，实例2关联着VLAN20，所以E0-0接口是AP口"><a href="#S3：实例1关联着VLAN10，所以E0-1接口是AP口，实例2关联着VLAN20，所以E0-0接口是AP口" class="headerlink" title="S3：实例1关联着VLAN10，所以E0/1接口是AP口，实例2关联着VLAN20，所以E0/0接口是AP口."></a>S3：实例1关联着VLAN10，所以E0/1接口是AP口，实例2关联着VLAN20，所以E0/0接口是AP口.</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117131302.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117131332.png"></p><h2 id="实验2"><a href="#实验2" class="headerlink" title="实验2"></a>实验2</h2><p><strong>如图所示：某小型办公区域网络由四台电脑，需要将办公区域内的计算机划分成四个区域，分别是vlan10，vlan20，vlan30和vlan40，接入层交换机每个vlan连接一台计算机，要求VLAN10、VLAN20数据流经过S1-1转发，VLAN30、VLAN40数据流经过S1-2转发，S1-1，S1-2其中一台宕机时均可无缝切换至另一台进行转发。所配置的参数要求如下</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">region-name为cisco；</span><br><span class="line">revision版本为1；</span><br><span class="line">实例1，包含VLAN10，VLAN20;</span><br><span class="line">实例2，包含VLAN40，VLAN50;</span><br><span class="line">S1-1作为实例0、1中的主根，S1-2作为实例0、1的从根；</span><br><span class="line">S1-1作为实例2中的主根，S1-2作为实例2的从根；</span><br><span class="line">主根优先级为4096，从根优先级为8192；</span><br><span class="line">地址和网关：</span><br><span class="line">vlan10-192.168.1.1/28，192.168.1.14</span><br><span class="line">vlan20-192.168.1.17/28 ，192.168.1.30</span><br><span class="line">vlan30-172.16.1.1/28，172.16.1.14</span><br><span class="line">vlan40-172.16.1.17/28，172.16.1.30 </span><br></pre></td></tr></table></figure><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117131424.png"></p><h3 id="配置主机地址-1"><a href="#配置主机地址-1" class="headerlink" title="配置主机地址"></a>配置主机地址</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PC1：VPCS&gt; ip 192.168.1.1/28 192.168.1.14</span><br><span class="line">PC2：VPCS&gt; ip 192.168.1.17/28 192.168.1.30</span><br><span class="line">PC3：VPCS&gt; ip 172.16.1.1/28 172.16.1.14</span><br><span class="line">PC3：VPCS&gt; ip 172.16.1.17/28 172.16.1.30</span><br></pre></td></tr></table></figure><h3 id="Switch配置-1"><a href="#Switch配置-1" class="headerlink" title="Switch配置"></a>Switch配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">interface GigabitEthernet0/0</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet0/1</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">! </span><br><span class="line">interface Vlan10</span><br><span class="line">ip <span class="selector-tag">address</span> 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.14</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.240</span></span><br><span class="line">!</span><br><span class="line">interface Vlan20</span><br><span class="line">ip <span class="selector-tag">address</span> 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.30</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.240</span></span><br><span class="line">!</span><br><span class="line">interface Vlan30</span><br><span class="line">ip <span class="selector-tag">address</span> 172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.14</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.240</span></span><br><span class="line">!</span><br><span class="line">interface Vlan40</span><br><span class="line">ip <span class="selector-tag">address</span> 172<span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.30</span> 255<span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.240</span></span><br></pre></td></tr></table></figure><h3 id="S1-1配置"><a href="#S1-1配置" class="headerlink" title="S1-1配置"></a>S1-1配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">interface Ethernet0/0</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/1</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/2</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/3</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">！</span><br><span class="line">spanning-tree mst configuration</span><br><span class="line">name cisco</span><br><span class="line">revision 1</span><br><span class="line">instance 1 vlan 10, 20</span><br><span class="line">instance 2 vlan 30, 40</span><br><span class="line">!</span><br><span class="line">spanning-tree mst 0-1 priority 4096</span><br><span class="line">spanning-tree mst 2 priority 8192</span><br></pre></td></tr></table></figure><h3 id="S1-2配置"><a href="#S1-2配置" class="headerlink" title="S1-2配置"></a>S1-2配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">interface Ethernet0/0</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/1</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/2</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/3</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">！</span><br><span class="line">spanning-tree mst configuration</span><br><span class="line">name cisco</span><br><span class="line">revision 1</span><br><span class="line">instance 1 vlan 10, 20</span><br><span class="line">instance 2 vlan 30, 40</span><br><span class="line">!</span><br><span class="line">spanning-tree mst 0-1 priority 8192</span><br><span class="line">spanning-tree mst 2 priority 4096</span><br></pre></td></tr></table></figure><h3 id="S1-3配置"><a href="#S1-3配置" class="headerlink" title="S1-3配置"></a>S1-3配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">interface Ethernet0/1</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/2</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">！</span><br><span class="line">interface Ethernet0/0</span><br><span class="line">switchport access vlan 10</span><br><span class="line">switchport mode access</span><br><span class="line">spanning-tree portfast edge <span class="selector-id">#--</span>开启边缘端口</span><br><span class="line">spanning-tree bpduguard enable #--&gt;开启BPDU保护&#x27;</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/3</span><br><span class="line">switchport access vlan 20</span><br><span class="line">switchport mode access</span><br><span class="line">spanning-tree portfast edge <span class="selector-id">#--</span>开启边缘端口</span><br><span class="line">spanning-tree bpduguard enable <span class="selector-id">#--</span>&gt;开启BPDU保护</span><br><span class="line">!</span><br><span class="line">spanning-tree mst configuration</span><br><span class="line">name cisco</span><br><span class="line">revision 1</span><br><span class="line">instance 1 vlan 10, 20</span><br><span class="line">instance 2 vlan 30, 40</span><br></pre></td></tr></table></figure><h3 id="S1-4配置"><a href="#S1-4配置" class="headerlink" title="S1-4配置"></a>S1-4配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">interface Ethernet0/1</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/2</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">！</span><br><span class="line">interface Ethernet0/0</span><br><span class="line">switchport access vlan 20</span><br><span class="line">switchport mode access</span><br><span class="line">spanning-tree portfast edge <span class="selector-id">#--</span>开启边缘端口</span><br><span class="line">spanning-tree bpduguard enable <span class="selector-id">#--</span>&gt;开启BPDU保护</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/3</span><br><span class="line">switchport access vlan 10</span><br><span class="line">switchport mode access</span><br><span class="line">spanning-tree portfast edge <span class="selector-id">#--</span>开启边缘端口</span><br><span class="line">spanning-tree bpduguard enable <span class="selector-id">#--</span>&gt;开启BPDU保护</span><br><span class="line">!</span><br><span class="line">spanning-tree mst configuration</span><br><span class="line">name cisco</span><br><span class="line">revision 1</span><br><span class="line">instance 1 vlan 10, 20</span><br><span class="line">instance 2 vlan 30, 40</span><br></pre></td></tr></table></figure><h3 id="主机互ping测试"><a href="#主机互ping测试" class="headerlink" title="主机互ping测试"></a>主机互ping测试</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117131554.png"></p>]]></content>
      
      
      <categories>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> STP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RSTP</title>
      <link href="2021/01/17/RSTP/"/>
      <url>2021/01/17/RSTP/</url>
      
        <content type="html"><![CDATA[<h1 id="RSTP"><a href="#RSTP" class="headerlink" title="RSTP"></a>RSTP</h1><h2 id="RSTP对STP的改进"><a href="#RSTP对STP的改进" class="headerlink" title="RSTP对STP的改进"></a>RSTP对STP的改进</h2><p><strong>端口角色发生变化</strong></p><blockquote><ol><li><p>新增 AP（预备端口）和 BP（备份端口）</p><ul><li><p>AP（预备端口）：</p><p>a. 当交换机的RP端口down掉时，AP端口会立刻成为AP端口，并且立刻进入forwarding状态。</p></li><li><p>BP（备份端口）：</p><p>a. 当交换机从一个接口收到一份BPDU报文，包含的发送者桥ID为本身交换机的桥ID同时BPDU比本地接口的BPDU优时，则接口会被选为BP端口。</p><p>b. 当DP端口down掉时，BP端口需要等待18s的时间才会成为DP端口。</p></li></ul></li><li><p>新增边缘端口：</p><ul><li><p>边缘端口（EP）：由网络管理员手工配置，配置在交换机链接终端设备（电脑，AP，服务器等）</p></li><li><p>特性：</p><p>a. 一旦端口被设置为边缘端口，端口立刻进入forwarding状态。</p><p>b. 边缘端口UP/down不会引起RSTP的网络拓扑变化。</p><p>c. RSTP的网络拓扑不会影响边缘端口的通信。</p></li></ul></li></ol></blockquote><p><strong>RSTP增加的快速机制：</strong></p><blockquote><ol><li>RSTP快速收敛机制一：当交换机的RP端口down掉时，AP端口会立刻成为AP端口，并且立刻进入forwarding状态。</li><li>RSTP快速收敛机制二：当端口设置为边缘端口，会立刻进入forwarding状态</li></ol></blockquote><h2 id="边缘端口的机制："><a href="#边缘端口的机制：" class="headerlink" title="边缘端口的机制："></a>边缘端口的机制：</h2><blockquote><ol><li>边缘端口会每2s向外泛洪BPDU。</li><li>当边缘端口收到BPDU时，会丧失边缘端口的特性，成为普通的RSTP端口执行计算。</li></ol></blockquote><h2 id="开启BPDU保护功能："><a href="#开启BPDU保护功能：" class="headerlink" title="开启BPDU保护功能："></a>开启BPDU保护功能：</h2><blockquote><ol><li>在接口视图下：spanning-tree bpduguard enable</li><li>在全局试图下：spanning-tree portfast edge bpduguard default<ul><li>只针对边缘端口生效，边缘端口收到BPDU报文时直接进入error-down的状态。同时产生一份告警日志通知网络管理员。</li><li>error-down的接口需要网络管理员手动开启，从新开启边缘端口，断电之后在接口模式下no shutdown</li></ul></li></ol></blockquote><h2 id="RSTP端口状态："><a href="#RSTP端口状态：" class="headerlink" title="RSTP端口状态："></a>RSTP端口状态：</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117113730.png"></p><h2 id="针对问题一：P-A机制（1）"><a href="#针对问题一：P-A机制（1）" class="headerlink" title="针对问题一：P/A机制（1）"></a>针对问题一：P/A机制（1）</h2><p><strong><code>P/A（proposa/Agreement）提议/同意</code></strong></p><p><strong>P/A机制的基本原理</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117113837.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117114100.png"></p><h2 id="针对问题一：P-A机制（2）"><a href="#针对问题一：P-A机制（2）" class="headerlink" title="针对问题一：P/A机制（2）"></a>针对问题一：P/A机制（2）</h2><p><strong>RSTP选举原理和STP本质上相同：选举根交换机-选举非根交换机上的根端口-选举指定端口-选举预备端口和备份端口</strong></p><blockquote><p>但是RSTP在选举的过程中加入了“发起请求-回复同意”（P/A机制）这种确认机制由于每个步骤有确认就不需要依赖计时器来保证网络拓扑无环才去转发只需要考虑BPDU发送报文并计算无环拓扑的时间（一般都是秒级）。</p></blockquote><h2 id="针对问题二：根端口快速切换机制"><a href="#针对问题二：根端口快速切换机制" class="headerlink" title="针对问题二：根端口快速切换机制"></a>针对问题二：根端口快速切换机制</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117114321.png"></p><h2 id="针对问题三：次等BPDU处理机制"><a href="#针对问题三：次等BPDU处理机制" class="headerlink" title="针对问题三：次等BPDU处理机制"></a>针对问题三：次等BPDU处理机制</h2><p><strong>S2与S1的直连链路down掉，SWC的AP端口切换成DP端口并进入转发状态秒级时间内完成.</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117114341.png"></p><h2 id="针对问题四：边缘端口的引入"><a href="#针对问题四：边缘端口的引入" class="headerlink" title="针对问题四：边缘端口的引入"></a>针对问题四：边缘端口的引入</h2><p><strong>在RSTP中，交换机连接终端的链路可立即进入转发状态</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117114404.png"></p><h2 id="RSTP-BDPU保护"><a href="#RSTP-BDPU保护" class="headerlink" title="RSTP-BDPU保护"></a>RSTP-BDPU保护</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117114544.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117114558.png"></p><h2 id="RSTP-根保护"><a href="#RSTP-根保护" class="headerlink" title="RSTP-根保护"></a>RSTP-根保护</h2><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117114616.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117114625.png"></p><h2 id="实验1"><a href="#实验1" class="headerlink" title="实验1"></a>实验1</h2><p><strong>如图所示，S1，S2和S3组成一个环型的交换网络，为了消除环路对网络的影响，交换机都运行了RSTP，最终将环形网络结构修剪成无环路的树形网络结构.</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117114714.png"></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">PC4：VPCS&gt; ip 192.168.1.1/24</span><br><span class="line">PC5：VPCS&gt; ip 192.168.1.2/24</span><br><span class="line"></span><br><span class="line">S1：</span><br><span class="line">S1(config)<span class="selector-id">#spanning-tree</span> mo rapid-pvst <span class="selector-id">#--</span>&gt;开启快速生成树</span><br><span class="line"></span><br><span class="line">S2：</span><br><span class="line">S2(config)<span class="selector-id">#spanning-tree</span> mo rapid-pvst <span class="selector-id">#--</span>&gt;开启快速生成树</span><br><span class="line">！</span><br><span class="line">interface Ethernet0/0</span><br><span class="line"> spanning-tree portfast edge     <span class="selector-id">#--</span>&gt;开启边缘端口</span><br><span class="line"> spanning-tree bpduguard enable  <span class="selector-id">#--</span>&gt;开启BPDU保护</span><br><span class="line"></span><br><span class="line">S3：</span><br><span class="line">S3(config)<span class="selector-id">#spanning-tree</span> mode rapid-pvst  <span class="selector-id">#--</span>&gt;开启快速生成树</span><br><span class="line">！</span><br><span class="line">interface Ethernet0/2</span><br><span class="line"> spanning-tree portfast edge      <span class="selector-id">#--</span>&gt;开启边缘端口</span><br><span class="line"> spanning-tree bpduguard enable   <span class="selector-id">#--</span>&gt;开启BPDU保护</span><br></pre></td></tr></table></figure><p><strong><code>思科</code>全局下开启BPDU保护（不建议）</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">S2(config)<span class="selector-id">#spanning-tree</span> portfast edge bpduguard default</span><br></pre></td></tr></table></figure><h3 id="使用show查看配置"><a href="#使用show查看配置" class="headerlink" title="使用show查看配置"></a>使用show查看配置</h3><p><strong>在相同优先级情况下，比较MAC地址，S1-MAC地址是三台交换机中最小的，所以S1为根桥，而S3地址最大，它的e0/0接口会成为AP接口</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117114837.png"></p><h3 id="S1"><a href="#S1" class="headerlink" title="S1"></a>S1</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117114904.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117114913.png"></p><h3 id="S2"><a href="#S2" class="headerlink" title="S2"></a>S2</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117114938.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117114928.png"></p><h3 id="S3"><a href="#S3" class="headerlink" title="S3"></a>S3</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117114951.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117114959.png"></p><p><strong>当S3关闭e0/1接口，RSTP很快就切换了e0/0端口，PC2:长ping：VPCS&gt; ping 192.168.1.1 -tS3关闭e0/1接口，RSTP很快就切换了e0/0端口，PC2:长ping：VPCS&gt; ping  192.168.1.1 -t</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117115022.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117115030.png"></p><h2 id="实验2"><a href="#实验2" class="headerlink" title="实验2"></a>实验2</h2><p><strong>如图所示，S-A，S-B，S-C，S-D组成一个环型的交换网络，为了消除环路对网络的影响，交换机都运行了RSTP，最终将环形网络结构修剪成无环路的树形网络结构</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117115053.png"></p><p><strong>用快速生成树协议实现负载均衡：通过修改桥优先级，控制交换机S-A是人事部的根桥，S-B是人事部的次根桥；控制交换机S-A是研发部的次根桥，S-B是研发部的根桥.</strong></p><p><strong>vlan10-vlan20通过e1/0链路，vlan30-vlan40通过e1/1链路.用快速生成树协议实现负载均衡：通过修改桥优先级，控制交换机S-A是人事部的根桥，S-B是人事部的次根桥；控制交换机S-A是研发部的次根桥，S-B是研发部的根桥，vlan10-vlan20通过e1/0链路，vlan30-vlan40通过e1/1链路.</strong></p><h3 id="开启快速生成树"><a href="#开启快速生成树" class="headerlink" title="开启快速生成树"></a>开启快速生成树</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">S-<span class="selector-tag">A</span>(config)<span class="selector-id">#spanning-tree</span> mode rapid-pvst <span class="selector-id">#--</span>&gt;配置快速生成树</span><br><span class="line">S-<span class="selector-tag">B</span>(config)<span class="selector-id">#spanning-tree</span> mode rapid-pvst </span><br><span class="line">S-C(config)<span class="selector-id">#spanning-tree</span> mode rapid-pvst </span><br><span class="line">S-D(config)<span class="selector-id">#spanning-tree</span> mode rapid-pvst </span><br></pre></td></tr></table></figure><h3 id="S-A"><a href="#S-A" class="headerlink" title="S-A"></a>S-A</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">S-<span class="selector-tag">A</span>(config)<span class="selector-id">#vlan</span> 10,20,30,40   </span><br><span class="line">S-<span class="selector-tag">A</span>(config)<span class="selector-id">#vtp</span> mode server     <span class="selector-id">#--</span>&gt;开启VTP模式为服务器，思科私有</span><br><span class="line">S-<span class="selector-tag">A</span>(config)<span class="selector-id">#vtp</span> domain 123456   <span class="selector-id">#--</span>&gt;配置一个名字</span><br><span class="line">！</span><br><span class="line">spanning-tree vlan 10,20 priority 4096 </span><br><span class="line">spanning-tree vlan 30,40 priority 8192</span><br><span class="line">！</span><br><span class="line">interface Ethernet0/0</span><br><span class="line"> switchport trunk encapsulation dot1q</span><br><span class="line"> switchport mode trunk</span><br><span class="line">！</span><br><span class="line">interface Ethernet1/0</span><br><span class="line"> switchport trunk encapsulation dot1q</span><br><span class="line"> switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface Ethernet1/1</span><br><span class="line"> switchport trunk encapsulation dot1q</span><br><span class="line"> switchport mode trunk</span><br></pre></td></tr></table></figure><h3 id="S-B"><a href="#S-B" class="headerlink" title="S-B"></a>S-B</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">S-<span class="selector-tag">B</span>(config)<span class="selector-id">#vtp</span> mode client          <span class="selector-id">#--</span>&gt;开启VTP模式为客户端</span><br><span class="line">S-<span class="selector-tag">B</span>(config)<span class="selector-id">#vtp</span> domain 123456</span><br><span class="line">！</span><br><span class="line">spanning-tree vlan 10,20 priority 8192</span><br><span class="line">spanning-tree vlan 30,40 priority 4096</span><br><span class="line">interface Ethernet0/1</span><br><span class="line"> switchport trunk encapsulation dot1q</span><br><span class="line"> switchport mode trunk</span><br><span class="line">!         </span><br><span class="line">interface Ethernet1/0</span><br><span class="line"> switchport trunk encapsulation dot1q</span><br><span class="line"> switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface Ethernet1/1</span><br><span class="line"> switchport trunk encapsulation dot1q</span><br><span class="line"> switchport mode trunk</span><br><span class="line"> spanning-tree vlan 30,40 port-priority 64</span><br></pre></td></tr></table></figure><h3 id="S-C"><a href="#S-C" class="headerlink" title="S-C"></a>S-C</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">S-C(config)<span class="selector-id">#vtp</span> mode client <span class="selector-id">#--</span>&gt;开启VTP模式为客户端</span><br><span class="line">S-C(config)<span class="selector-id">#vtp</span> domain 123456</span><br><span class="line">！</span><br><span class="line">interface Ethernet0/1</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/2</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">！ </span><br><span class="line">interface Ethernet0/0</span><br><span class="line">spanning-tree portfast edge <span class="selector-id">#--</span>&gt;开启边缘端口 </span><br><span class="line">spanning-tree bpduguard enable <span class="selector-id">#--</span>&gt;开启BPDU保护</span><br></pre></td></tr></table></figure><h3 id="S-D"><a href="#S-D" class="headerlink" title="S-D"></a>S-D</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">S-D(config)<span class="selector-id">#vtp</span> mode client <span class="selector-id">#--</span>&gt;开启VTP模式为客户端</span><br><span class="line">S-D(config)<span class="selector-id">#vtp</span> domain 123456</span><br><span class="line">！</span><br><span class="line">interface Ethernet0/0</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">!</span><br><span class="line">interface Ethernet0/2</span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line">switchport mode trunk</span><br><span class="line">！ </span><br><span class="line">interface Ethernet0/0</span><br><span class="line">spanning-tree portfast edge    <span class="selector-id">#--</span>&gt;开启边缘端口 </span><br><span class="line">spanning-tree bpduguard enable <span class="selector-id">#--</span>&gt;开启BPDU保护</span><br></pre></td></tr></table></figure><h2 id="使用show查看配置-1"><a href="#使用show查看配置-1" class="headerlink" title="使用show查看配置"></a>使用show查看配置</h2><h3 id="S-A-1"><a href="#S-A-1" class="headerlink" title="S-A"></a>S-A</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117115336.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117115348.png"></p><h3 id="S-B-1"><a href="#S-B-1" class="headerlink" title="S-B"></a>S-B</h3><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117115422.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117115431.png"></p>]]></content>
      
      
      <categories>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> STP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STP</title>
      <link href="2021/01/17/STP/"/>
      <url>2021/01/17/STP/</url>
      
        <content type="html"><![CDATA[<h1 id="STP"><a href="#STP" class="headerlink" title="STP"></a>STP</h1><h2 id="二层环路的影响"><a href="#二层环路的影响" class="headerlink" title="二层环路的影响"></a>二层环路的影响</h2><p>1）广播风暴：数据帧不断的循环发送，导致需要耗费大量的CPU处理<br>2）MAC地址表的震荡：由于交换机的接口不断地收到同一个数据帧导致MAC地址表项不断被覆盖，交换机需要耗费大量的开销维护MAC地址表</p><blockquote><p>总结：如果不解决环路会大量消耗交换机的设备开销带宽资源，当CPU使用率过高很可能导致交换机开启过热保护，导致交换机断点，业务中断</p></blockquote><h2 id="为什么需要生成树"><a href="#为什么需要生成树" class="headerlink" title="为什么需要生成树"></a>为什么需要生成树</h2><p>1）生成树的出现不是真的需要，而是间接的需要<br>2）二层环境中需要备份和冗余</p><p><strong>在这种环境中没有环路，但是缺少了备份</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117111155.png"></p><p><strong>在这种环境中解决了备份，但是不做处理会导致环路，这时STP就有发挥它的作用了</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117111306.png"></p><h2 id="STP作用"><a href="#STP作用" class="headerlink" title="STP作用"></a>STP作用</h2><p><strong>STP在保证网络的冗余性的同时，保证交换机网络中不会出现二层环路</strong></p><blockquote><p>原理：通过在逻辑上阻塞某一些端口，使交换机成为树形网络，破除环路在链路上或设备发生故障时，又重新启动阻塞端口，使网络恢复数据转发.</p></blockquote><h2 id="STP如何计算阻塞端口"><a href="#STP如何计算阻塞端口" class="headerlink" title="STP如何计算阻塞端口"></a>STP如何计算阻塞端口</h2><p><strong>STP选举根桥与端口角色的过程都是由交换机自主完成的，交换机选举中都会发送一种包，这种数据包叫做BPDU(Bridge Protocol Data Unit)网桥协议数据单元</strong></p><blockquote><ol><li><p>通过选举根桥</p><ul><li> 根桥是整个交换网络中心的数据转发</li><li>根桥选举通过桥ID+MAC地址<br> 选举规则：先比较优先级，优先级默认为32768.（可以调整，必须是4096的倍数，数值越小的越优先）如果优先级相同，则比较MAC地址的大小，数值小的优先，从左往右比.</li><li>端口ID：端口的优先级+端口号<br> 选举规则：先比较端口的优先级，默认为128，可调整（只能是16的倍数，数值小的优先）如果优先级相同，则才比较端口编号，数值小的优先</li></ul></li><li><p>每个非根选取一个根端口</p><ul><li> 根端口（RP）：在每一个非根桥交换机上都有，且只有一个，接收最优的BPDU，用于转发数据</li><li>通过根路径开销（cost）：以非根桥交换机的端口为出发点，沿途经过链路去访问根桥交换机的开销值进行累加，其中总开销最小的为根路径开销，则被选择成RP端口.<br> 选举规则：非根桥与根桥交换机相连的接口都为RP端口.</li></ul></li><li><p>选举指定端口</p><ul><li>指定端口（DP）：在这段链路上，转发BPDU包给其他接口的叫做指定端口<br>  选举规则：与根桥ID的比较规则完全一致</li></ul></li><li><p>阻塞非指定端口</p><ul><li>用于逻辑上阻塞数据，不转发数据从而破坏环路.<br>  选举规则：一个端口既不是指定端口也不是根端口，则被选为AP端口</li></ul></li></ol></blockquote><h2 id="STP的端口状态"><a href="#STP的端口状态" class="headerlink" title="STP的端口状态"></a>STP的端口状态</h2><blockquote><ol><li>disable：未启用STP的状态，不接收、不发送、不处理、BPDU报文。</li><li>blocking：阻塞状态，在选择根桥交换机时或者当端口被选为AP端口时停留的状态。发送、接受处理BPDU，不传发数据。</li><li>listeningL：侦听状态，选举端口角色。发送、接收、处理BPDU，不转发数据</li><li>learning：学习状态，学习mac地址表。发送、接收、处理BPDU，不转发数据。</li><li>forwarding：转发状态，学习mac地址表，转发数据，发送、接收、处理BPDU。</li></ol></blockquote><h2 id="STP的计时器"><a href="#STP的计时器" class="headerlink" title="STP的计时器"></a>STP的计时器</h2><blockquote><ol><li>hello：更新计时器，更新计时器默认为２S，DP端口会每２S向外泛洪BPDU报文，实时地监控网络的变化情况。</li><li>max age :最大老化时间20S，端口存放BPDU的时间。当端口在20S内未收到对应的BPDU时，会将端口存放的BPDU丢弃，此时STP也认为网络拓扑发生变化。</li><li>message age:信息延时，规定了网络的直径。<br>端口存放BPDU的时间为：maxage - message age 20s -延时</li><li>forward delay：转发延时，默认的时间为15S，作用是为了防止临时环路。<br>意思：交换机抢占了新的根桥。</li></ol></blockquote><h2 id="STP的不足问题"><a href="#STP的不足问题" class="headerlink" title="STP的不足问题"></a>STP的不足问题</h2><p><strong>问题1：初始化状态需要30秒的时间才能收敛</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117111900.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117111921.png"></p><p><strong>S3与S1的直连链路down掉，AP端口切换成RP端口并进入转发状态至少需要经过30S</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117111940.png"></p><p><strong>问题3：S1与S2直连链路down掉，则S3的AP端口切换成DP端口并进入发状态大约需要50s：</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117112009.png"></p><p><strong>问题4：交换机连接终端的链路进入转发需要经过30s</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117112031.png"></p><p><strong>问题5：STP的拓扑变更机制</strong></p><blockquote><p>TC（Topology change）拓扑改变:先由变更点朝根桥方向发送TCN消息收到该消息的上游交换机就会回复TCA消息进行确认；最后TCN消息到达根桥后，再由根桥发送TC消息通知设备删除桥MAC地址表项，机制复杂，效率低下。</p></blockquote><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117112111.png"></p><p><strong>问题6：STP的其他不足之处–端口状态</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117112130.png"></p>]]></content>
      
      
      <categories>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> STP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EVE-NG搭建</title>
      <link href="2021/01/16/EVE-NG%E6%90%AD%E5%BB%BA/"/>
      <url>2021/01/16/EVE-NG%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="EVE模拟器及镜像介绍"><a href="#EVE模拟器及镜像介绍" class="headerlink" title="EVE模拟器及镜像介绍"></a>EVE模拟器及镜像介绍</h1><p>EVE所需的连接工具及镜像.<br><a href="https://pan.baidu.com/s/1KaqNo644ulijjuR4ZWGhFQ">https://pan.baidu.com/s/1KaqNo644ulijjuR4ZWGhFQ</a> 提取码：5571</p><h2 id="EVE-NG介绍"><a href="#EVE-NG介绍" class="headerlink" title="EVE-NG介绍"></a>EVE-NG介绍</h2><p>EVE模拟器跟流行的PacketTracert、GNS3、eNSP安装即可使用的软件不同。EVE本身就是一个系统，和我们日常用的Windows、Mac以及Linux是一个层级的产品，底层使用的是Ubuntu系统，默认账户root，密码eve。默认账户登录进去后，系统开始提示修改密码等，建议密码继续保持eve，其他操作都选默认，有修改需求的后期再改</p><h2 id="镜像简介绍"><a href="#镜像简介绍" class="headerlink" title="镜像简介绍"></a>镜像简介绍</h2><h3 id="Dynamic"><a href="#Dynamic" class="headerlink" title="Dynamic"></a>Dynamic</h3><p>Dynamic用于模拟思科（Cisco）的路由器，基于它演变的模拟器有小凡、工大瑞普、GNS3等。它可以运行标准的IOS镜像，虽然此模拟器比较陈旧，但仍然有很多网工愿意使用。EVE-NG支持Cisco IOS 1710、3725与7206.</p><h3 id="IOL"><a href="#IOL" class="headerlink" title="IOL"></a>IOL</h3><p>IOL为IOS on Linux的简写，IOL是指将思科的路由器、交换机ios系统运行在Linux操作系统之上，二层交换机特性支持丰富，基于它演变的模拟器有WEB-IOU。IOL可以运行在基于x86平台的任意Linux发行版系统上，支持交换机高级特性，占用资源更少，启动快等优点。运行IOL需要两个文件，一个是以bin为后缀的镜像，一个是以iourc为名的license文件，iourc是通过名为CiscoIOUKeygen.py的工具自动生成的</p><h3 id="QEMU"><a href="#QEMU" class="headerlink" title="QEMU"></a>QEMU</h3><p>QEMU（Quick Emulator）是一套开源产品，可以帮助EVE-NG运行更多的虚拟设备，完成复杂实验，越来越多的设备商开始开发并释放出适配KVM环境的系统，EVE-NG可以协助qcow2镜像运行更多设备，提高可玩性。EVE-NG需要QEMU镜像的后缀名为qcow2，该文件本质是一个操作系统的虚拟硬盘文件，正因如此，可以通过自己手动制作镜像几乎可以模拟任何硬件设备</p><h2 id="VM虚拟机的安装"><a href="#VM虚拟机的安装" class="headerlink" title="VM虚拟机的安装"></a>VM虚拟机的安装</h2><p><strong>搭建EVE-NG使用的是VMware虚拟机，本章不会讲解，请自行上网查询安装VMware</strong></p><h2 id="搭建EVE-NG"><a href="#搭建EVE-NG" class="headerlink" title="搭建EVE-NG"></a>搭建EVE-NG</h2><p><strong>右键EVE压缩包，选择打开方式，选择VMware Workstation</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsjmal2316/typora-image/img/image-20210116214054316.png"></p><p><strong>选择存储虚拟机的路径，尽量不要安装在C盘，虚拟机名称默认即可，接着选择导入</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsjmal2316/typora-image/img/image-20210116214320101.png"></p><p><strong>等待导入进度</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsjmal2316/typora-image/img/image-20210116214320101.png"></p><p><strong>选中EVE，右键选择设置</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsjmal2316/typora-image/img/image-20210116214354554.png"></p><p><strong>选择内存——按自己的内存情况，8G内存的可以选择4-6G使用，16G可以选择8-12G或更高使用</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsjmal2316/typora-image/img/image-20210116214438470.png"></p><p><strong>接着选择处理器——勾选处理器数量（P）:4,每个处理器的内核数量（C）:1–&gt;确保是“虚拟化Intel VT -x/EPT 或 AMD-V/RVI(V)”</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsjmal2316/typora-image/img/image-20210116214506948.png"></p><p><strong>设置完成，开启虚拟机</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsjmal2316/typora-image/img/image-20210116214525123.png"></p><p><strong>开启虚拟机来到第一个页面</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsjmal2316/typora-image/img/image-20210116214542480.png"></p><p><strong>第二个页面输入用户root，密码eve</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsjmal2316/typora-image/img/image-20210116214614717.png"></p><p><strong>第三–四个页面，虚拟机会让你重新设置密码，保持密码还是eve即可，回车</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsjmal2316/typora-image/img/image-20210116214710186.png"></p><p><strong>第五页面直到最后都选择默认，按下回车即可</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsjmal2316/typora-image/img/image-20210116214731206.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117103116.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117103131.png"></p><p><strong>接着虚拟机会重新启动，等待虚拟器重启完成，再次输入root用户和之前设置的密码就搭建完成</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117103407.png"></p><p><strong>重启的完后页面会多出了一个IP地址，这个IP地址我们可以使用浏览器进行浏览，建议使用firefox及Google浏览器访问. 推荐firefox访问</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117103431.png"></p><p><strong>输入IP地址，默认用户admin，密码eve，选择html5 conlose（web方式）登录即可以使用，但是并不推荐，因为web方式站不支持对网络设备进行抓包。在这推荐使用Native console（本地登录）但是必须得安装EVE-NG的客户端。安装的客户端已在上面发的网盘连接中，需自行安装，这里不演示，只需要都下一步即可安装</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117103455.png"></p><p><strong>登录之后，可以看一些设置，管理，系统，信息.简单说一下</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117103518.png"></p><p><strong><code>管理</code>：用户管理，创建用户，一般都不怎么需要创建</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117104324.png"></p><p><strong><code>系统</code>：可以查看系统日志和系统状态，状态有CPU，内存，swap和磁盘的使用情况，还有自己运行的多少个节点</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117104523.png"></p><p><strong><code>信息</code>：关于和论坛，可以让你了解更多的东西</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117104530.png"></p><p><strong><code>主页</code>—&gt;新建一个标签标签并保存</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117104611.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117104630.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117104716.png"></p><p><strong>如果没有右键看不到节点选项为蓝色，说明没有该镜像，需要拉去，下述有讲解传输拉去的方法和软件</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117104728.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117104738.png"></p><h2 id="安装EVE-NG客户端与使用工具导入镜像"><a href="#安装EVE-NG客户端与使用工具导入镜像" class="headerlink" title="安装EVE-NG客户端与使用工具导入镜像"></a>安装EVE-NG客户端与使用工具导入镜像</h2><p>官方提供了一个自带的客户端安装包集，里面内置了Putty、UltraVNC、Wireshark，导入镜像使用WinSCP工具导入会更简单. 两个工具安装时候选择默认安装即可</p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117104805.png"></p><h3 id="什么是-WinSCP"><a href="#什么是-WinSCP" class="headerlink" title="什么是 WinSCP"></a>什么是 WinSCP</h3><p>WinSCP 是一个 Windows 环境下使用的 SSH 的开源化 SFTP 客户端。同时支持 SCP 协议。它的主要功能是在本地与远程计算机间安全地复制文件，并且可以直接编辑文件</p><h3 id="传输镜像和修改权限"><a href="#传输镜像和修改权限" class="headerlink" title="传输镜像和修改权限"></a>传输镜像和修改权限</h3><p>安装完EVE客户端和winSCP之后，打开winSCPU新建一个站点，输入虚拟机EVE的IP地址，账号和密码，点击登录</p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117104927.png"></p><p><strong>选择是，连接成功</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117104950.png"></p><p><strong>找到放置EVE-NG放置镜像的目录</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117105013.png"></p><p><strong>在Windows文件下找到IOL镜像，拖动至EVE-NG文件下的<code>/opt/unetlab/addone/iol/bin</code></strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117105056.png"></p><p><strong>L2表示是2层交换机，L3表示三层，L2L3都有很多种，其实都差不多，选择一个即可，重要的是圈起来的两个文件CiscoIOUKeygen.py和iourc，必须得一起放置，否者会导致交换机和路由器开不了机</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117105119.png"></p><p><strong>这里选择IOL，原因是因为它不需要耗费太多的内存和CPU，开机速度比一般的镜像要快，普通实验已经够用了</strong></p><p><strong>接着设置IOL镜像所有文件的权限，右键属性，将所有权限勾选，避免搭建时候出现问题</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117105155.png"></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117105218.png"></p><h2 id="通过Native-console登录和使用xshell连接"><a href="#通过Native-console登录和使用xshell连接" class="headerlink" title="通过Native console登录和使用xshell连接"></a>通过Native console登录和使用xshell连接</h2><p><strong>有了EVE-NG客户端，在登录时可以使用Native console模式进行登录，返回登录页面，选择Native console模式</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117105325.png"></p><p><strong>可以选择默认的vpcs连接，点击几下交换机就会出现，这是安装了EVE-NG客户端自带的</strong></p><blockquote><p>提示：如果你有安装xshell或SecureCRT软件，此时用firefor浏览会在上方弹出一个选择使用什么连接，这时你可以选择你的xshell或SecureCRT软件就可以连接到交换机了</p></blockquote><p><strong>这里连接EVE-NG模拟器使用的客户端是xshell，点击几下交换机连接到xshell，连接到的名称是ip+端口，可以右键修改自己想要的名称</strong></p><p><img src="https://my-oss-image.oss-cn-guangzhou.aliyuncs.com/img/20210117105408.png"></p><p><strong>如果使用SecureCRT连接，就不需改名，它会自动修改</strong></p><blockquote><p>注意：这里使用的是firefor做演示，使用firefor的好处是可以弹出直接使用xshell连接，Google的需要自己寻找xshell的位置，各有各的好处。希望能帮到大家</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 路由交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EVE-NG </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
